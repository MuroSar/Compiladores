   0  $accept : programa $end

   1  programa : bloque

   2  bloque : bloque_comun
   3         | declaracion_funcion
   4         | bloque bloque_comun
   5         | bloque declaracion_funcion

   6  bloque_comun : bloque_control
   7               | declaracion

   8  bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}'

   9  bloque_sentencias_funcion : sentencias
  10                            | declaracion
  11                            | bloque_sentencias_funcion sentencias
  12                            | bloque_sentencias_funcion declaracion

  13  bloque_control : sentencias
  14                 | BEGIN bloque_sentencias END '.'

  15  bloque_sentencias : sentencias
  16                    | bloque_sentencias sentencias

  17  sentencias : sentencia_unica_control
  18             | sentencia_unica_ejecutable

  19  sentencia_unica_control : sentencia_if
  20                          | sentencia_switch

  21  sentencia_unica_ejecutable : asignacion
  22                             | salida
  23                             | llamado_funcion

  24  declaracion_funcion : encabezado_funcion bloque_funcion

  25  encabezado_funcion : tipo FUNCTION IDENTIFICADOR
  26                     | tipo MOVE FUNCTION IDENTIFICADOR

  27  declaracion : lista_variables ':' tipo '.'

  28  $$1 :

  29  sentencia_if : IF '(' condicion ')' THEN $$1 cuerpo_if

  30  cuerpo_if : bloque_control END_IF '.'

  31  $$2 :

  32  cuerpo_if : bloque_control $$2 ELSE bloque_control END_IF '.'

  33  $$3 :

  34  sentencia_switch : SWITCH '(' IDENTIFICADOR ')' $$3 cuerpo_switch

  35  cuerpo_switch : '{' rep_switch '}' '.'

  36  rep_switch : CASE CONSTANTE ':' bloque_control
  37             | rep_switch CASE CONSTANTE ':' bloque_control

  38  asignacion : IDENTIFICADOR '=' expresion '.'

  39  $$4 :

  40  $$5 :

  41  salida : OUT '(' CADENA ')' '.' $$4 OUT error CADENA ')' '.' $$5 OUT '(' CADENA error '.'

  42  llamado_funcion : IDENTIFICADOR '(' ')' '.'
  43                  | IDENTIFICADOR error ')' '.'
  44                  | IDENTIFICADOR '(' error '.'
  45                  | IDENTIFICADOR '(' ')' error

  46  lista_variables : IDENTIFICADOR
  47                  | lista_variables ',' IDENTIFICADOR

  48  condicion : condicion operador expresion
  49            | expresion operador expresion

  50  operador : '<'
  51           | '>'
  52           | "<="
  53           | ">="
  54           | "<>"
  55           | "=="

  56  expresion : expresion '+' termino
  57            | expresion '-' termino
  58            | termino

  59  termino : termino '*' factor
  60          | termino '/' factor
  61          | factor

  62  factor : IDENTIFICADOR
  63         | CONSTANTE

  64  tipo : LONG
  65       | DOUBLE

state 0
	$accept : . programa $end  (0)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	programa  goto 8
	bloque  goto 9
	bloque_comun  goto 10
	declaracion_funcion  goto 11
	bloque_control  goto 12
	declaracion  goto 13
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	encabezado_funcion  goto 22
	tipo  goto 23
	lista_variables  goto 24


state 1
	asignacion : IDENTIFICADOR . '=' expresion '.'  (38)
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (42)
	llamado_funcion : IDENTIFICADOR . error ')' '.'  (43)
	llamado_funcion : IDENTIFICADOR . '(' error '.'  (44)
	llamado_funcion : IDENTIFICADOR . '(' ')' error  (45)
	lista_variables : IDENTIFICADOR .  (46)

	error  shift 25
	'('  shift 26
	'='  shift 27
	':'  reduce 46
	','  reduce 46


state 2
	sentencia_if : IF . '(' condicion ')' THEN $$1 cuerpo_if  (29)

	'('  shift 28
	.  error


state 3
	bloque_control : BEGIN . bloque_sentencias END '.'  (14)

	IDENTIFICADOR  shift 29
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	.  error

	sentencias  goto 30
	bloque_sentencias  goto 31
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 4
	salida : OUT . '(' CADENA ')' '.' $$4 OUT error CADENA ')' '.' $$5 OUT '(' CADENA error '.'  (41)

	'('  shift 32
	.  error


state 5
	tipo : LONG .  (64)

	.  reduce 64


state 6
	tipo : DOUBLE .  (65)

	.  reduce 65


state 7
	sentencia_switch : SWITCH . '(' IDENTIFICADOR ')' $$3 cuerpo_switch  (34)

	'('  shift 33
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque .  (1)
	bloque : bloque . bloque_comun  (4)
	bloque : bloque . declaracion_funcion  (5)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	$end  reduce 1

	bloque_comun  goto 34
	declaracion_funcion  goto 35
	bloque_control  goto 12
	declaracion  goto 13
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	encabezado_funcion  goto 22
	tipo  goto 23
	lista_variables  goto 24


state 10
	bloque : bloque_comun .  (2)

	.  reduce 2


state 11
	bloque : declaracion_funcion .  (3)

	.  reduce 3


state 12
	bloque_comun : bloque_control .  (6)

	.  reduce 6


state 13
	bloque_comun : declaracion .  (7)

	.  reduce 7


state 14
	bloque_control : sentencias .  (13)

	.  reduce 13


state 15
	sentencias : sentencia_unica_control .  (17)

	.  reduce 17


state 16
	sentencias : sentencia_unica_ejecutable .  (18)

	.  reduce 18


state 17
	sentencia_unica_control : sentencia_if .  (19)

	.  reduce 19


state 18
	sentencia_unica_control : sentencia_switch .  (20)

	.  reduce 20


state 19
	sentencia_unica_ejecutable : asignacion .  (21)

	.  reduce 21


state 20
	sentencia_unica_ejecutable : salida .  (22)

	.  reduce 22


state 21
	sentencia_unica_ejecutable : llamado_funcion .  (23)

	.  reduce 23


state 22
	declaracion_funcion : encabezado_funcion . bloque_funcion  (24)

	'{'  shift 36
	.  error

	bloque_funcion  goto 37


state 23
	encabezado_funcion : tipo . FUNCTION IDENTIFICADOR  (25)
	encabezado_funcion : tipo . MOVE FUNCTION IDENTIFICADOR  (26)

	FUNCTION  shift 38
	MOVE  shift 39
	.  error


state 24
	declaracion : lista_variables . ':' tipo '.'  (27)
	lista_variables : lista_variables . ',' IDENTIFICADOR  (47)

	':'  shift 40
	','  shift 41
	.  error


state 25
	llamado_funcion : IDENTIFICADOR error . ')' '.'  (43)

	')'  shift 42
	.  error


state 26
	llamado_funcion : IDENTIFICADOR '(' . ')' '.'  (42)
	llamado_funcion : IDENTIFICADOR '(' . error '.'  (44)
	llamado_funcion : IDENTIFICADOR '(' . ')' error  (45)

	error  shift 43
	')'  shift 44
	.  error


state 27
	asignacion : IDENTIFICADOR '=' . expresion '.'  (38)

	IDENTIFICADOR  shift 45
	CONSTANTE  shift 46
	.  error

	expresion  goto 47
	termino  goto 48
	factor  goto 49


state 28
	sentencia_if : IF '(' . condicion ')' THEN $$1 cuerpo_if  (29)

	IDENTIFICADOR  shift 45
	CONSTANTE  shift 46
	.  error

	expresion  goto 50
	condicion  goto 51
	termino  goto 48
	factor  goto 49


state 29
	asignacion : IDENTIFICADOR . '=' expresion '.'  (38)
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (42)
	llamado_funcion : IDENTIFICADOR . error ')' '.'  (43)
	llamado_funcion : IDENTIFICADOR . '(' error '.'  (44)
	llamado_funcion : IDENTIFICADOR . '(' ')' error  (45)

	error  shift 25
	'('  shift 26
	'='  shift 27
	.  error


state 30
	bloque_sentencias : sentencias .  (15)

	.  reduce 15


state 31
	bloque_control : BEGIN bloque_sentencias . END '.'  (14)
	bloque_sentencias : bloque_sentencias . sentencias  (16)

	IDENTIFICADOR  shift 29
	IF  shift 2
	END  shift 52
	OUT  shift 4
	SWITCH  shift 7
	.  error

	sentencias  goto 53
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 32
	salida : OUT '(' . CADENA ')' '.' $$4 OUT error CADENA ')' '.' $$5 OUT '(' CADENA error '.'  (41)

	CADENA  shift 54
	.  error


state 33
	sentencia_switch : SWITCH '(' . IDENTIFICADOR ')' $$3 cuerpo_switch  (34)

	IDENTIFICADOR  shift 55
	.  error


state 34
	bloque : bloque bloque_comun .  (4)

	.  reduce 4


state 35
	bloque : bloque declaracion_funcion .  (5)

	.  reduce 5


state 36
	bloque_funcion : '{' . bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}'  (8)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	.  error

	declaracion  goto 56
	bloque_sentencias_funcion  goto 57
	sentencias  goto 58
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	lista_variables  goto 24


state 37
	declaracion_funcion : encabezado_funcion bloque_funcion .  (24)

	.  reduce 24


state 38
	encabezado_funcion : tipo FUNCTION . IDENTIFICADOR  (25)

	IDENTIFICADOR  shift 59
	.  error


state 39
	encabezado_funcion : tipo MOVE . FUNCTION IDENTIFICADOR  (26)

	FUNCTION  shift 60
	.  error


state 40
	declaracion : lista_variables ':' . tipo '.'  (27)

	LONG  shift 5
	DOUBLE  shift 6
	.  error

	tipo  goto 61


state 41
	lista_variables : lista_variables ',' . IDENTIFICADOR  (47)

	IDENTIFICADOR  shift 62
	.  error


state 42
	llamado_funcion : IDENTIFICADOR error ')' . '.'  (43)

	'.'  shift 63
	.  error


state 43
	llamado_funcion : IDENTIFICADOR '(' error . '.'  (44)

	'.'  shift 64
	.  error


state 44
	llamado_funcion : IDENTIFICADOR '(' ')' . '.'  (42)
	llamado_funcion : IDENTIFICADOR '(' ')' . error  (45)

	error  shift 65
	'.'  shift 66
	.  error


state 45
	factor : IDENTIFICADOR .  (62)

	.  reduce 62


state 46
	factor : CONSTANTE .  (63)

	.  reduce 63


state 47
	asignacion : IDENTIFICADOR '=' expresion . '.'  (38)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	'.'  shift 67
	'+'  shift 68
	'-'  shift 69
	.  error


state 48
	expresion : termino .  (58)
	termino : termino . '*' factor  (59)
	termino : termino . '/' factor  (60)

	'*'  shift 70
	'/'  shift 71
	')'  reduce 58
	'.'  reduce 58
	'<'  reduce 58
	'>'  reduce 58
	"<="  reduce 58
	">="  reduce 58
	"<>"  reduce 58
	"=="  reduce 58
	'+'  reduce 58
	'-'  reduce 58


state 49
	termino : factor .  (61)

	.  reduce 61


state 50
	condicion : expresion . operador expresion  (49)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	'<'  shift 72
	'>'  shift 73
	"<="  shift 74
	">="  shift 75
	"<>"  shift 76
	"=="  shift 77
	'+'  shift 68
	'-'  shift 69
	.  error

	operador  goto 78


state 51
	sentencia_if : IF '(' condicion . ')' THEN $$1 cuerpo_if  (29)
	condicion : condicion . operador expresion  (48)

	')'  shift 79
	'<'  shift 72
	'>'  shift 73
	"<="  shift 74
	">="  shift 75
	"<>"  shift 76
	"=="  shift 77
	.  error

	operador  goto 80


state 52
	bloque_control : BEGIN bloque_sentencias END . '.'  (14)

	'.'  shift 81
	.  error


state 53
	bloque_sentencias : bloque_sentencias sentencias .  (16)

	.  reduce 16


state 54
	salida : OUT '(' CADENA . ')' '.' $$4 OUT error CADENA ')' '.' $$5 OUT '(' CADENA error '.'  (41)

	')'  shift 82
	.  error


state 55
	sentencia_switch : SWITCH '(' IDENTIFICADOR . ')' $$3 cuerpo_switch  (34)

	')'  shift 83
	.  error


state 56
	bloque_sentencias_funcion : declaracion .  (10)

	.  reduce 10


state 57
	bloque_funcion : '{' bloque_sentencias_funcion . RETURN '(' expresion ')' '.' '}'  (8)
	bloque_sentencias_funcion : bloque_sentencias_funcion . sentencias  (11)
	bloque_sentencias_funcion : bloque_sentencias_funcion . declaracion  (12)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	RETURN  shift 84
	.  error

	declaracion  goto 85
	sentencias  goto 86
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	lista_variables  goto 24


state 58
	bloque_sentencias_funcion : sentencias .  (9)

	.  reduce 9


state 59
	encabezado_funcion : tipo FUNCTION IDENTIFICADOR .  (25)

	.  reduce 25


state 60
	encabezado_funcion : tipo MOVE FUNCTION . IDENTIFICADOR  (26)

	IDENTIFICADOR  shift 87
	.  error


state 61
	declaracion : lista_variables ':' tipo . '.'  (27)

	'.'  shift 88
	.  error


state 62
	lista_variables : lista_variables ',' IDENTIFICADOR .  (47)

	.  reduce 47


state 63
	llamado_funcion : IDENTIFICADOR error ')' '.' .  (43)

	.  reduce 43


state 64
	llamado_funcion : IDENTIFICADOR '(' error '.' .  (44)

	.  reduce 44


state 65
	llamado_funcion : IDENTIFICADOR '(' ')' error .  (45)

	.  reduce 45


state 66
	llamado_funcion : IDENTIFICADOR '(' ')' '.' .  (42)

	.  reduce 42


state 67
	asignacion : IDENTIFICADOR '=' expresion '.' .  (38)

	.  reduce 38


state 68
	expresion : expresion '+' . termino  (56)

	IDENTIFICADOR  shift 45
	CONSTANTE  shift 46
	.  error

	termino  goto 89
	factor  goto 49


state 69
	expresion : expresion '-' . termino  (57)

	IDENTIFICADOR  shift 45
	CONSTANTE  shift 46
	.  error

	termino  goto 90
	factor  goto 49


state 70
	termino : termino '*' . factor  (59)

	IDENTIFICADOR  shift 45
	CONSTANTE  shift 46
	.  error

	factor  goto 91


state 71
	termino : termino '/' . factor  (60)

	IDENTIFICADOR  shift 45
	CONSTANTE  shift 46
	.  error

	factor  goto 92


state 72
	operador : '<' .  (50)

	.  reduce 50


state 73
	operador : '>' .  (51)

	.  reduce 51


state 74
	operador : "<=" .  (52)

	.  reduce 52


state 75
	operador : ">=" .  (53)

	.  reduce 53


state 76
	operador : "<>" .  (54)

	.  reduce 54


state 77
	operador : "==" .  (55)

	.  reduce 55


state 78
	condicion : expresion operador . expresion  (49)

	IDENTIFICADOR  shift 45
	CONSTANTE  shift 46
	.  error

	expresion  goto 93
	termino  goto 48
	factor  goto 49


state 79
	sentencia_if : IF '(' condicion ')' . THEN $$1 cuerpo_if  (29)

	THEN  shift 94
	.  error


state 80
	condicion : condicion operador . expresion  (48)

	IDENTIFICADOR  shift 45
	CONSTANTE  shift 46
	.  error

	expresion  goto 95
	termino  goto 48
	factor  goto 49


state 81
	bloque_control : BEGIN bloque_sentencias END '.' .  (14)

	.  reduce 14


state 82
	salida : OUT '(' CADENA ')' . '.' $$4 OUT error CADENA ')' '.' $$5 OUT '(' CADENA error '.'  (41)

	'.'  shift 96
	.  error


state 83
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' . $$3 cuerpo_switch  (34)
	$$3 : .  (33)

	.  reduce 33

	$$3  goto 97


state 84
	bloque_funcion : '{' bloque_sentencias_funcion RETURN . '(' expresion ')' '.' '}'  (8)

	'('  shift 98
	.  error


state 85
	bloque_sentencias_funcion : bloque_sentencias_funcion declaracion .  (12)

	.  reduce 12


state 86
	bloque_sentencias_funcion : bloque_sentencias_funcion sentencias .  (11)

	.  reduce 11


state 87
	encabezado_funcion : tipo MOVE FUNCTION IDENTIFICADOR .  (26)

	.  reduce 26


state 88
	declaracion : lista_variables ':' tipo '.' .  (27)

	.  reduce 27


state 89
	expresion : expresion '+' termino .  (56)
	termino : termino . '*' factor  (59)
	termino : termino . '/' factor  (60)

	'*'  shift 70
	'/'  shift 71
	')'  reduce 56
	'.'  reduce 56
	'<'  reduce 56
	'>'  reduce 56
	"<="  reduce 56
	">="  reduce 56
	"<>"  reduce 56
	"=="  reduce 56
	'+'  reduce 56
	'-'  reduce 56


state 90
	expresion : expresion '-' termino .  (57)
	termino : termino . '*' factor  (59)
	termino : termino . '/' factor  (60)

	'*'  shift 70
	'/'  shift 71
	')'  reduce 57
	'.'  reduce 57
	'<'  reduce 57
	'>'  reduce 57
	"<="  reduce 57
	">="  reduce 57
	"<>"  reduce 57
	"=="  reduce 57
	'+'  reduce 57
	'-'  reduce 57


state 91
	termino : termino '*' factor .  (59)

	.  reduce 59


state 92
	termino : termino '/' factor .  (60)

	.  reduce 60


state 93
	condicion : expresion operador expresion .  (49)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	'+'  shift 68
	'-'  shift 69
	')'  reduce 49
	'<'  reduce 49
	'>'  reduce 49
	"<="  reduce 49
	">="  reduce 49
	"<>"  reduce 49
	"=="  reduce 49


state 94
	sentencia_if : IF '(' condicion ')' THEN . $$1 cuerpo_if  (29)
	$$1 : .  (28)

	.  reduce 28

	$$1  goto 99


state 95
	condicion : condicion operador expresion .  (48)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	'+'  shift 68
	'-'  shift 69
	')'  reduce 48
	'<'  reduce 48
	'>'  reduce 48
	"<="  reduce 48
	">="  reduce 48
	"<>"  reduce 48
	"=="  reduce 48


state 96
	salida : OUT '(' CADENA ')' '.' . $$4 OUT error CADENA ')' '.' $$5 OUT '(' CADENA error '.'  (41)
	$$4 : .  (39)

	.  reduce 39

	$$4  goto 100


state 97
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' $$3 . cuerpo_switch  (34)

	'{'  shift 101
	.  error

	cuerpo_switch  goto 102


state 98
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' . expresion ')' '.' '}'  (8)

	IDENTIFICADOR  shift 45
	CONSTANTE  shift 46
	.  error

	expresion  goto 103
	termino  goto 48
	factor  goto 49


state 99
	sentencia_if : IF '(' condicion ')' THEN $$1 . cuerpo_if  (29)

	IDENTIFICADOR  shift 29
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 104
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	cuerpo_if  goto 105


state 100
	salida : OUT '(' CADENA ')' '.' $$4 . OUT error CADENA ')' '.' $$5 OUT '(' CADENA error '.'  (41)

	OUT  shift 106
	.  error


state 101
	cuerpo_switch : '{' . rep_switch '}' '.'  (35)

	CASE  shift 107
	.  error

	rep_switch  goto 108


state 102
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' $$3 cuerpo_switch .  (34)

	.  reduce 34


state 103
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion . ')' '.' '}'  (8)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	')'  shift 109
	'+'  shift 68
	'-'  shift 69
	.  error


state 104
	cuerpo_if : bloque_control . END_IF '.'  (30)
	cuerpo_if : bloque_control . $$2 ELSE bloque_control END_IF '.'  (32)
	$$2 : .  (31)

	END_IF  shift 110
	ELSE  reduce 31

	$$2  goto 111


state 105
	sentencia_if : IF '(' condicion ')' THEN $$1 cuerpo_if .  (29)

	.  reduce 29


state 106
	salida : OUT '(' CADENA ')' '.' $$4 OUT . error CADENA ')' '.' $$5 OUT '(' CADENA error '.'  (41)

	error  shift 112
	.  error


state 107
	rep_switch : CASE . CONSTANTE ':' bloque_control  (36)

	CONSTANTE  shift 113
	.  error


state 108
	cuerpo_switch : '{' rep_switch . '}' '.'  (35)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloque_control  (37)

	CASE  shift 114
	'}'  shift 115
	.  error


state 109
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' . '.' '}'  (8)

	'.'  shift 116
	.  error


state 110
	cuerpo_if : bloque_control END_IF . '.'  (30)

	'.'  shift 117
	.  error


state 111
	cuerpo_if : bloque_control $$2 . ELSE bloque_control END_IF '.'  (32)

	ELSE  shift 118
	.  error


state 112
	salida : OUT '(' CADENA ')' '.' $$4 OUT error . CADENA ')' '.' $$5 OUT '(' CADENA error '.'  (41)

	CADENA  shift 119
	.  error


state 113
	rep_switch : CASE CONSTANTE . ':' bloque_control  (36)

	':'  shift 120
	.  error


state 114
	rep_switch : rep_switch CASE . CONSTANTE ':' bloque_control  (37)

	CONSTANTE  shift 121
	.  error


state 115
	cuerpo_switch : '{' rep_switch '}' . '.'  (35)

	'.'  shift 122
	.  error


state 116
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' . '}'  (8)

	'}'  shift 123
	.  error


state 117
	cuerpo_if : bloque_control END_IF '.' .  (30)

	.  reduce 30


state 118
	cuerpo_if : bloque_control $$2 ELSE . bloque_control END_IF '.'  (32)

	IDENTIFICADOR  shift 29
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 124
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 119
	salida : OUT '(' CADENA ')' '.' $$4 OUT error CADENA . ')' '.' $$5 OUT '(' CADENA error '.'  (41)

	')'  shift 125
	.  error


state 120
	rep_switch : CASE CONSTANTE ':' . bloque_control  (36)

	IDENTIFICADOR  shift 29
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 126
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 121
	rep_switch : rep_switch CASE CONSTANTE . ':' bloque_control  (37)

	':'  shift 127
	.  error


state 122
	cuerpo_switch : '{' rep_switch '}' '.' .  (35)

	.  reduce 35


state 123
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}' .  (8)

	.  reduce 8


state 124
	cuerpo_if : bloque_control $$2 ELSE bloque_control . END_IF '.'  (32)

	END_IF  shift 128
	.  error


state 125
	salida : OUT '(' CADENA ')' '.' $$4 OUT error CADENA ')' . '.' $$5 OUT '(' CADENA error '.'  (41)

	'.'  shift 129
	.  error


state 126
	rep_switch : CASE CONSTANTE ':' bloque_control .  (36)

	.  reduce 36


state 127
	rep_switch : rep_switch CASE CONSTANTE ':' . bloque_control  (37)

	IDENTIFICADOR  shift 29
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 130
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 128
	cuerpo_if : bloque_control $$2 ELSE bloque_control END_IF . '.'  (32)

	'.'  shift 131
	.  error


state 129
	salida : OUT '(' CADENA ')' '.' $$4 OUT error CADENA ')' '.' . $$5 OUT '(' CADENA error '.'  (41)
	$$5 : .  (40)

	.  reduce 40

	$$5  goto 132


state 130
	rep_switch : rep_switch CASE CONSTANTE ':' bloque_control .  (37)

	.  reduce 37


state 131
	cuerpo_if : bloque_control $$2 ELSE bloque_control END_IF '.' .  (32)

	.  reduce 32


state 132
	salida : OUT '(' CADENA ')' '.' $$4 OUT error CADENA ')' '.' $$5 . OUT '(' CADENA error '.'  (41)

	OUT  shift 133
	.  error


state 133
	salida : OUT '(' CADENA ')' '.' $$4 OUT error CADENA ')' '.' $$5 OUT . '(' CADENA error '.'  (41)

	'('  shift 134
	.  error


state 134
	salida : OUT '(' CADENA ')' '.' $$4 OUT error CADENA ')' '.' $$5 OUT '(' . CADENA error '.'  (41)

	CADENA  shift 135
	.  error


state 135
	salida : OUT '(' CADENA ')' '.' $$4 OUT error CADENA ')' '.' $$5 OUT '(' CADENA . error '.'  (41)

	error  shift 136
	.  error


state 136
	salida : OUT '(' CADENA ')' '.' $$4 OUT error CADENA ')' '.' $$5 OUT '(' CADENA error . '.'  (41)

	'.'  shift 137
	.  error


state 137
	salida : OUT '(' CADENA ')' '.' $$4 OUT error CADENA ')' '.' $$5 OUT '(' CADENA error '.' .  (41)

	.  reduce 41


37 terminals, 34 nonterminals
66 grammar rules, 138 states
