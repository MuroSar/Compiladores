   0  $accept : programa $end

   1  programa : bloque_comun

   2  bloque_comun : bloque_para_funcion
   3               | declaracion_funcion

   4  bloque_para_funcion : IF '(' condicion ')' THEN bloque_comun ELSE bloque_comun END_IF '.'
   5                      | IF '(' condicion ')' THEN bloque_comun END_IF '.'
   6                      | SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'
   7                      | BEGIN sentencias END '.'
   8                      | sentencias

   9  sentencias : declaracion sentencias
  10             | asignacion sentencias
  11             | salida sentencias
  12             | declaracion
  13             | asignacion
  14             | salida

  15  declaracion_funcion : funcion
  16                      | funcion sentencias

  17  funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' '}'
  18          | tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' '}'

  19  asignacion : IDENTIFICADOR '=' expresion '.'

  20  declaracion : IDENTIFICADOR ':' tipo '.'
  21              | IDENTIFICADOR ',' declaracion

  22  rep_switch : CASE CONSTANTE ':' bloque_comun '.'
  23             | CASE CONSTANTE ':' bloque_comun '.' rep_switch

  24  condicion : expresion operador condicion
  25            | expresion operador termino

  26  operador : '<'
  27           | '>'
  28           | "<="
  29           | ">="
  30           | "<>"
  31           | "=="

  32  expresion : termino '+' expresion
  33            | termino '-' expresion
  34            | termino

  35  termino : factor '*' termino
  36          | factor '/' termino
  37          | factor

  38  factor : IDENTIFICADOR
  39         | CONSTANTE

  40  salida : OUT '(' CADENA ')' '.'

  41  tipo : LONG
  42       | DOUBLE

state 0
	$accept : . programa $end  (0)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	programa  goto 8
	bloque_comun  goto 9
	bloque_para_funcion  goto 10
	declaracion_funcion  goto 11
	sentencias  goto 12
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15
	funcion  goto 16
	tipo  goto 17


state 1
	asignacion : IDENTIFICADOR . '=' expresion '.'  (19)
	declaracion : IDENTIFICADOR . ':' tipo '.'  (20)
	declaracion : IDENTIFICADOR . ',' declaracion  (21)

	'='  shift 18
	':'  shift 19
	','  shift 20
	.  error


state 2
	bloque_para_funcion : IF . '(' condicion ')' THEN bloque_comun ELSE bloque_comun END_IF '.'  (4)
	bloque_para_funcion : IF . '(' condicion ')' THEN bloque_comun END_IF '.'  (5)

	'('  shift 21
	.  error


state 3
	bloque_para_funcion : BEGIN . sentencias END '.'  (7)

	IDENTIFICADOR  shift 1
	OUT  shift 4
	.  error

	sentencias  goto 22
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15


state 4
	salida : OUT . '(' CADENA ')' '.'  (40)

	'('  shift 23
	.  error


state 5
	tipo : LONG .  (41)

	.  reduce 41


state 6
	tipo : DOUBLE .  (42)

	.  reduce 42


state 7
	bloque_para_funcion : SWITCH . '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'  (6)

	'('  shift 24
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque_comun .  (1)

	.  reduce 1


state 10
	bloque_comun : bloque_para_funcion .  (2)

	.  reduce 2


state 11
	bloque_comun : declaracion_funcion .  (3)

	.  reduce 3


state 12
	bloque_para_funcion : sentencias .  (8)

	.  reduce 8


state 13
	sentencias : declaracion . sentencias  (9)
	sentencias : declaracion .  (12)

	IDENTIFICADOR  shift 1
	OUT  shift 4
	$end  reduce 12
	ELSE  reduce 12
	END_IF  reduce 12
	END  reduce 12
	'('  reduce 12
	'.'  reduce 12

	sentencias  goto 25
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15


state 14
	sentencias : asignacion . sentencias  (10)
	sentencias : asignacion .  (13)

	IDENTIFICADOR  shift 1
	OUT  shift 4
	$end  reduce 13
	ELSE  reduce 13
	END_IF  reduce 13
	END  reduce 13
	'('  reduce 13
	'.'  reduce 13

	sentencias  goto 26
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15


state 15
	sentencias : salida . sentencias  (11)
	sentencias : salida .  (14)

	IDENTIFICADOR  shift 1
	OUT  shift 4
	$end  reduce 14
	ELSE  reduce 14
	END_IF  reduce 14
	END  reduce 14
	'('  reduce 14
	'.'  reduce 14

	sentencias  goto 27
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15


state 16
	declaracion_funcion : funcion .  (15)
	declaracion_funcion : funcion . sentencias  (16)

	IDENTIFICADOR  shift 1
	OUT  shift 4
	$end  reduce 15
	ELSE  reduce 15
	END_IF  reduce 15
	'.'  reduce 15

	sentencias  goto 28
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15


state 17
	funcion : tipo . FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' '}'  (17)
	funcion : tipo . MOVE FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' '}'  (18)

	FUNCTION  shift 29
	MOVE  shift 30
	.  error


state 18
	asignacion : IDENTIFICADOR '=' . expresion '.'  (19)

	IDENTIFICADOR  shift 31
	CONSTANTE  shift 32
	.  error

	expresion  goto 33
	termino  goto 34
	factor  goto 35


state 19
	declaracion : IDENTIFICADOR ':' . tipo '.'  (20)

	LONG  shift 5
	DOUBLE  shift 6
	.  error

	tipo  goto 36


state 20
	declaracion : IDENTIFICADOR ',' . declaracion  (21)

	IDENTIFICADOR  shift 37
	.  error

	declaracion  goto 38


state 21
	bloque_para_funcion : IF '(' . condicion ')' THEN bloque_comun ELSE bloque_comun END_IF '.'  (4)
	bloque_para_funcion : IF '(' . condicion ')' THEN bloque_comun END_IF '.'  (5)

	IDENTIFICADOR  shift 31
	CONSTANTE  shift 32
	.  error

	condicion  goto 39
	expresion  goto 40
	termino  goto 34
	factor  goto 35


state 22
	bloque_para_funcion : BEGIN sentencias . END '.'  (7)

	END  shift 41
	.  error


state 23
	salida : OUT '(' . CADENA ')' '.'  (40)

	CADENA  shift 42
	.  error


state 24
	bloque_para_funcion : SWITCH '(' . IDENTIFICADOR ')' '{' rep_switch '}' '.'  (6)

	IDENTIFICADOR  shift 43
	.  error


state 25
	sentencias : declaracion sentencias .  (9)

	.  reduce 9


state 26
	sentencias : asignacion sentencias .  (10)

	.  reduce 10


state 27
	sentencias : salida sentencias .  (11)

	.  reduce 11


state 28
	declaracion_funcion : funcion sentencias .  (16)

	.  reduce 16


state 29
	funcion : tipo FUNCTION . IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' '}'  (17)

	IDENTIFICADOR  shift 44
	.  error


state 30
	funcion : tipo MOVE . FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' '}'  (18)

	FUNCTION  shift 45
	.  error


state 31
	factor : IDENTIFICADOR .  (38)

	.  reduce 38


state 32
	factor : CONSTANTE .  (39)

	.  reduce 39


state 33
	asignacion : IDENTIFICADOR '=' expresion . '.'  (19)

	'.'  shift 46
	.  error


state 34
	expresion : termino . '+' expresion  (32)
	expresion : termino . '-' expresion  (33)
	expresion : termino .  (34)

	'+'  shift 47
	'-'  shift 48
	')'  reduce 34
	'.'  reduce 34
	'<'  reduce 34
	'>'  reduce 34
	"<="  reduce 34
	">="  reduce 34
	"<>"  reduce 34
	"=="  reduce 34


state 35
	termino : factor . '*' termino  (35)
	termino : factor . '/' termino  (36)
	termino : factor .  (37)

	'*'  shift 49
	'/'  shift 50
	')'  reduce 37
	'.'  reduce 37
	'<'  reduce 37
	'>'  reduce 37
	"<="  reduce 37
	">="  reduce 37
	"<>"  reduce 37
	"=="  reduce 37
	'+'  reduce 37
	'-'  reduce 37


state 36
	declaracion : IDENTIFICADOR ':' tipo . '.'  (20)

	'.'  shift 51
	.  error


state 37
	declaracion : IDENTIFICADOR . ':' tipo '.'  (20)
	declaracion : IDENTIFICADOR . ',' declaracion  (21)

	':'  shift 19
	','  shift 20
	.  error


state 38
	declaracion : IDENTIFICADOR ',' declaracion .  (21)

	.  reduce 21


state 39
	bloque_para_funcion : IF '(' condicion . ')' THEN bloque_comun ELSE bloque_comun END_IF '.'  (4)
	bloque_para_funcion : IF '(' condicion . ')' THEN bloque_comun END_IF '.'  (5)

	')'  shift 52
	.  error


state 40
	condicion : expresion . operador condicion  (24)
	condicion : expresion . operador termino  (25)

	'<'  shift 53
	'>'  shift 54
	"<="  shift 55
	">="  shift 56
	"<>"  shift 57
	"=="  shift 58
	.  error

	operador  goto 59


state 41
	bloque_para_funcion : BEGIN sentencias END . '.'  (7)

	'.'  shift 60
	.  error


state 42
	salida : OUT '(' CADENA . ')' '.'  (40)

	')'  shift 61
	.  error


state 43
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR . ')' '{' rep_switch '}' '.'  (6)

	')'  shift 62
	.  error


state 44
	funcion : tipo FUNCTION IDENTIFICADOR . '{' bloque_para_funcion '(' expresion ')' '.' '}'  (17)

	'{'  shift 63
	.  error


state 45
	funcion : tipo MOVE FUNCTION . IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' '}'  (18)

	IDENTIFICADOR  shift 64
	.  error


state 46
	asignacion : IDENTIFICADOR '=' expresion '.' .  (19)

	.  reduce 19


state 47
	expresion : termino '+' . expresion  (32)

	IDENTIFICADOR  shift 31
	CONSTANTE  shift 32
	.  error

	expresion  goto 65
	termino  goto 34
	factor  goto 35


state 48
	expresion : termino '-' . expresion  (33)

	IDENTIFICADOR  shift 31
	CONSTANTE  shift 32
	.  error

	expresion  goto 66
	termino  goto 34
	factor  goto 35


state 49
	termino : factor '*' . termino  (35)

	IDENTIFICADOR  shift 31
	CONSTANTE  shift 32
	.  error

	termino  goto 67
	factor  goto 35


state 50
	termino : factor '/' . termino  (36)

	IDENTIFICADOR  shift 31
	CONSTANTE  shift 32
	.  error

	termino  goto 68
	factor  goto 35


state 51
	declaracion : IDENTIFICADOR ':' tipo '.' .  (20)

	.  reduce 20


state 52
	bloque_para_funcion : IF '(' condicion ')' . THEN bloque_comun ELSE bloque_comun END_IF '.'  (4)
	bloque_para_funcion : IF '(' condicion ')' . THEN bloque_comun END_IF '.'  (5)

	THEN  shift 69
	.  error


state 53
	operador : '<' .  (26)

	.  reduce 26


state 54
	operador : '>' .  (27)

	.  reduce 27


state 55
	operador : "<=" .  (28)

	.  reduce 28


state 56
	operador : ">=" .  (29)

	.  reduce 29


state 57
	operador : "<>" .  (30)

	.  reduce 30


state 58
	operador : "==" .  (31)

	.  reduce 31


state 59
	condicion : expresion operador . condicion  (24)
	condicion : expresion operador . termino  (25)

	IDENTIFICADOR  shift 31
	CONSTANTE  shift 32
	.  error

	condicion  goto 70
	expresion  goto 40
	termino  goto 71
	factor  goto 35


state 60
	bloque_para_funcion : BEGIN sentencias END '.' .  (7)

	.  reduce 7


state 61
	salida : OUT '(' CADENA ')' . '.'  (40)

	'.'  shift 72
	.  error


state 62
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR ')' . '{' rep_switch '}' '.'  (6)

	'{'  shift 73
	.  error


state 63
	funcion : tipo FUNCTION IDENTIFICADOR '{' . bloque_para_funcion '(' expresion ')' '.' '}'  (17)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_para_funcion  goto 74
	sentencias  goto 12
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15


state 64
	funcion : tipo MOVE FUNCTION IDENTIFICADOR . '{' bloque_para_funcion '(' expresion ')' '.' '}'  (18)

	'{'  shift 75
	.  error


state 65
	expresion : termino '+' expresion .  (32)

	.  reduce 32


state 66
	expresion : termino '-' expresion .  (33)

	.  reduce 33


state 67
	termino : factor '*' termino .  (35)

	.  reduce 35


state 68
	termino : factor '/' termino .  (36)

	.  reduce 36


state 69
	bloque_para_funcion : IF '(' condicion ')' THEN . bloque_comun ELSE bloque_comun END_IF '.'  (4)
	bloque_para_funcion : IF '(' condicion ')' THEN . bloque_comun END_IF '.'  (5)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	bloque_comun  goto 76
	bloque_para_funcion  goto 10
	declaracion_funcion  goto 11
	sentencias  goto 12
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15
	funcion  goto 16
	tipo  goto 17


state 70
	condicion : expresion operador condicion .  (24)

	.  reduce 24


state 71
	condicion : expresion operador termino .  (25)
	expresion : termino . '+' expresion  (32)
	expresion : termino . '-' expresion  (33)
	expresion : termino .  (34)

	'+'  shift 47
	'-'  shift 48
	')'  reduce 25
	'<'  reduce 34
	'>'  reduce 34
	"<="  reduce 34
	">="  reduce 34
	"<>"  reduce 34
	"=="  reduce 34


state 72
	salida : OUT '(' CADENA ')' '.' .  (40)

	.  reduce 40


state 73
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR ')' '{' . rep_switch '}' '.'  (6)

	CASE  shift 77
	.  error

	rep_switch  goto 78


state 74
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_para_funcion . '(' expresion ')' '.' '}'  (17)

	'('  shift 79
	.  error


state 75
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' . bloque_para_funcion '(' expresion ')' '.' '}'  (18)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_para_funcion  goto 80
	sentencias  goto 12
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15


state 76
	bloque_para_funcion : IF '(' condicion ')' THEN bloque_comun . ELSE bloque_comun END_IF '.'  (4)
	bloque_para_funcion : IF '(' condicion ')' THEN bloque_comun . END_IF '.'  (5)

	ELSE  shift 81
	END_IF  shift 82
	.  error


state 77
	rep_switch : CASE . CONSTANTE ':' bloque_comun '.'  (22)
	rep_switch : CASE . CONSTANTE ':' bloque_comun '.' rep_switch  (23)

	CONSTANTE  shift 83
	.  error


state 78
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch . '}' '.'  (6)

	'}'  shift 84
	.  error


state 79
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' . expresion ')' '.' '}'  (17)

	IDENTIFICADOR  shift 31
	CONSTANTE  shift 32
	.  error

	expresion  goto 85
	termino  goto 34
	factor  goto 35


state 80
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_para_funcion . '(' expresion ')' '.' '}'  (18)

	'('  shift 86
	.  error


state 81
	bloque_para_funcion : IF '(' condicion ')' THEN bloque_comun ELSE . bloque_comun END_IF '.'  (4)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	bloque_comun  goto 87
	bloque_para_funcion  goto 10
	declaracion_funcion  goto 11
	sentencias  goto 12
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15
	funcion  goto 16
	tipo  goto 17


state 82
	bloque_para_funcion : IF '(' condicion ')' THEN bloque_comun END_IF . '.'  (5)

	'.'  shift 88
	.  error


state 83
	rep_switch : CASE CONSTANTE . ':' bloque_comun '.'  (22)
	rep_switch : CASE CONSTANTE . ':' bloque_comun '.' rep_switch  (23)

	':'  shift 89
	.  error


state 84
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' . '.'  (6)

	'.'  shift 90
	.  error


state 85
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion . ')' '.' '}'  (17)

	')'  shift 91
	.  error


state 86
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' . expresion ')' '.' '}'  (18)

	IDENTIFICADOR  shift 31
	CONSTANTE  shift 32
	.  error

	expresion  goto 92
	termino  goto 34
	factor  goto 35


state 87
	bloque_para_funcion : IF '(' condicion ')' THEN bloque_comun ELSE bloque_comun . END_IF '.'  (4)

	END_IF  shift 93
	.  error


state 88
	bloque_para_funcion : IF '(' condicion ')' THEN bloque_comun END_IF '.' .  (5)

	.  reduce 5


state 89
	rep_switch : CASE CONSTANTE ':' . bloque_comun '.'  (22)
	rep_switch : CASE CONSTANTE ':' . bloque_comun '.' rep_switch  (23)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	bloque_comun  goto 94
	bloque_para_funcion  goto 10
	declaracion_funcion  goto 11
	sentencias  goto 12
	declaracion  goto 13
	asignacion  goto 14
	salida  goto 15
	funcion  goto 16
	tipo  goto 17


state 90
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.' .  (6)

	.  reduce 6


state 91
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' . '.' '}'  (17)

	'.'  shift 95
	.  error


state 92
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion . ')' '.' '}'  (18)

	')'  shift 96
	.  error


state 93
	bloque_para_funcion : IF '(' condicion ')' THEN bloque_comun ELSE bloque_comun END_IF . '.'  (4)

	'.'  shift 97
	.  error


state 94
	rep_switch : CASE CONSTANTE ':' bloque_comun . '.'  (22)
	rep_switch : CASE CONSTANTE ':' bloque_comun . '.' rep_switch  (23)

	'.'  shift 98
	.  error


state 95
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' . '}'  (17)

	'}'  shift 99
	.  error


state 96
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' . '.' '}'  (18)

	'.'  shift 100
	.  error


state 97
	bloque_para_funcion : IF '(' condicion ')' THEN bloque_comun ELSE bloque_comun END_IF '.' .  (4)

	.  reduce 4


state 98
	rep_switch : CASE CONSTANTE ':' bloque_comun '.' .  (22)
	rep_switch : CASE CONSTANTE ':' bloque_comun '.' . rep_switch  (23)

	CASE  shift 77
	'}'  reduce 22

	rep_switch  goto 101


state 99
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' '}' .  (17)

	.  reduce 17


state 100
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' . '}'  (18)

	'}'  shift 102
	.  error


state 101
	rep_switch : CASE CONSTANTE ':' bloque_comun '.' rep_switch .  (23)

	.  reduce 23


state 102
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_para_funcion '(' expresion ')' '.' '}' .  (18)

	.  reduce 18


37 terminals, 17 nonterminals
43 grammar rules, 103 states
