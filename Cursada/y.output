   0  $accept : programa $end

   1  programa : bloque_comun

   2  bloque_comun : bloques
   3               | declaracion_funcion
   4               | bloque_comun declaracion_funcion

   5  bloques : bloque_para_funcion
   6          | bloques bloque_para_funcion
   7          | BEGIN bloques END '.'

   8  bloque_para_funcion : IF '(' condicion ')' THEN bloques ELSE bloques END_IF '.'
   9                      | IF '(' condicion ')' THEN bloques END_IF '.'
  10                      | SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'
  11                      | sentencias
  12                      | IF error END_IF '.'

  13  sentencias : sentencias sentencia_unica
  14             | sentencia_unica

  15  sentencia_unica : declaracion
  16                  | asignacion
  17                  | salida
  18                  | llamado_funcion

  19  declaracion_funcion : funcion

  20  funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'
  21          | tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'

  22  llamado_funcion : IDENTIFICADOR '(' ')' '.'

  23  asignacion : IDENTIFICADOR '=' expresion '.'

  24  declaracion : IDENTIFICADOR ',' declaracion
  25              | IDENTIFICADOR ':' tipo '.'
  26              | IDENTIFICADOR ':' tipo

  27  rep_switch : CASE CONSTANTE ':' bloques
  28             | rep_switch CASE CONSTANTE ':' bloques

  29  condicion : condicion operador expresion
  30            | expresion operador termino

  31  operador : '<'
  32           | '>'
  33           | "<="
  34           | ">="
  35           | "<>"
  36           | "=="

  37  expresion : expresion '+' termino
  38            | expresion '-' termino
  39            | termino

  40  termino : termino '*' factor
  41          | termino '/' factor
  42          | factor

  43  factor : IDENTIFICADOR
  44         | CONSTANTE

  45  salida : OUT '(' CADENA ')' '.'

  46  tipo : LONG
  47       | DOUBLE

state 0
	$accept : . programa $end  (0)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	programa  goto 8
	bloque_comun  goto 9
	bloques  goto 10
	declaracion_funcion  goto 11
	bloque_para_funcion  goto 12
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18
	funcion  goto 19
	tipo  goto 20


state 1
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (22)
	asignacion : IDENTIFICADOR . '=' expresion '.'  (23)
	declaracion : IDENTIFICADOR . ',' declaracion  (24)
	declaracion : IDENTIFICADOR . ':' tipo '.'  (25)
	declaracion : IDENTIFICADOR . ':' tipo  (26)

	'('  shift 21
	'='  shift 22
	','  shift 23
	':'  shift 24
	.  error


state 2
	bloque_para_funcion : IF . '(' condicion ')' THEN bloques ELSE bloques END_IF '.'  (8)
	bloque_para_funcion : IF . '(' condicion ')' THEN bloques END_IF '.'  (9)
	bloque_para_funcion : IF . error END_IF '.'  (12)

	error  shift 25
	'('  shift 26
	.  error


state 3
	bloques : BEGIN . bloques END '.'  (7)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloques  goto 27
	bloque_para_funcion  goto 12
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 4
	salida : OUT . '(' CADENA ')' '.'  (45)

	'('  shift 28
	.  error


state 5
	tipo : LONG .  (46)

	.  reduce 46


state 6
	tipo : DOUBLE .  (47)

	.  reduce 47


state 7
	bloque_para_funcion : SWITCH . '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'  (10)

	'('  shift 29
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque_comun .  (1)
	bloque_comun : bloque_comun . declaracion_funcion  (4)

	LONG  shift 5
	DOUBLE  shift 6
	$end  reduce 1

	declaracion_funcion  goto 30
	funcion  goto 19
	tipo  goto 20


state 10
	bloque_comun : bloques .  (2)
	bloques : bloques . bloque_para_funcion  (6)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	$end  reduce 2
	LONG  reduce 2
	DOUBLE  reduce 2

	bloque_para_funcion  goto 31
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 11
	bloque_comun : declaracion_funcion .  (3)

	.  reduce 3


state 12
	bloques : bloque_para_funcion .  (5)

	.  reduce 5


13: shift/reduce conflict (shift 1, reduce 11) on IDENTIFICADOR
13: shift/reduce conflict (shift 4, reduce 11) on OUT
state 13
	bloque_para_funcion : sentencias .  (11)
	sentencias : sentencias . sentencia_unica  (13)

	IDENTIFICADOR  shift 1
	OUT  shift 4
	$end  reduce 11
	IF  reduce 11
	ELSE  reduce 11
	END_IF  reduce 11
	END  reduce 11
	LONG  reduce 11
	DOUBLE  reduce 11
	SWITCH  reduce 11
	CASE  reduce 11
	RETURN  reduce 11
	'}'  reduce 11

	sentencia_unica  goto 32
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 14
	sentencias : sentencia_unica .  (14)

	.  reduce 14


state 15
	sentencia_unica : declaracion .  (15)

	.  reduce 15


state 16
	sentencia_unica : asignacion .  (16)

	.  reduce 16


state 17
	sentencia_unica : salida .  (17)

	.  reduce 17


state 18
	sentencia_unica : llamado_funcion .  (18)

	.  reduce 18


state 19
	declaracion_funcion : funcion .  (19)

	.  reduce 19


state 20
	funcion : tipo . FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (20)
	funcion : tipo . MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (21)

	FUNCTION  shift 33
	MOVE  shift 34
	.  error


state 21
	llamado_funcion : IDENTIFICADOR '(' . ')' '.'  (22)

	')'  shift 35
	.  error


state 22
	asignacion : IDENTIFICADOR '=' . expresion '.'  (23)

	IDENTIFICADOR  shift 36
	CONSTANTE  shift 37
	.  error

	expresion  goto 38
	termino  goto 39
	factor  goto 40


state 23
	declaracion : IDENTIFICADOR ',' . declaracion  (24)

	IDENTIFICADOR  shift 41
	.  error

	declaracion  goto 42


state 24
	declaracion : IDENTIFICADOR ':' . tipo '.'  (25)
	declaracion : IDENTIFICADOR ':' . tipo  (26)

	LONG  shift 5
	DOUBLE  shift 6
	.  error

	tipo  goto 43


state 25
	bloque_para_funcion : IF error . END_IF '.'  (12)

	END_IF  shift 44
	.  error


state 26
	bloque_para_funcion : IF '(' . condicion ')' THEN bloques ELSE bloques END_IF '.'  (8)
	bloque_para_funcion : IF '(' . condicion ')' THEN bloques END_IF '.'  (9)

	IDENTIFICADOR  shift 36
	CONSTANTE  shift 37
	.  error

	condicion  goto 45
	expresion  goto 46
	termino  goto 39
	factor  goto 40


state 27
	bloques : bloques . bloque_para_funcion  (6)
	bloques : BEGIN bloques . END '.'  (7)

	IDENTIFICADOR  shift 1
	IF  shift 2
	END  shift 47
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_para_funcion  goto 31
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 28
	salida : OUT '(' . CADENA ')' '.'  (45)

	CADENA  shift 48
	.  error


state 29
	bloque_para_funcion : SWITCH '(' . IDENTIFICADOR ')' '{' rep_switch '}' '.'  (10)

	IDENTIFICADOR  shift 49
	.  error


state 30
	bloque_comun : bloque_comun declaracion_funcion .  (4)

	.  reduce 4


state 31
	bloques : bloques bloque_para_funcion .  (6)

	.  reduce 6


state 32
	sentencias : sentencias sentencia_unica .  (13)

	.  reduce 13


state 33
	funcion : tipo FUNCTION . IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (20)

	IDENTIFICADOR  shift 50
	.  error


state 34
	funcion : tipo MOVE . FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (21)

	FUNCTION  shift 51
	.  error


state 35
	llamado_funcion : IDENTIFICADOR '(' ')' . '.'  (22)

	'.'  shift 52
	.  error


state 36
	factor : IDENTIFICADOR .  (43)

	.  reduce 43


state 37
	factor : CONSTANTE .  (44)

	.  reduce 44


state 38
	asignacion : IDENTIFICADOR '=' expresion . '.'  (23)
	expresion : expresion . '+' termino  (37)
	expresion : expresion . '-' termino  (38)

	'.'  shift 53
	'+'  shift 54
	'-'  shift 55
	.  error


state 39
	expresion : termino .  (39)
	termino : termino . '*' factor  (40)
	termino : termino . '/' factor  (41)

	'*'  shift 56
	'/'  shift 57
	'.'  reduce 39
	')'  reduce 39
	'<'  reduce 39
	'>'  reduce 39
	"<="  reduce 39
	">="  reduce 39
	"<>"  reduce 39
	"=="  reduce 39
	'+'  reduce 39
	'-'  reduce 39


state 40
	termino : factor .  (42)

	.  reduce 42


state 41
	declaracion : IDENTIFICADOR . ',' declaracion  (24)
	declaracion : IDENTIFICADOR . ':' tipo '.'  (25)
	declaracion : IDENTIFICADOR . ':' tipo  (26)

	','  shift 23
	':'  shift 24
	.  error


state 42
	declaracion : IDENTIFICADOR ',' declaracion .  (24)

	.  reduce 24


state 43
	declaracion : IDENTIFICADOR ':' tipo . '.'  (25)
	declaracion : IDENTIFICADOR ':' tipo .  (26)

	'.'  shift 58
	$end  reduce 26
	IDENTIFICADOR  reduce 26
	IF  reduce 26
	ELSE  reduce 26
	END_IF  reduce 26
	END  reduce 26
	OUT  reduce 26
	LONG  reduce 26
	DOUBLE  reduce 26
	SWITCH  reduce 26
	CASE  reduce 26
	RETURN  reduce 26
	'}'  reduce 26


state 44
	bloque_para_funcion : IF error END_IF . '.'  (12)

	'.'  shift 59
	.  error


state 45
	bloque_para_funcion : IF '(' condicion . ')' THEN bloques ELSE bloques END_IF '.'  (8)
	bloque_para_funcion : IF '(' condicion . ')' THEN bloques END_IF '.'  (9)
	condicion : condicion . operador expresion  (29)

	')'  shift 60
	'<'  shift 61
	'>'  shift 62
	"<="  shift 63
	">="  shift 64
	"<>"  shift 65
	"=="  shift 66
	.  error

	operador  goto 67


state 46
	condicion : expresion . operador termino  (30)
	expresion : expresion . '+' termino  (37)
	expresion : expresion . '-' termino  (38)

	'<'  shift 61
	'>'  shift 62
	"<="  shift 63
	">="  shift 64
	"<>"  shift 65
	"=="  shift 66
	'+'  shift 54
	'-'  shift 55
	.  error

	operador  goto 68


state 47
	bloques : BEGIN bloques END . '.'  (7)

	'.'  shift 69
	.  error


state 48
	salida : OUT '(' CADENA . ')' '.'  (45)

	')'  shift 70
	.  error


state 49
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR . ')' '{' rep_switch '}' '.'  (10)

	')'  shift 71
	.  error


state 50
	funcion : tipo FUNCTION IDENTIFICADOR . '{' bloques RETURN '(' expresion ')' '.' '}'  (20)

	'{'  shift 72
	.  error


state 51
	funcion : tipo MOVE FUNCTION . IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (21)

	IDENTIFICADOR  shift 73
	.  error


state 52
	llamado_funcion : IDENTIFICADOR '(' ')' '.' .  (22)

	.  reduce 22


state 53
	asignacion : IDENTIFICADOR '=' expresion '.' .  (23)

	.  reduce 23


state 54
	expresion : expresion '+' . termino  (37)

	IDENTIFICADOR  shift 36
	CONSTANTE  shift 37
	.  error

	termino  goto 74
	factor  goto 40


state 55
	expresion : expresion '-' . termino  (38)

	IDENTIFICADOR  shift 36
	CONSTANTE  shift 37
	.  error

	termino  goto 75
	factor  goto 40


state 56
	termino : termino '*' . factor  (40)

	IDENTIFICADOR  shift 36
	CONSTANTE  shift 37
	.  error

	factor  goto 76


state 57
	termino : termino '/' . factor  (41)

	IDENTIFICADOR  shift 36
	CONSTANTE  shift 37
	.  error

	factor  goto 77


state 58
	declaracion : IDENTIFICADOR ':' tipo '.' .  (25)

	.  reduce 25


state 59
	bloque_para_funcion : IF error END_IF '.' .  (12)

	.  reduce 12


state 60
	bloque_para_funcion : IF '(' condicion ')' . THEN bloques ELSE bloques END_IF '.'  (8)
	bloque_para_funcion : IF '(' condicion ')' . THEN bloques END_IF '.'  (9)

	THEN  shift 78
	.  error


state 61
	operador : '<' .  (31)

	.  reduce 31


state 62
	operador : '>' .  (32)

	.  reduce 32


state 63
	operador : "<=" .  (33)

	.  reduce 33


state 64
	operador : ">=" .  (34)

	.  reduce 34


state 65
	operador : "<>" .  (35)

	.  reduce 35


state 66
	operador : "==" .  (36)

	.  reduce 36


state 67
	condicion : condicion operador . expresion  (29)

	IDENTIFICADOR  shift 36
	CONSTANTE  shift 37
	.  error

	expresion  goto 79
	termino  goto 39
	factor  goto 40


state 68
	condicion : expresion operador . termino  (30)

	IDENTIFICADOR  shift 36
	CONSTANTE  shift 37
	.  error

	termino  goto 80
	factor  goto 40


state 69
	bloques : BEGIN bloques END '.' .  (7)

	.  reduce 7


state 70
	salida : OUT '(' CADENA ')' . '.'  (45)

	'.'  shift 81
	.  error


state 71
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR ')' . '{' rep_switch '}' '.'  (10)

	'{'  shift 82
	.  error


state 72
	funcion : tipo FUNCTION IDENTIFICADOR '{' . bloques RETURN '(' expresion ')' '.' '}'  (20)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloques  goto 83
	bloque_para_funcion  goto 12
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 73
	funcion : tipo MOVE FUNCTION IDENTIFICADOR . '{' bloques RETURN '(' expresion ')' '.' '}'  (21)

	'{'  shift 84
	.  error


state 74
	expresion : expresion '+' termino .  (37)
	termino : termino . '*' factor  (40)
	termino : termino . '/' factor  (41)

	'*'  shift 56
	'/'  shift 57
	'.'  reduce 37
	')'  reduce 37
	'<'  reduce 37
	'>'  reduce 37
	"<="  reduce 37
	">="  reduce 37
	"<>"  reduce 37
	"=="  reduce 37
	'+'  reduce 37
	'-'  reduce 37


state 75
	expresion : expresion '-' termino .  (38)
	termino : termino . '*' factor  (40)
	termino : termino . '/' factor  (41)

	'*'  shift 56
	'/'  shift 57
	'.'  reduce 38
	')'  reduce 38
	'<'  reduce 38
	'>'  reduce 38
	"<="  reduce 38
	">="  reduce 38
	"<>"  reduce 38
	"=="  reduce 38
	'+'  reduce 38
	'-'  reduce 38


state 76
	termino : termino '*' factor .  (40)

	.  reduce 40


state 77
	termino : termino '/' factor .  (41)

	.  reduce 41


state 78
	bloque_para_funcion : IF '(' condicion ')' THEN . bloques ELSE bloques END_IF '.'  (8)
	bloque_para_funcion : IF '(' condicion ')' THEN . bloques END_IF '.'  (9)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloques  goto 85
	bloque_para_funcion  goto 12
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 79
	condicion : condicion operador expresion .  (29)
	expresion : expresion . '+' termino  (37)
	expresion : expresion . '-' termino  (38)

	'+'  shift 54
	'-'  shift 55
	')'  reduce 29
	'<'  reduce 29
	'>'  reduce 29
	"<="  reduce 29
	">="  reduce 29
	"<>"  reduce 29
	"=="  reduce 29


state 80
	condicion : expresion operador termino .  (30)
	termino : termino . '*' factor  (40)
	termino : termino . '/' factor  (41)

	'*'  shift 56
	'/'  shift 57
	')'  reduce 30
	'<'  reduce 30
	'>'  reduce 30
	"<="  reduce 30
	">="  reduce 30
	"<>"  reduce 30
	"=="  reduce 30


state 81
	salida : OUT '(' CADENA ')' '.' .  (45)

	.  reduce 45


state 82
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR ')' '{' . rep_switch '}' '.'  (10)

	CASE  shift 86
	.  error

	rep_switch  goto 87


state 83
	bloques : bloques . bloque_para_funcion  (6)
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloques . RETURN '(' expresion ')' '.' '}'  (20)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	RETURN  shift 88
	.  error

	bloque_para_funcion  goto 31
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 84
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' . bloques RETURN '(' expresion ')' '.' '}'  (21)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloques  goto 89
	bloque_para_funcion  goto 12
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 85
	bloques : bloques . bloque_para_funcion  (6)
	bloque_para_funcion : IF '(' condicion ')' THEN bloques . ELSE bloques END_IF '.'  (8)
	bloque_para_funcion : IF '(' condicion ')' THEN bloques . END_IF '.'  (9)

	IDENTIFICADOR  shift 1
	IF  shift 2
	ELSE  shift 90
	END_IF  shift 91
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_para_funcion  goto 31
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 86
	rep_switch : CASE . CONSTANTE ':' bloques  (27)

	CONSTANTE  shift 92
	.  error


state 87
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch . '}' '.'  (10)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloques  (28)

	CASE  shift 93
	'}'  shift 94
	.  error


state 88
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN . '(' expresion ')' '.' '}'  (20)

	'('  shift 95
	.  error


state 89
	bloques : bloques . bloque_para_funcion  (6)
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques . RETURN '(' expresion ')' '.' '}'  (21)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	RETURN  shift 96
	.  error

	bloque_para_funcion  goto 31
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 90
	bloque_para_funcion : IF '(' condicion ')' THEN bloques ELSE . bloques END_IF '.'  (8)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloques  goto 97
	bloque_para_funcion  goto 12
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 91
	bloque_para_funcion : IF '(' condicion ')' THEN bloques END_IF . '.'  (9)

	'.'  shift 98
	.  error


state 92
	rep_switch : CASE CONSTANTE . ':' bloques  (27)

	':'  shift 99
	.  error


state 93
	rep_switch : rep_switch CASE . CONSTANTE ':' bloques  (28)

	CONSTANTE  shift 100
	.  error


state 94
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' . '.'  (10)

	'.'  shift 101
	.  error


state 95
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' . expresion ')' '.' '}'  (20)

	IDENTIFICADOR  shift 36
	CONSTANTE  shift 37
	.  error

	expresion  goto 102
	termino  goto 39
	factor  goto 40


state 96
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN . '(' expresion ')' '.' '}'  (21)

	'('  shift 103
	.  error


state 97
	bloques : bloques . bloque_para_funcion  (6)
	bloque_para_funcion : IF '(' condicion ')' THEN bloques ELSE bloques . END_IF '.'  (8)

	IDENTIFICADOR  shift 1
	IF  shift 2
	END_IF  shift 104
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_para_funcion  goto 31
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 98
	bloque_para_funcion : IF '(' condicion ')' THEN bloques END_IF '.' .  (9)

	.  reduce 9


state 99
	rep_switch : CASE CONSTANTE ':' . bloques  (27)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloques  goto 105
	bloque_para_funcion  goto 12
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 100
	rep_switch : rep_switch CASE CONSTANTE . ':' bloques  (28)

	':'  shift 106
	.  error


state 101
	bloque_para_funcion : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.' .  (10)

	.  reduce 10


state 102
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion . ')' '.' '}'  (20)
	expresion : expresion . '+' termino  (37)
	expresion : expresion . '-' termino  (38)

	')'  shift 107
	'+'  shift 54
	'-'  shift 55
	.  error


state 103
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' . expresion ')' '.' '}'  (21)

	IDENTIFICADOR  shift 36
	CONSTANTE  shift 37
	.  error

	expresion  goto 108
	termino  goto 39
	factor  goto 40


state 104
	bloque_para_funcion : IF '(' condicion ')' THEN bloques ELSE bloques END_IF . '.'  (8)

	'.'  shift 109
	.  error


state 105
	bloques : bloques . bloque_para_funcion  (6)
	rep_switch : CASE CONSTANTE ':' bloques .  (27)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	CASE  reduce 27
	'}'  reduce 27

	bloque_para_funcion  goto 31
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 106
	rep_switch : rep_switch CASE CONSTANTE ':' . bloques  (28)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloques  goto 110
	bloque_para_funcion  goto 12
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 107
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' . '.' '}'  (20)

	'.'  shift 111
	.  error


state 108
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion . ')' '.' '}'  (21)
	expresion : expresion . '+' termino  (37)
	expresion : expresion . '-' termino  (38)

	')'  shift 112
	'+'  shift 54
	'-'  shift 55
	.  error


state 109
	bloque_para_funcion : IF '(' condicion ')' THEN bloques ELSE bloques END_IF '.' .  (8)

	.  reduce 8


state 110
	bloques : bloques . bloque_para_funcion  (6)
	rep_switch : rep_switch CASE CONSTANTE ':' bloques .  (28)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	CASE  reduce 28
	'}'  reduce 28

	bloque_para_funcion  goto 31
	sentencias  goto 13
	sentencia_unica  goto 14
	declaracion  goto 15
	asignacion  goto 16
	salida  goto 17
	llamado_funcion  goto 18


state 111
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' . '}'  (20)

	'}'  shift 113
	.  error


state 112
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' . '.' '}'  (21)

	'.'  shift 114
	.  error


state 113
	funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}' .  (20)

	.  reduce 20


state 114
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' . '}'  (21)

	'}'  shift 115
	.  error


state 115
	funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}' .  (21)

	.  reduce 21


State 13 contains 2 shift/reduce conflicts.


37 terminals, 20 nonterminals
48 grammar rules, 116 states
