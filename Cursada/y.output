   0  $accept : programa $end

   1  programa : bloque

   2  bloque : IF '(' condicion ')' THEN bloque ELSE bloque END_IF '.'
   3         | IF '(' condicion ')' THEN bloque END_IF '.'
   4         | SWITCH '(' Identificador ')' '{' rep_switch '}' '.'
   5         | BEGIN sentencias END '.'
   6         | sentencias

   7  sentencias : declaracion
   8             | asignacion
   9             | funcion
  10             | salida

  11  funcion : tipo FUNCTION Identificador '{' bloque '(' expresion ')' '.' '}'
  12          | tipo MOVE FUNCTION Identificador '{' bloque '(' expresion ')' '.' '}'

  13  asignacion : Identificador '=' expresion '.'

  14  declaracion : Identificador ':' tipo '.'
  15              | Identificador ',' declaracion

  16  rep_switch : CASE Constante ':' bloque '.'
  17             | CASE Constante ':' bloque '.' rep_switch

  18  condicion : expresion operador condicion
  19            | expresion operador termino

  20  operador : '<'
  21           | '>'
  22           | "<="
  23           | ">="
  24           | "<>"
  25           | "=="

  26  expresion : termino '+' expresion
  27            | termino '-' expresion
  28            | termino

  29  termino : factor '*' termino
  30          | factor '/' termino
  31          | factor

  32  factor : Identificador
  33         | Constante

  34  salida : OUT '(' Cadena ')' '.'

  35  tipo : LONG
  36       | DOUBLE

state 0
	$accept : . programa $end  (0)

	Identificador  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	programa  goto 8
	bloque  goto 9
	sentencias  goto 10
	declaracion  goto 11
	asignacion  goto 12
	funcion  goto 13
	salida  goto 14
	tipo  goto 15


state 1
	asignacion : Identificador . '=' expresion '.'  (13)
	declaracion : Identificador . ':' tipo '.'  (14)
	declaracion : Identificador . ',' declaracion  (15)

	'='  shift 16
	':'  shift 17
	','  shift 18
	.  error


state 2
	bloque : IF . '(' condicion ')' THEN bloque ELSE bloque END_IF '.'  (2)
	bloque : IF . '(' condicion ')' THEN bloque END_IF '.'  (3)

	'('  shift 19
	.  error


state 3
	bloque : BEGIN . sentencias END '.'  (5)

	Identificador  shift 1
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	.  error

	sentencias  goto 20
	declaracion  goto 11
	asignacion  goto 12
	funcion  goto 13
	salida  goto 14
	tipo  goto 15


state 4
	salida : OUT . '(' Cadena ')' '.'  (34)

	'('  shift 21
	.  error


state 5
	tipo : LONG .  (35)

	.  reduce 35


state 6
	tipo : DOUBLE .  (36)

	.  reduce 36


state 7
	bloque : SWITCH . '(' Identificador ')' '{' rep_switch '}' '.'  (4)

	'('  shift 22
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque .  (1)

	.  reduce 1


state 10
	bloque : sentencias .  (6)

	.  reduce 6


state 11
	sentencias : declaracion .  (7)

	.  reduce 7


state 12
	sentencias : asignacion .  (8)

	.  reduce 8


state 13
	sentencias : funcion .  (9)

	.  reduce 9


state 14
	sentencias : salida .  (10)

	.  reduce 10


state 15
	funcion : tipo . FUNCTION Identificador '{' bloque '(' expresion ')' '.' '}'  (11)
	funcion : tipo . MOVE FUNCTION Identificador '{' bloque '(' expresion ')' '.' '}'  (12)

	FUNCTION  shift 23
	MOVE  shift 24
	.  error


state 16
	asignacion : Identificador '=' . expresion '.'  (13)

	Identificador  shift 25
	Constante  shift 26
	.  error

	expresion  goto 27
	termino  goto 28
	factor  goto 29


state 17
	declaracion : Identificador ':' . tipo '.'  (14)

	LONG  shift 5
	DOUBLE  shift 6
	.  error

	tipo  goto 30


state 18
	declaracion : Identificador ',' . declaracion  (15)

	Identificador  shift 31
	.  error

	declaracion  goto 32


state 19
	bloque : IF '(' . condicion ')' THEN bloque ELSE bloque END_IF '.'  (2)
	bloque : IF '(' . condicion ')' THEN bloque END_IF '.'  (3)

	Identificador  shift 25
	Constante  shift 26
	.  error

	condicion  goto 33
	expresion  goto 34
	termino  goto 28
	factor  goto 29


state 20
	bloque : BEGIN sentencias . END '.'  (5)

	END  shift 35
	.  error


state 21
	salida : OUT '(' . Cadena ')' '.'  (34)

	Cadena  shift 36
	.  error


state 22
	bloque : SWITCH '(' . Identificador ')' '{' rep_switch '}' '.'  (4)

	Identificador  shift 37
	.  error


state 23
	funcion : tipo FUNCTION . Identificador '{' bloque '(' expresion ')' '.' '}'  (11)

	Identificador  shift 38
	.  error


state 24
	funcion : tipo MOVE . FUNCTION Identificador '{' bloque '(' expresion ')' '.' '}'  (12)

	FUNCTION  shift 39
	.  error


state 25
	factor : Identificador .  (32)

	.  reduce 32


state 26
	factor : Constante .  (33)

	.  reduce 33


state 27
	asignacion : Identificador '=' expresion . '.'  (13)

	'.'  shift 40
	.  error


state 28
	expresion : termino . '+' expresion  (26)
	expresion : termino . '-' expresion  (27)
	expresion : termino .  (28)

	'+'  shift 41
	'-'  shift 42
	')'  reduce 28
	'.'  reduce 28
	'<'  reduce 28
	'>'  reduce 28
	"<="  reduce 28
	">="  reduce 28
	"<>"  reduce 28
	"=="  reduce 28


state 29
	termino : factor . '*' termino  (29)
	termino : factor . '/' termino  (30)
	termino : factor .  (31)

	'*'  shift 43
	'/'  shift 44
	')'  reduce 31
	'.'  reduce 31
	'<'  reduce 31
	'>'  reduce 31
	"<="  reduce 31
	">="  reduce 31
	"<>"  reduce 31
	"=="  reduce 31
	'+'  reduce 31
	'-'  reduce 31


state 30
	declaracion : Identificador ':' tipo . '.'  (14)

	'.'  shift 45
	.  error


state 31
	declaracion : Identificador . ':' tipo '.'  (14)
	declaracion : Identificador . ',' declaracion  (15)

	':'  shift 17
	','  shift 18
	.  error


state 32
	declaracion : Identificador ',' declaracion .  (15)

	.  reduce 15


state 33
	bloque : IF '(' condicion . ')' THEN bloque ELSE bloque END_IF '.'  (2)
	bloque : IF '(' condicion . ')' THEN bloque END_IF '.'  (3)

	')'  shift 46
	.  error


state 34
	condicion : expresion . operador condicion  (18)
	condicion : expresion . operador termino  (19)

	'<'  shift 47
	'>'  shift 48
	"<="  shift 49
	">="  shift 50
	"<>"  shift 51
	"=="  shift 52
	.  error

	operador  goto 53


state 35
	bloque : BEGIN sentencias END . '.'  (5)

	'.'  shift 54
	.  error


state 36
	salida : OUT '(' Cadena . ')' '.'  (34)

	')'  shift 55
	.  error


state 37
	bloque : SWITCH '(' Identificador . ')' '{' rep_switch '}' '.'  (4)

	')'  shift 56
	.  error


state 38
	funcion : tipo FUNCTION Identificador . '{' bloque '(' expresion ')' '.' '}'  (11)

	'{'  shift 57
	.  error


state 39
	funcion : tipo MOVE FUNCTION . Identificador '{' bloque '(' expresion ')' '.' '}'  (12)

	Identificador  shift 58
	.  error


state 40
	asignacion : Identificador '=' expresion '.' .  (13)

	.  reduce 13


state 41
	expresion : termino '+' . expresion  (26)

	Identificador  shift 25
	Constante  shift 26
	.  error

	expresion  goto 59
	termino  goto 28
	factor  goto 29


state 42
	expresion : termino '-' . expresion  (27)

	Identificador  shift 25
	Constante  shift 26
	.  error

	expresion  goto 60
	termino  goto 28
	factor  goto 29


state 43
	termino : factor '*' . termino  (29)

	Identificador  shift 25
	Constante  shift 26
	.  error

	termino  goto 61
	factor  goto 29


state 44
	termino : factor '/' . termino  (30)

	Identificador  shift 25
	Constante  shift 26
	.  error

	termino  goto 62
	factor  goto 29


state 45
	declaracion : Identificador ':' tipo '.' .  (14)

	.  reduce 14


state 46
	bloque : IF '(' condicion ')' . THEN bloque ELSE bloque END_IF '.'  (2)
	bloque : IF '(' condicion ')' . THEN bloque END_IF '.'  (3)

	THEN  shift 63
	.  error


state 47
	operador : '<' .  (20)

	.  reduce 20


state 48
	operador : '>' .  (21)

	.  reduce 21


state 49
	operador : "<=" .  (22)

	.  reduce 22


state 50
	operador : ">=" .  (23)

	.  reduce 23


state 51
	operador : "<>" .  (24)

	.  reduce 24


state 52
	operador : "==" .  (25)

	.  reduce 25


state 53
	condicion : expresion operador . condicion  (18)
	condicion : expresion operador . termino  (19)

	Identificador  shift 25
	Constante  shift 26
	.  error

	condicion  goto 64
	expresion  goto 34
	termino  goto 65
	factor  goto 29


state 54
	bloque : BEGIN sentencias END '.' .  (5)

	.  reduce 5


state 55
	salida : OUT '(' Cadena ')' . '.'  (34)

	'.'  shift 66
	.  error


state 56
	bloque : SWITCH '(' Identificador ')' . '{' rep_switch '}' '.'  (4)

	'{'  shift 67
	.  error


state 57
	funcion : tipo FUNCTION Identificador '{' . bloque '(' expresion ')' '.' '}'  (11)

	Identificador  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	bloque  goto 68
	sentencias  goto 10
	declaracion  goto 11
	asignacion  goto 12
	funcion  goto 13
	salida  goto 14
	tipo  goto 15


state 58
	funcion : tipo MOVE FUNCTION Identificador . '{' bloque '(' expresion ')' '.' '}'  (12)

	'{'  shift 69
	.  error


state 59
	expresion : termino '+' expresion .  (26)

	.  reduce 26


state 60
	expresion : termino '-' expresion .  (27)

	.  reduce 27


state 61
	termino : factor '*' termino .  (29)

	.  reduce 29


state 62
	termino : factor '/' termino .  (30)

	.  reduce 30


state 63
	bloque : IF '(' condicion ')' THEN . bloque ELSE bloque END_IF '.'  (2)
	bloque : IF '(' condicion ')' THEN . bloque END_IF '.'  (3)

	Identificador  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	bloque  goto 70
	sentencias  goto 10
	declaracion  goto 11
	asignacion  goto 12
	funcion  goto 13
	salida  goto 14
	tipo  goto 15


state 64
	condicion : expresion operador condicion .  (18)

	.  reduce 18


state 65
	condicion : expresion operador termino .  (19)
	expresion : termino . '+' expresion  (26)
	expresion : termino . '-' expresion  (27)
	expresion : termino .  (28)

	'+'  shift 41
	'-'  shift 42
	')'  reduce 19
	'<'  reduce 28
	'>'  reduce 28
	"<="  reduce 28
	">="  reduce 28
	"<>"  reduce 28
	"=="  reduce 28


state 66
	salida : OUT '(' Cadena ')' '.' .  (34)

	.  reduce 34


state 67
	bloque : SWITCH '(' Identificador ')' '{' . rep_switch '}' '.'  (4)

	CASE  shift 71
	.  error

	rep_switch  goto 72


state 68
	funcion : tipo FUNCTION Identificador '{' bloque . '(' expresion ')' '.' '}'  (11)

	'('  shift 73
	.  error


state 69
	funcion : tipo MOVE FUNCTION Identificador '{' . bloque '(' expresion ')' '.' '}'  (12)

	Identificador  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	bloque  goto 74
	sentencias  goto 10
	declaracion  goto 11
	asignacion  goto 12
	funcion  goto 13
	salida  goto 14
	tipo  goto 15


state 70
	bloque : IF '(' condicion ')' THEN bloque . ELSE bloque END_IF '.'  (2)
	bloque : IF '(' condicion ')' THEN bloque . END_IF '.'  (3)

	ELSE  shift 75
	END_IF  shift 76
	.  error


state 71
	rep_switch : CASE . Constante ':' bloque '.'  (16)
	rep_switch : CASE . Constante ':' bloque '.' rep_switch  (17)

	Constante  shift 77
	.  error


state 72
	bloque : SWITCH '(' Identificador ')' '{' rep_switch . '}' '.'  (4)

	'}'  shift 78
	.  error


state 73
	funcion : tipo FUNCTION Identificador '{' bloque '(' . expresion ')' '.' '}'  (11)

	Identificador  shift 25
	Constante  shift 26
	.  error

	expresion  goto 79
	termino  goto 28
	factor  goto 29


state 74
	funcion : tipo MOVE FUNCTION Identificador '{' bloque . '(' expresion ')' '.' '}'  (12)

	'('  shift 80
	.  error


state 75
	bloque : IF '(' condicion ')' THEN bloque ELSE . bloque END_IF '.'  (2)

	Identificador  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	bloque  goto 81
	sentencias  goto 10
	declaracion  goto 11
	asignacion  goto 12
	funcion  goto 13
	salida  goto 14
	tipo  goto 15


state 76
	bloque : IF '(' condicion ')' THEN bloque END_IF . '.'  (3)

	'.'  shift 82
	.  error


state 77
	rep_switch : CASE Constante . ':' bloque '.'  (16)
	rep_switch : CASE Constante . ':' bloque '.' rep_switch  (17)

	':'  shift 83
	.  error


state 78
	bloque : SWITCH '(' Identificador ')' '{' rep_switch '}' . '.'  (4)

	'.'  shift 84
	.  error


state 79
	funcion : tipo FUNCTION Identificador '{' bloque '(' expresion . ')' '.' '}'  (11)

	')'  shift 85
	.  error


state 80
	funcion : tipo MOVE FUNCTION Identificador '{' bloque '(' . expresion ')' '.' '}'  (12)

	Identificador  shift 25
	Constante  shift 26
	.  error

	expresion  goto 86
	termino  goto 28
	factor  goto 29


state 81
	bloque : IF '(' condicion ')' THEN bloque ELSE bloque . END_IF '.'  (2)

	END_IF  shift 87
	.  error


state 82
	bloque : IF '(' condicion ')' THEN bloque END_IF '.' .  (3)

	.  reduce 3


state 83
	rep_switch : CASE Constante ':' . bloque '.'  (16)
	rep_switch : CASE Constante ':' . bloque '.' rep_switch  (17)

	Identificador  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	bloque  goto 88
	sentencias  goto 10
	declaracion  goto 11
	asignacion  goto 12
	funcion  goto 13
	salida  goto 14
	tipo  goto 15


state 84
	bloque : SWITCH '(' Identificador ')' '{' rep_switch '}' '.' .  (4)

	.  reduce 4


state 85
	funcion : tipo FUNCTION Identificador '{' bloque '(' expresion ')' . '.' '}'  (11)

	'.'  shift 89
	.  error


state 86
	funcion : tipo MOVE FUNCTION Identificador '{' bloque '(' expresion . ')' '.' '}'  (12)

	')'  shift 90
	.  error


state 87
	bloque : IF '(' condicion ')' THEN bloque ELSE bloque END_IF . '.'  (2)

	'.'  shift 91
	.  error


state 88
	rep_switch : CASE Constante ':' bloque . '.'  (16)
	rep_switch : CASE Constante ':' bloque . '.' rep_switch  (17)

	'.'  shift 92
	.  error


state 89
	funcion : tipo FUNCTION Identificador '{' bloque '(' expresion ')' '.' . '}'  (11)

	'}'  shift 93
	.  error


state 90
	funcion : tipo MOVE FUNCTION Identificador '{' bloque '(' expresion ')' . '.' '}'  (12)

	'.'  shift 94
	.  error


state 91
	bloque : IF '(' condicion ')' THEN bloque ELSE bloque END_IF '.' .  (2)

	.  reduce 2


state 92
	rep_switch : CASE Constante ':' bloque '.' .  (16)
	rep_switch : CASE Constante ':' bloque '.' . rep_switch  (17)

	CASE  shift 71
	'}'  reduce 16

	rep_switch  goto 95


state 93
	funcion : tipo FUNCTION Identificador '{' bloque '(' expresion ')' '.' '}' .  (11)

	.  reduce 11


state 94
	funcion : tipo MOVE FUNCTION Identificador '{' bloque '(' expresion ')' '.' . '}'  (12)

	'}'  shift 96
	.  error


state 95
	rep_switch : CASE Constante ':' bloque '.' rep_switch .  (17)

	.  reduce 17


state 96
	funcion : tipo MOVE FUNCTION Identificador '{' bloque '(' expresion ')' '.' '}' .  (12)

	.  reduce 12


37 terminals, 15 nonterminals
37 grammar rules, 97 states
