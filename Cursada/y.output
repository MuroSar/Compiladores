   0  $accept : programa $end

   1  programa : bloque

   2  bloque : bloque_comun
   3         | declaracion_funcion
   4         | bloque bloque_comun
   5         | bloque declaracion_funcion

   6  bloque_comun : bloque_control
   7               | declaracion

   8  bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}'

   9  bloque_sentencias_funcion : cjto_sentencias_control
  10                            | declaracion
  11                            | bloque_sentencias_funcion cjto_sentencias_control
  12                            | bloque_sentencias_funcion declaracion

  13  bloque_control : bloque_sentencias
  14                 | BEGIN cjto_sentencias_control END '.'

  15  bloque_sentencias : sentencia_unica_control
  16                    | sentencia_unica_ejecutable

  17  sentencia_unica_control : sentencia_if_else
  18                          | sentencia_if
  19                          | sentencia_switch

  20  sentencia_unica_ejecutable : asignacion
  21                             | salida
  22                             | llamado_funcion

  23  cjto_sentencias_control : bloque_sentencias
  24                          | cjto_sentencias_control bloque_sentencias

  25  declaracion_funcion : tipo FUNCTION IDENTIFICADOR bloque_funcion
  26                      | tipo MOVE FUNCTION IDENTIFICADOR bloque_funcion

  27  declaracion : lista_variables ':' tipo '.'

  28  sentencia_if_else : IF '(' condicion ')' THEN bloque_control ELSE bloque_control END_IF '.'

  29  sentencia_if : IF '(' condicion ')' THEN bloque_control END_IF '.'

  30  sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'

  31  rep_switch : CASE CONSTANTE ':' bloque_control
  32             | rep_switch CASE CONSTANTE ':' bloque_control

  33  asignacion : IDENTIFICADOR '=' expresion '.'

  34  salida : OUT '(' CADENA ')' '.'

  35  llamado_funcion : IDENTIFICADOR '(' ')' '.'

  36  lista_variables : IDENTIFICADOR
  37                  | lista_variables ',' IDENTIFICADOR

  38  condicion : condicion operador expresion
  39            | expresion operador termino

  40  operador : '<'
  41           | '>'
  42           | "<="
  43           | ">="
  44           | "<>"
  45           | "=="

  46  expresion : expresion '+' termino
  47            | expresion '-' termino
  48            | termino

  49  termino : termino '*' factor
  50          | termino '/' factor
  51          | factor

  52  factor : IDENTIFICADOR
  53         | CONSTANTE

  54  tipo : LONG
  55       | DOUBLE

state 0
	$accept : . programa $end  (0)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	programa  goto 8
	bloque  goto 9
	bloque_comun  goto 10
	declaracion_funcion  goto 11
	bloque_control  goto 12
	declaracion  goto 13
	bloque_sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22
	tipo  goto 23
	lista_variables  goto 24


state 1
	asignacion : IDENTIFICADOR . '=' expresion '.'  (33)
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (35)
	lista_variables : IDENTIFICADOR .  (36)

	'('  shift 25
	'='  shift 26
	':'  reduce 36
	','  reduce 36


state 2
	sentencia_if_else : IF . '(' condicion ')' THEN bloque_control ELSE bloque_control END_IF '.'  (28)
	sentencia_if : IF . '(' condicion ')' THEN bloque_control END_IF '.'  (29)

	'('  shift 27
	.  error


state 3
	bloque_control : BEGIN . cjto_sentencias_control END '.'  (14)

	IDENTIFICADOR  shift 28
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	.  error

	cjto_sentencias_control  goto 29
	bloque_sentencias  goto 30
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22


state 4
	salida : OUT . '(' CADENA ')' '.'  (34)

	'('  shift 31
	.  error


state 5
	tipo : LONG .  (54)

	.  reduce 54


state 6
	tipo : DOUBLE .  (55)

	.  reduce 55


state 7
	sentencia_switch : SWITCH . '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'  (30)

	'('  shift 32
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque .  (1)
	bloque : bloque . bloque_comun  (4)
	bloque : bloque . declaracion_funcion  (5)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	$end  reduce 1

	bloque_comun  goto 33
	declaracion_funcion  goto 34
	bloque_control  goto 12
	declaracion  goto 13
	bloque_sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22
	tipo  goto 23
	lista_variables  goto 24


state 10
	bloque : bloque_comun .  (2)

	.  reduce 2


state 11
	bloque : declaracion_funcion .  (3)

	.  reduce 3


state 12
	bloque_comun : bloque_control .  (6)

	.  reduce 6


state 13
	bloque_comun : declaracion .  (7)

	.  reduce 7


state 14
	bloque_control : bloque_sentencias .  (13)

	.  reduce 13


state 15
	bloque_sentencias : sentencia_unica_control .  (15)

	.  reduce 15


state 16
	bloque_sentencias : sentencia_unica_ejecutable .  (16)

	.  reduce 16


state 17
	sentencia_unica_control : sentencia_if_else .  (17)

	.  reduce 17


state 18
	sentencia_unica_control : sentencia_if .  (18)

	.  reduce 18


state 19
	sentencia_unica_control : sentencia_switch .  (19)

	.  reduce 19


state 20
	sentencia_unica_ejecutable : asignacion .  (20)

	.  reduce 20


state 21
	sentencia_unica_ejecutable : salida .  (21)

	.  reduce 21


state 22
	sentencia_unica_ejecutable : llamado_funcion .  (22)

	.  reduce 22


state 23
	declaracion_funcion : tipo . FUNCTION IDENTIFICADOR bloque_funcion  (25)
	declaracion_funcion : tipo . MOVE FUNCTION IDENTIFICADOR bloque_funcion  (26)

	FUNCTION  shift 35
	MOVE  shift 36
	.  error


state 24
	declaracion : lista_variables . ':' tipo '.'  (27)
	lista_variables : lista_variables . ',' IDENTIFICADOR  (37)

	':'  shift 37
	','  shift 38
	.  error


state 25
	llamado_funcion : IDENTIFICADOR '(' . ')' '.'  (35)

	')'  shift 39
	.  error


state 26
	asignacion : IDENTIFICADOR '=' . expresion '.'  (33)

	IDENTIFICADOR  shift 40
	CONSTANTE  shift 41
	.  error

	expresion  goto 42
	termino  goto 43
	factor  goto 44


state 27
	sentencia_if_else : IF '(' . condicion ')' THEN bloque_control ELSE bloque_control END_IF '.'  (28)
	sentencia_if : IF '(' . condicion ')' THEN bloque_control END_IF '.'  (29)

	IDENTIFICADOR  shift 40
	CONSTANTE  shift 41
	.  error

	expresion  goto 45
	condicion  goto 46
	termino  goto 43
	factor  goto 44


state 28
	asignacion : IDENTIFICADOR . '=' expresion '.'  (33)
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (35)

	'('  shift 25
	'='  shift 26
	.  error


state 29
	bloque_control : BEGIN cjto_sentencias_control . END '.'  (14)
	cjto_sentencias_control : cjto_sentencias_control . bloque_sentencias  (24)

	IDENTIFICADOR  shift 28
	IF  shift 2
	END  shift 47
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_sentencias  goto 48
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22


state 30
	cjto_sentencias_control : bloque_sentencias .  (23)

	.  reduce 23


state 31
	salida : OUT '(' . CADENA ')' '.'  (34)

	CADENA  shift 49
	.  error


state 32
	sentencia_switch : SWITCH '(' . IDENTIFICADOR ')' '{' rep_switch '}' '.'  (30)

	IDENTIFICADOR  shift 50
	.  error


state 33
	bloque : bloque bloque_comun .  (4)

	.  reduce 4


state 34
	bloque : bloque declaracion_funcion .  (5)

	.  reduce 5


state 35
	declaracion_funcion : tipo FUNCTION . IDENTIFICADOR bloque_funcion  (25)

	IDENTIFICADOR  shift 51
	.  error


state 36
	declaracion_funcion : tipo MOVE . FUNCTION IDENTIFICADOR bloque_funcion  (26)

	FUNCTION  shift 52
	.  error


state 37
	declaracion : lista_variables ':' . tipo '.'  (27)

	LONG  shift 5
	DOUBLE  shift 6
	.  error

	tipo  goto 53


state 38
	lista_variables : lista_variables ',' . IDENTIFICADOR  (37)

	IDENTIFICADOR  shift 54
	.  error


state 39
	llamado_funcion : IDENTIFICADOR '(' ')' . '.'  (35)

	'.'  shift 55
	.  error


state 40
	factor : IDENTIFICADOR .  (52)

	.  reduce 52


state 41
	factor : CONSTANTE .  (53)

	.  reduce 53


state 42
	asignacion : IDENTIFICADOR '=' expresion . '.'  (33)
	expresion : expresion . '+' termino  (46)
	expresion : expresion . '-' termino  (47)

	'.'  shift 56
	'+'  shift 57
	'-'  shift 58
	.  error


state 43
	expresion : termino .  (48)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 59
	'/'  shift 60
	')'  reduce 48
	'.'  reduce 48
	'<'  reduce 48
	'>'  reduce 48
	"<="  reduce 48
	">="  reduce 48
	"<>"  reduce 48
	"=="  reduce 48
	'+'  reduce 48
	'-'  reduce 48


state 44
	termino : factor .  (51)

	.  reduce 51


state 45
	condicion : expresion . operador termino  (39)
	expresion : expresion . '+' termino  (46)
	expresion : expresion . '-' termino  (47)

	'<'  shift 61
	'>'  shift 62
	"<="  shift 63
	">="  shift 64
	"<>"  shift 65
	"=="  shift 66
	'+'  shift 57
	'-'  shift 58
	.  error

	operador  goto 67


state 46
	sentencia_if_else : IF '(' condicion . ')' THEN bloque_control ELSE bloque_control END_IF '.'  (28)
	sentencia_if : IF '(' condicion . ')' THEN bloque_control END_IF '.'  (29)
	condicion : condicion . operador expresion  (38)

	')'  shift 68
	'<'  shift 61
	'>'  shift 62
	"<="  shift 63
	">="  shift 64
	"<>"  shift 65
	"=="  shift 66
	.  error

	operador  goto 69


state 47
	bloque_control : BEGIN cjto_sentencias_control END . '.'  (14)

	'.'  shift 70
	.  error


state 48
	cjto_sentencias_control : cjto_sentencias_control bloque_sentencias .  (24)

	.  reduce 24


state 49
	salida : OUT '(' CADENA . ')' '.'  (34)

	')'  shift 71
	.  error


state 50
	sentencia_switch : SWITCH '(' IDENTIFICADOR . ')' '{' rep_switch '}' '.'  (30)

	')'  shift 72
	.  error


state 51
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR . bloque_funcion  (25)

	'{'  shift 73
	.  error

	bloque_funcion  goto 74


state 52
	declaracion_funcion : tipo MOVE FUNCTION . IDENTIFICADOR bloque_funcion  (26)

	IDENTIFICADOR  shift 75
	.  error


state 53
	declaracion : lista_variables ':' tipo . '.'  (27)

	'.'  shift 76
	.  error


state 54
	lista_variables : lista_variables ',' IDENTIFICADOR .  (37)

	.  reduce 37


state 55
	llamado_funcion : IDENTIFICADOR '(' ')' '.' .  (35)

	.  reduce 35


state 56
	asignacion : IDENTIFICADOR '=' expresion '.' .  (33)

	.  reduce 33


state 57
	expresion : expresion '+' . termino  (46)

	IDENTIFICADOR  shift 40
	CONSTANTE  shift 41
	.  error

	termino  goto 77
	factor  goto 44


state 58
	expresion : expresion '-' . termino  (47)

	IDENTIFICADOR  shift 40
	CONSTANTE  shift 41
	.  error

	termino  goto 78
	factor  goto 44


state 59
	termino : termino '*' . factor  (49)

	IDENTIFICADOR  shift 40
	CONSTANTE  shift 41
	.  error

	factor  goto 79


state 60
	termino : termino '/' . factor  (50)

	IDENTIFICADOR  shift 40
	CONSTANTE  shift 41
	.  error

	factor  goto 80


state 61
	operador : '<' .  (40)

	.  reduce 40


state 62
	operador : '>' .  (41)

	.  reduce 41


state 63
	operador : "<=" .  (42)

	.  reduce 42


state 64
	operador : ">=" .  (43)

	.  reduce 43


state 65
	operador : "<>" .  (44)

	.  reduce 44


state 66
	operador : "==" .  (45)

	.  reduce 45


state 67
	condicion : expresion operador . termino  (39)

	IDENTIFICADOR  shift 40
	CONSTANTE  shift 41
	.  error

	termino  goto 81
	factor  goto 44


state 68
	sentencia_if_else : IF '(' condicion ')' . THEN bloque_control ELSE bloque_control END_IF '.'  (28)
	sentencia_if : IF '(' condicion ')' . THEN bloque_control END_IF '.'  (29)

	THEN  shift 82
	.  error


state 69
	condicion : condicion operador . expresion  (38)

	IDENTIFICADOR  shift 40
	CONSTANTE  shift 41
	.  error

	expresion  goto 83
	termino  goto 43
	factor  goto 44


state 70
	bloque_control : BEGIN cjto_sentencias_control END '.' .  (14)

	.  reduce 14


state 71
	salida : OUT '(' CADENA ')' . '.'  (34)

	'.'  shift 84
	.  error


state 72
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' . '{' rep_switch '}' '.'  (30)

	'{'  shift 85
	.  error


state 73
	bloque_funcion : '{' . bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}'  (8)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	.  error

	declaracion  goto 86
	bloque_sentencias_funcion  goto 87
	cjto_sentencias_control  goto 88
	bloque_sentencias  goto 30
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22
	lista_variables  goto 24


state 74
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR bloque_funcion .  (25)

	.  reduce 25


state 75
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR . bloque_funcion  (26)

	'{'  shift 73
	.  error

	bloque_funcion  goto 89


state 76
	declaracion : lista_variables ':' tipo '.' .  (27)

	.  reduce 27


state 77
	expresion : expresion '+' termino .  (46)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 59
	'/'  shift 60
	')'  reduce 46
	'.'  reduce 46
	'<'  reduce 46
	'>'  reduce 46
	"<="  reduce 46
	">="  reduce 46
	"<>"  reduce 46
	"=="  reduce 46
	'+'  reduce 46
	'-'  reduce 46


state 78
	expresion : expresion '-' termino .  (47)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 59
	'/'  shift 60
	')'  reduce 47
	'.'  reduce 47
	'<'  reduce 47
	'>'  reduce 47
	"<="  reduce 47
	">="  reduce 47
	"<>"  reduce 47
	"=="  reduce 47
	'+'  reduce 47
	'-'  reduce 47


state 79
	termino : termino '*' factor .  (49)

	.  reduce 49


state 80
	termino : termino '/' factor .  (50)

	.  reduce 50


state 81
	condicion : expresion operador termino .  (39)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 59
	'/'  shift 60
	')'  reduce 39
	'<'  reduce 39
	'>'  reduce 39
	"<="  reduce 39
	">="  reduce 39
	"<>"  reduce 39
	"=="  reduce 39


state 82
	sentencia_if_else : IF '(' condicion ')' THEN . bloque_control ELSE bloque_control END_IF '.'  (28)
	sentencia_if : IF '(' condicion ')' THEN . bloque_control END_IF '.'  (29)

	IDENTIFICADOR  shift 28
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 90
	bloque_sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22


state 83
	condicion : condicion operador expresion .  (38)
	expresion : expresion . '+' termino  (46)
	expresion : expresion . '-' termino  (47)

	'+'  shift 57
	'-'  shift 58
	')'  reduce 38
	'<'  reduce 38
	'>'  reduce 38
	"<="  reduce 38
	">="  reduce 38
	"<>"  reduce 38
	"=="  reduce 38


state 84
	salida : OUT '(' CADENA ')' '.' .  (34)

	.  reduce 34


state 85
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' . rep_switch '}' '.'  (30)

	CASE  shift 91
	.  error

	rep_switch  goto 92


state 86
	bloque_sentencias_funcion : declaracion .  (10)

	.  reduce 10


state 87
	bloque_funcion : '{' bloque_sentencias_funcion . RETURN '(' expresion ')' '.' '}'  (8)
	bloque_sentencias_funcion : bloque_sentencias_funcion . cjto_sentencias_control  (11)
	bloque_sentencias_funcion : bloque_sentencias_funcion . declaracion  (12)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	RETURN  shift 93
	.  error

	declaracion  goto 94
	cjto_sentencias_control  goto 95
	bloque_sentencias  goto 30
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22
	lista_variables  goto 24


88: shift/reduce conflict (shift 28, reduce 9) on IDENTIFICADOR
88: shift/reduce conflict (shift 2, reduce 9) on IF
88: shift/reduce conflict (shift 4, reduce 9) on OUT
88: shift/reduce conflict (shift 7, reduce 9) on SWITCH
state 88
	bloque_sentencias_funcion : cjto_sentencias_control .  (9)
	cjto_sentencias_control : cjto_sentencias_control . bloque_sentencias  (24)

	IDENTIFICADOR  shift 28
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	RETURN  reduce 9

	bloque_sentencias  goto 48
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22


state 89
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR bloque_funcion .  (26)

	.  reduce 26


state 90
	sentencia_if_else : IF '(' condicion ')' THEN bloque_control . ELSE bloque_control END_IF '.'  (28)
	sentencia_if : IF '(' condicion ')' THEN bloque_control . END_IF '.'  (29)

	ELSE  shift 96
	END_IF  shift 97
	.  error


state 91
	rep_switch : CASE . CONSTANTE ':' bloque_control  (31)

	CONSTANTE  shift 98
	.  error


state 92
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch . '}' '.'  (30)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloque_control  (32)

	CASE  shift 99
	'}'  shift 100
	.  error


state 93
	bloque_funcion : '{' bloque_sentencias_funcion RETURN . '(' expresion ')' '.' '}'  (8)

	'('  shift 101
	.  error


state 94
	bloque_sentencias_funcion : bloque_sentencias_funcion declaracion .  (12)

	.  reduce 12


95: shift/reduce conflict (shift 28, reduce 11) on IDENTIFICADOR
95: shift/reduce conflict (shift 2, reduce 11) on IF
95: shift/reduce conflict (shift 4, reduce 11) on OUT
95: shift/reduce conflict (shift 7, reduce 11) on SWITCH
state 95
	bloque_sentencias_funcion : bloque_sentencias_funcion cjto_sentencias_control .  (11)
	cjto_sentencias_control : cjto_sentencias_control . bloque_sentencias  (24)

	IDENTIFICADOR  shift 28
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	RETURN  reduce 11

	bloque_sentencias  goto 48
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22


state 96
	sentencia_if_else : IF '(' condicion ')' THEN bloque_control ELSE . bloque_control END_IF '.'  (28)

	IDENTIFICADOR  shift 28
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 102
	bloque_sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22


state 97
	sentencia_if : IF '(' condicion ')' THEN bloque_control END_IF . '.'  (29)

	'.'  shift 103
	.  error


state 98
	rep_switch : CASE CONSTANTE . ':' bloque_control  (31)

	':'  shift 104
	.  error


state 99
	rep_switch : rep_switch CASE . CONSTANTE ':' bloque_control  (32)

	CONSTANTE  shift 105
	.  error


state 100
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' . '.'  (30)

	'.'  shift 106
	.  error


state 101
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' . expresion ')' '.' '}'  (8)

	IDENTIFICADOR  shift 40
	CONSTANTE  shift 41
	.  error

	expresion  goto 107
	termino  goto 43
	factor  goto 44


state 102
	sentencia_if_else : IF '(' condicion ')' THEN bloque_control ELSE bloque_control . END_IF '.'  (28)

	END_IF  shift 108
	.  error


state 103
	sentencia_if : IF '(' condicion ')' THEN bloque_control END_IF '.' .  (29)

	.  reduce 29


state 104
	rep_switch : CASE CONSTANTE ':' . bloque_control  (31)

	IDENTIFICADOR  shift 28
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 109
	bloque_sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22


state 105
	rep_switch : rep_switch CASE CONSTANTE . ':' bloque_control  (32)

	':'  shift 110
	.  error


state 106
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.' .  (30)

	.  reduce 30


state 107
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion . ')' '.' '}'  (8)
	expresion : expresion . '+' termino  (46)
	expresion : expresion . '-' termino  (47)

	')'  shift 111
	'+'  shift 57
	'-'  shift 58
	.  error


state 108
	sentencia_if_else : IF '(' condicion ')' THEN bloque_control ELSE bloque_control END_IF . '.'  (28)

	'.'  shift 112
	.  error


state 109
	rep_switch : CASE CONSTANTE ':' bloque_control .  (31)

	.  reduce 31


state 110
	rep_switch : rep_switch CASE CONSTANTE ':' . bloque_control  (32)

	IDENTIFICADOR  shift 28
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 113
	bloque_sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if_else  goto 17
	sentencia_if  goto 18
	sentencia_switch  goto 19
	asignacion  goto 20
	salida  goto 21
	llamado_funcion  goto 22


state 111
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' . '.' '}'  (8)

	'.'  shift 114
	.  error


state 112
	sentencia_if_else : IF '(' condicion ')' THEN bloque_control ELSE bloque_control END_IF '.' .  (28)

	.  reduce 28


state 113
	rep_switch : rep_switch CASE CONSTANTE ':' bloque_control .  (32)

	.  reduce 32


state 114
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' . '}'  (8)

	'}'  shift 115
	.  error


state 115
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}' .  (8)

	.  reduce 8


State 88 contains 4 shift/reduce conflicts.
State 95 contains 4 shift/reduce conflicts.


37 terminals, 27 nonterminals
56 grammar rules, 116 states
