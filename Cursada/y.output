   0  $accept : programa $end

   1  programa : bloque_main

   2  bloque_main : bloque
   3              | bloque_main bloque

   4  bloque : bloque_comun
   5         | declaracion_funcion

   6  bloque_comun : bloque_control
   7               | declaracion

   8  bloque_control : bloque_sentencias
   9                 | BEGIN cjto_sentencias_control END '.'

  10  bloque_sentencias : sentencia_unica_control
  11                    | sentencia_unica_ejecutable

  12  sentencia_unica_control : sentencia_if_else
  13                          | sentencia_if
  14                          | sentencia_switch

  15  sentencia_unica_ejecutable : asignacion
  16                             | salida
  17                             | llamado_funcion

  18  cjto_sentencias_control : sentencia_unica_ejecutable
  19                          | sentencia_unica_control
  20                          | cjto_sentencias_control sentencia_unica_ejecutable
  21                          | cjto_sentencias_control sentencia_unica_control

  22  declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' '}'
  23                      | tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' '}'

  24  declaracion : lista_variables ':' tipo '.'

  25  sentencia_if_else : IF '(' condicion ')' THEN bloque_control ELSE bloque_control END_IF '.'

  26  sentencia_if : IF '(' condicion ')' THEN bloque_control END_IF '.'

  27  sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'

  28  rep_switch : CASE CONSTANTE ':' bloque_control
  29             | rep_switch CASE CONSTANTE ':' bloque_control

  30  asignacion : IDENTIFICADOR '=' expresion '.'

  31  salida : OUT '(' CADENA ')' '.'

  32  llamado_funcion : IDENTIFICADOR '(' ')' '.'

  33  lista_variables : IDENTIFICADOR
  34                  | lista_variables ',' IDENTIFICADOR

  35  condicion : condicion operador expresion
  36            | expresion operador termino

  37  operador : '<'
  38           | '>'
  39           | "<="
  40           | ">="
  41           | "<>"
  42           | "=="

  43  expresion : expresion '+' termino
  44            | expresion '-' termino
  45            | termino

  46  termino : termino '*' factor
  47          | termino '/' factor
  48          | factor

  49  factor : IDENTIFICADOR
  50         | CONSTANTE

  51  tipo : LONG
  52       | DOUBLE

state 0
	$accept : . programa $end  (0)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	programa  goto 8
	bloque_main  goto 9
	bloque  goto 10
	bloque_comun  goto 11
	declaracion_funcion  goto 12
	bloque_control  goto 13
	declaracion  goto 14
	bloque_sentencias  goto 15
	sentencia_unica_control  goto 16
	sentencia_unica_ejecutable  goto 17
	sentencia_if_else  goto 18
	sentencia_if  goto 19
	sentencia_switch  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23
	tipo  goto 24
	lista_variables  goto 25


state 1
	asignacion : IDENTIFICADOR . '=' expresion '.'  (30)
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (32)
	lista_variables : IDENTIFICADOR .  (33)

	'('  shift 26
	'='  shift 27
	':'  reduce 33
	','  reduce 33


state 2
	sentencia_if_else : IF . '(' condicion ')' THEN bloque_control ELSE bloque_control END_IF '.'  (25)
	sentencia_if : IF . '(' condicion ')' THEN bloque_control END_IF '.'  (26)

	'('  shift 28
	.  error


state 3
	bloque_control : BEGIN . cjto_sentencias_control END '.'  (9)

	IDENTIFICADOR  shift 29
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	.  error

	cjto_sentencias_control  goto 30
	sentencia_unica_control  goto 31
	sentencia_unica_ejecutable  goto 32
	sentencia_if_else  goto 18
	sentencia_if  goto 19
	sentencia_switch  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 4
	salida : OUT . '(' CADENA ')' '.'  (31)

	'('  shift 33
	.  error


state 5
	tipo : LONG .  (51)

	.  reduce 51


state 6
	tipo : DOUBLE .  (52)

	.  reduce 52


state 7
	sentencia_switch : SWITCH . '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'  (27)

	'('  shift 34
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque_main .  (1)
	bloque_main : bloque_main . bloque  (3)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	$end  reduce 1

	bloque  goto 35
	bloque_comun  goto 11
	declaracion_funcion  goto 12
	bloque_control  goto 13
	declaracion  goto 14
	bloque_sentencias  goto 15
	sentencia_unica_control  goto 16
	sentencia_unica_ejecutable  goto 17
	sentencia_if_else  goto 18
	sentencia_if  goto 19
	sentencia_switch  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23
	tipo  goto 24
	lista_variables  goto 25


state 10
	bloque_main : bloque .  (2)

	.  reduce 2


state 11
	bloque : bloque_comun .  (4)

	.  reduce 4


state 12
	bloque : declaracion_funcion .  (5)

	.  reduce 5


state 13
	bloque_comun : bloque_control .  (6)

	.  reduce 6


state 14
	bloque_comun : declaracion .  (7)

	.  reduce 7


state 15
	bloque_control : bloque_sentencias .  (8)

	.  reduce 8


state 16
	bloque_sentencias : sentencia_unica_control .  (10)

	.  reduce 10


state 17
	bloque_sentencias : sentencia_unica_ejecutable .  (11)

	.  reduce 11


state 18
	sentencia_unica_control : sentencia_if_else .  (12)

	.  reduce 12


state 19
	sentencia_unica_control : sentencia_if .  (13)

	.  reduce 13


state 20
	sentencia_unica_control : sentencia_switch .  (14)

	.  reduce 14


state 21
	sentencia_unica_ejecutable : asignacion .  (15)

	.  reduce 15


state 22
	sentencia_unica_ejecutable : salida .  (16)

	.  reduce 16


state 23
	sentencia_unica_ejecutable : llamado_funcion .  (17)

	.  reduce 17


state 24
	declaracion_funcion : tipo . FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' '}'  (22)
	declaracion_funcion : tipo . MOVE FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' '}'  (23)

	FUNCTION  shift 36
	MOVE  shift 37
	.  error


state 25
	declaracion : lista_variables . ':' tipo '.'  (24)
	lista_variables : lista_variables . ',' IDENTIFICADOR  (34)

	':'  shift 38
	','  shift 39
	.  error


state 26
	llamado_funcion : IDENTIFICADOR '(' . ')' '.'  (32)

	')'  shift 40
	.  error


state 27
	asignacion : IDENTIFICADOR '=' . expresion '.'  (30)

	IDENTIFICADOR  shift 41
	CONSTANTE  shift 42
	.  error

	expresion  goto 43
	termino  goto 44
	factor  goto 45


state 28
	sentencia_if_else : IF '(' . condicion ')' THEN bloque_control ELSE bloque_control END_IF '.'  (25)
	sentencia_if : IF '(' . condicion ')' THEN bloque_control END_IF '.'  (26)

	IDENTIFICADOR  shift 41
	CONSTANTE  shift 42
	.  error

	expresion  goto 46
	condicion  goto 47
	termino  goto 44
	factor  goto 45


state 29
	asignacion : IDENTIFICADOR . '=' expresion '.'  (30)
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (32)

	'('  shift 26
	'='  shift 27
	.  error


state 30
	bloque_control : BEGIN cjto_sentencias_control . END '.'  (9)
	cjto_sentencias_control : cjto_sentencias_control . sentencia_unica_ejecutable  (20)
	cjto_sentencias_control : cjto_sentencias_control . sentencia_unica_control  (21)

	IDENTIFICADOR  shift 29
	IF  shift 2
	END  shift 48
	OUT  shift 4
	SWITCH  shift 7
	.  error

	sentencia_unica_control  goto 49
	sentencia_unica_ejecutable  goto 50
	sentencia_if_else  goto 18
	sentencia_if  goto 19
	sentencia_switch  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 31
	cjto_sentencias_control : sentencia_unica_control .  (19)

	.  reduce 19


state 32
	cjto_sentencias_control : sentencia_unica_ejecutable .  (18)

	.  reduce 18


state 33
	salida : OUT '(' . CADENA ')' '.'  (31)

	CADENA  shift 51
	.  error


state 34
	sentencia_switch : SWITCH '(' . IDENTIFICADOR ')' '{' rep_switch '}' '.'  (27)

	IDENTIFICADOR  shift 52
	.  error


state 35
	bloque_main : bloque_main bloque .  (3)

	.  reduce 3


state 36
	declaracion_funcion : tipo FUNCTION . IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' '}'  (22)

	IDENTIFICADOR  shift 53
	.  error


state 37
	declaracion_funcion : tipo MOVE . FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' '}'  (23)

	FUNCTION  shift 54
	.  error


state 38
	declaracion : lista_variables ':' . tipo '.'  (24)

	LONG  shift 5
	DOUBLE  shift 6
	.  error

	tipo  goto 55


state 39
	lista_variables : lista_variables ',' . IDENTIFICADOR  (34)

	IDENTIFICADOR  shift 56
	.  error


state 40
	llamado_funcion : IDENTIFICADOR '(' ')' . '.'  (32)

	'.'  shift 57
	.  error


state 41
	factor : IDENTIFICADOR .  (49)

	.  reduce 49


state 42
	factor : CONSTANTE .  (50)

	.  reduce 50


state 43
	asignacion : IDENTIFICADOR '=' expresion . '.'  (30)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'.'  shift 58
	'+'  shift 59
	'-'  shift 60
	.  error


state 44
	expresion : termino .  (45)
	termino : termino . '*' factor  (46)
	termino : termino . '/' factor  (47)

	'*'  shift 61
	'/'  shift 62
	'.'  reduce 45
	')'  reduce 45
	'<'  reduce 45
	'>'  reduce 45
	"<="  reduce 45
	">="  reduce 45
	"<>"  reduce 45
	"=="  reduce 45
	'+'  reduce 45
	'-'  reduce 45


state 45
	termino : factor .  (48)

	.  reduce 48


state 46
	condicion : expresion . operador termino  (36)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'<'  shift 63
	'>'  shift 64
	"<="  shift 65
	">="  shift 66
	"<>"  shift 67
	"=="  shift 68
	'+'  shift 59
	'-'  shift 60
	.  error

	operador  goto 69


state 47
	sentencia_if_else : IF '(' condicion . ')' THEN bloque_control ELSE bloque_control END_IF '.'  (25)
	sentencia_if : IF '(' condicion . ')' THEN bloque_control END_IF '.'  (26)
	condicion : condicion . operador expresion  (35)

	')'  shift 70
	'<'  shift 63
	'>'  shift 64
	"<="  shift 65
	">="  shift 66
	"<>"  shift 67
	"=="  shift 68
	.  error

	operador  goto 71


state 48
	bloque_control : BEGIN cjto_sentencias_control END . '.'  (9)

	'.'  shift 72
	.  error


state 49
	cjto_sentencias_control : cjto_sentencias_control sentencia_unica_control .  (21)

	.  reduce 21


state 50
	cjto_sentencias_control : cjto_sentencias_control sentencia_unica_ejecutable .  (20)

	.  reduce 20


state 51
	salida : OUT '(' CADENA . ')' '.'  (31)

	')'  shift 73
	.  error


state 52
	sentencia_switch : SWITCH '(' IDENTIFICADOR . ')' '{' rep_switch '}' '.'  (27)

	')'  shift 74
	.  error


state 53
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR . '{' bloque_comun RETURN '(' expresion ')' '.' '}'  (22)

	'{'  shift 75
	.  error


state 54
	declaracion_funcion : tipo MOVE FUNCTION . IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' '}'  (23)

	IDENTIFICADOR  shift 76
	.  error


state 55
	declaracion : lista_variables ':' tipo . '.'  (24)

	'.'  shift 77
	.  error


state 56
	lista_variables : lista_variables ',' IDENTIFICADOR .  (34)

	.  reduce 34


state 57
	llamado_funcion : IDENTIFICADOR '(' ')' '.' .  (32)

	.  reduce 32


state 58
	asignacion : IDENTIFICADOR '=' expresion '.' .  (30)

	.  reduce 30


state 59
	expresion : expresion '+' . termino  (43)

	IDENTIFICADOR  shift 41
	CONSTANTE  shift 42
	.  error

	termino  goto 78
	factor  goto 45


state 60
	expresion : expresion '-' . termino  (44)

	IDENTIFICADOR  shift 41
	CONSTANTE  shift 42
	.  error

	termino  goto 79
	factor  goto 45


state 61
	termino : termino '*' . factor  (46)

	IDENTIFICADOR  shift 41
	CONSTANTE  shift 42
	.  error

	factor  goto 80


state 62
	termino : termino '/' . factor  (47)

	IDENTIFICADOR  shift 41
	CONSTANTE  shift 42
	.  error

	factor  goto 81


state 63
	operador : '<' .  (37)

	.  reduce 37


state 64
	operador : '>' .  (38)

	.  reduce 38


state 65
	operador : "<=" .  (39)

	.  reduce 39


state 66
	operador : ">=" .  (40)

	.  reduce 40


state 67
	operador : "<>" .  (41)

	.  reduce 41


state 68
	operador : "==" .  (42)

	.  reduce 42


state 69
	condicion : expresion operador . termino  (36)

	IDENTIFICADOR  shift 41
	CONSTANTE  shift 42
	.  error

	termino  goto 82
	factor  goto 45


state 70
	sentencia_if_else : IF '(' condicion ')' . THEN bloque_control ELSE bloque_control END_IF '.'  (25)
	sentencia_if : IF '(' condicion ')' . THEN bloque_control END_IF '.'  (26)

	THEN  shift 83
	.  error


state 71
	condicion : condicion operador . expresion  (35)

	IDENTIFICADOR  shift 41
	CONSTANTE  shift 42
	.  error

	expresion  goto 84
	termino  goto 44
	factor  goto 45


state 72
	bloque_control : BEGIN cjto_sentencias_control END '.' .  (9)

	.  reduce 9


state 73
	salida : OUT '(' CADENA ')' . '.'  (31)

	'.'  shift 85
	.  error


state 74
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' . '{' rep_switch '}' '.'  (27)

	'{'  shift 86
	.  error


state 75
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' . bloque_comun RETURN '(' expresion ')' '.' '}'  (22)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_comun  goto 87
	bloque_control  goto 13
	declaracion  goto 14
	bloque_sentencias  goto 15
	sentencia_unica_control  goto 16
	sentencia_unica_ejecutable  goto 17
	sentencia_if_else  goto 18
	sentencia_if  goto 19
	sentencia_switch  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23
	lista_variables  goto 25


state 76
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR . '{' bloque_comun RETURN '(' expresion ')' '.' '}'  (23)

	'{'  shift 88
	.  error


state 77
	declaracion : lista_variables ':' tipo '.' .  (24)

	.  reduce 24


state 78
	expresion : expresion '+' termino .  (43)
	termino : termino . '*' factor  (46)
	termino : termino . '/' factor  (47)

	'*'  shift 61
	'/'  shift 62
	'.'  reduce 43
	')'  reduce 43
	'<'  reduce 43
	'>'  reduce 43
	"<="  reduce 43
	">="  reduce 43
	"<>"  reduce 43
	"=="  reduce 43
	'+'  reduce 43
	'-'  reduce 43


state 79
	expresion : expresion '-' termino .  (44)
	termino : termino . '*' factor  (46)
	termino : termino . '/' factor  (47)

	'*'  shift 61
	'/'  shift 62
	'.'  reduce 44
	')'  reduce 44
	'<'  reduce 44
	'>'  reduce 44
	"<="  reduce 44
	">="  reduce 44
	"<>"  reduce 44
	"=="  reduce 44
	'+'  reduce 44
	'-'  reduce 44


state 80
	termino : termino '*' factor .  (46)

	.  reduce 46


state 81
	termino : termino '/' factor .  (47)

	.  reduce 47


state 82
	condicion : expresion operador termino .  (36)
	termino : termino . '*' factor  (46)
	termino : termino . '/' factor  (47)

	'*'  shift 61
	'/'  shift 62
	')'  reduce 36
	'<'  reduce 36
	'>'  reduce 36
	"<="  reduce 36
	">="  reduce 36
	"<>"  reduce 36
	"=="  reduce 36


state 83
	sentencia_if_else : IF '(' condicion ')' THEN . bloque_control ELSE bloque_control END_IF '.'  (25)
	sentencia_if : IF '(' condicion ')' THEN . bloque_control END_IF '.'  (26)

	IDENTIFICADOR  shift 29
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 89
	bloque_sentencias  goto 15
	sentencia_unica_control  goto 16
	sentencia_unica_ejecutable  goto 17
	sentencia_if_else  goto 18
	sentencia_if  goto 19
	sentencia_switch  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 84
	condicion : condicion operador expresion .  (35)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'+'  shift 59
	'-'  shift 60
	')'  reduce 35
	'<'  reduce 35
	'>'  reduce 35
	"<="  reduce 35
	">="  reduce 35
	"<>"  reduce 35
	"=="  reduce 35


state 85
	salida : OUT '(' CADENA ')' '.' .  (31)

	.  reduce 31


state 86
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' . rep_switch '}' '.'  (27)

	CASE  shift 90
	.  error

	rep_switch  goto 91


state 87
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_comun . RETURN '(' expresion ')' '.' '}'  (22)

	RETURN  shift 92
	.  error


state 88
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' . bloque_comun RETURN '(' expresion ')' '.' '}'  (23)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_comun  goto 93
	bloque_control  goto 13
	declaracion  goto 14
	bloque_sentencias  goto 15
	sentencia_unica_control  goto 16
	sentencia_unica_ejecutable  goto 17
	sentencia_if_else  goto 18
	sentencia_if  goto 19
	sentencia_switch  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23
	lista_variables  goto 25


state 89
	sentencia_if_else : IF '(' condicion ')' THEN bloque_control . ELSE bloque_control END_IF '.'  (25)
	sentencia_if : IF '(' condicion ')' THEN bloque_control . END_IF '.'  (26)

	ELSE  shift 94
	END_IF  shift 95
	.  error


state 90
	rep_switch : CASE . CONSTANTE ':' bloque_control  (28)

	CONSTANTE  shift 96
	.  error


state 91
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch . '}' '.'  (27)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloque_control  (29)

	CASE  shift 97
	'}'  shift 98
	.  error


state 92
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_comun RETURN . '(' expresion ')' '.' '}'  (22)

	'('  shift 99
	.  error


state 93
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_comun . RETURN '(' expresion ')' '.' '}'  (23)

	RETURN  shift 100
	.  error


state 94
	sentencia_if_else : IF '(' condicion ')' THEN bloque_control ELSE . bloque_control END_IF '.'  (25)

	IDENTIFICADOR  shift 29
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 101
	bloque_sentencias  goto 15
	sentencia_unica_control  goto 16
	sentencia_unica_ejecutable  goto 17
	sentencia_if_else  goto 18
	sentencia_if  goto 19
	sentencia_switch  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 95
	sentencia_if : IF '(' condicion ')' THEN bloque_control END_IF . '.'  (26)

	'.'  shift 102
	.  error


state 96
	rep_switch : CASE CONSTANTE . ':' bloque_control  (28)

	':'  shift 103
	.  error


state 97
	rep_switch : rep_switch CASE . CONSTANTE ':' bloque_control  (29)

	CONSTANTE  shift 104
	.  error


state 98
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' . '.'  (27)

	'.'  shift 105
	.  error


state 99
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' . expresion ')' '.' '}'  (22)

	IDENTIFICADOR  shift 41
	CONSTANTE  shift 42
	.  error

	expresion  goto 106
	termino  goto 44
	factor  goto 45


state 100
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_comun RETURN . '(' expresion ')' '.' '}'  (23)

	'('  shift 107
	.  error


state 101
	sentencia_if_else : IF '(' condicion ')' THEN bloque_control ELSE bloque_control . END_IF '.'  (25)

	END_IF  shift 108
	.  error


state 102
	sentencia_if : IF '(' condicion ')' THEN bloque_control END_IF '.' .  (26)

	.  reduce 26


state 103
	rep_switch : CASE CONSTANTE ':' . bloque_control  (28)

	IDENTIFICADOR  shift 29
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 109
	bloque_sentencias  goto 15
	sentencia_unica_control  goto 16
	sentencia_unica_ejecutable  goto 17
	sentencia_if_else  goto 18
	sentencia_if  goto 19
	sentencia_switch  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 104
	rep_switch : rep_switch CASE CONSTANTE . ':' bloque_control  (29)

	':'  shift 110
	.  error


state 105
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.' .  (27)

	.  reduce 27


state 106
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion . ')' '.' '}'  (22)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	')'  shift 111
	'+'  shift 59
	'-'  shift 60
	.  error


state 107
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' . expresion ')' '.' '}'  (23)

	IDENTIFICADOR  shift 41
	CONSTANTE  shift 42
	.  error

	expresion  goto 112
	termino  goto 44
	factor  goto 45


state 108
	sentencia_if_else : IF '(' condicion ')' THEN bloque_control ELSE bloque_control END_IF . '.'  (25)

	'.'  shift 113
	.  error


state 109
	rep_switch : CASE CONSTANTE ':' bloque_control .  (28)

	.  reduce 28


state 110
	rep_switch : rep_switch CASE CONSTANTE ':' . bloque_control  (29)

	IDENTIFICADOR  shift 29
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 114
	bloque_sentencias  goto 15
	sentencia_unica_control  goto 16
	sentencia_unica_ejecutable  goto 17
	sentencia_if_else  goto 18
	sentencia_if  goto 19
	sentencia_switch  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 111
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' . '.' '}'  (22)

	'.'  shift 115
	.  error


state 112
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion . ')' '.' '}'  (23)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	')'  shift 116
	'+'  shift 59
	'-'  shift 60
	.  error


state 113
	sentencia_if_else : IF '(' condicion ')' THEN bloque_control ELSE bloque_control END_IF '.' .  (25)

	.  reduce 25


state 114
	rep_switch : rep_switch CASE CONSTANTE ':' bloque_control .  (29)

	.  reduce 29


state 115
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' . '}'  (22)

	'}'  shift 117
	.  error


state 116
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' . '.' '}'  (23)

	'.'  shift 118
	.  error


state 117
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' '}' .  (22)

	.  reduce 22


state 118
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' . '}'  (23)

	'}'  shift 119
	.  error


state 119
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloque_comun RETURN '(' expresion ')' '.' '}' .  (23)

	.  reduce 23


37 terminals, 26 nonterminals
53 grammar rules, 120 states
