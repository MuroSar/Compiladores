   0  $accept : programa $end

   1  programa : bloque

   2  bloque : bloque_comun
   3         | declaracion_funcion
   4         | bloque bloque_comun
   5         | bloque declaracion_funcion

   6  bloque_comun : bloque_control
   7               | declaracion

   8  bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}'

   9  bloque_sentencias_funcion : sentencias
  10                            | declaracion
  11                            | bloque_sentencias_funcion sentencias
  12                            | bloque_sentencias_funcion declaracion

  13  bloque_control : sentencias
  14                 | BEGIN bloque_sentencias END '.'

  15  bloque_sentencias : sentencias
  16                    | bloque_sentencias sentencias

  17  sentencias : sentencia_unica_control
  18             | sentencia_unica_ejecutable

  19  sentencia_unica_control : sentencia_if
  20                          | sentencia_switch

  21  sentencia_unica_ejecutable : asignacion
  22                             | salida
  23                             | llamado_funcion

  24  declaracion_funcion : tipo FUNCTION IDENTIFICADOR bloque_funcion
  25                      | tipo MOVE FUNCTION IDENTIFICADOR bloque_funcion

  26  declaracion : lista_variables ':' tipo '.'

  27  $$1 :

  28  sentencia_if : IF '(' condicion ')' THEN $$1 cuerpo_if

  29  cuerpo_if : bloque_control END_IF '.'

  30  $$2 :

  31  cuerpo_if : bloque_control $$2 ELSE bloque_control END_IF '.'

  32  sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'

  33  rep_switch : CASE CONSTANTE ':' bloque_control
  34             | rep_switch CASE CONSTANTE ':' bloque_control

  35  asignacion : IDENTIFICADOR '=' expresion '.'

  36  salida : OUT '(' CADENA ')' '.'

  37  llamado_funcion : IDENTIFICADOR '(' ')' '.'

  38  lista_variables : IDENTIFICADOR
  39                  | lista_variables ',' IDENTIFICADOR

  40  condicion : condicion operador expresion
  41            | expresion operador expresion

  42  operador : '<'
  43           | '>'
  44           | "<="
  45           | ">="
  46           | "<>"
  47           | "=="

  48  expresion : expresion '+' termino
  49            | expresion '-' termino
  50            | termino

  51  termino : termino '*' factor
  52          | termino '/' factor
  53          | factor

  54  factor : IDENTIFICADOR
  55         | CONSTANTE

  56  tipo : LONG
  57       | DOUBLE

state 0
	$accept : . programa $end  (0)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	programa  goto 8
	bloque  goto 9
	bloque_comun  goto 10
	declaracion_funcion  goto 11
	bloque_control  goto 12
	declaracion  goto 13
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	tipo  goto 22
	lista_variables  goto 23


state 1
	asignacion : IDENTIFICADOR . '=' expresion '.'  (35)
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (37)
	lista_variables : IDENTIFICADOR .  (38)

	'('  shift 24
	'='  shift 25
	':'  reduce 38
	','  reduce 38


state 2
	sentencia_if : IF . '(' condicion ')' THEN $$1 cuerpo_if  (28)

	'('  shift 26
	.  error


state 3
	bloque_control : BEGIN . bloque_sentencias END '.'  (14)

	IDENTIFICADOR  shift 27
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	.  error

	sentencias  goto 28
	bloque_sentencias  goto 29
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 4
	salida : OUT . '(' CADENA ')' '.'  (36)

	'('  shift 30
	.  error


state 5
	tipo : LONG .  (56)

	.  reduce 56


state 6
	tipo : DOUBLE .  (57)

	.  reduce 57


state 7
	sentencia_switch : SWITCH . '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'  (32)

	'('  shift 31
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque .  (1)
	bloque : bloque . bloque_comun  (4)
	bloque : bloque . declaracion_funcion  (5)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	$end  reduce 1

	bloque_comun  goto 32
	declaracion_funcion  goto 33
	bloque_control  goto 12
	declaracion  goto 13
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	tipo  goto 22
	lista_variables  goto 23


state 10
	bloque : bloque_comun .  (2)

	.  reduce 2


state 11
	bloque : declaracion_funcion .  (3)

	.  reduce 3


state 12
	bloque_comun : bloque_control .  (6)

	.  reduce 6


state 13
	bloque_comun : declaracion .  (7)

	.  reduce 7


state 14
	bloque_control : sentencias .  (13)

	.  reduce 13


state 15
	sentencias : sentencia_unica_control .  (17)

	.  reduce 17


state 16
	sentencias : sentencia_unica_ejecutable .  (18)

	.  reduce 18


state 17
	sentencia_unica_control : sentencia_if .  (19)

	.  reduce 19


state 18
	sentencia_unica_control : sentencia_switch .  (20)

	.  reduce 20


state 19
	sentencia_unica_ejecutable : asignacion .  (21)

	.  reduce 21


state 20
	sentencia_unica_ejecutable : salida .  (22)

	.  reduce 22


state 21
	sentencia_unica_ejecutable : llamado_funcion .  (23)

	.  reduce 23


state 22
	declaracion_funcion : tipo . FUNCTION IDENTIFICADOR bloque_funcion  (24)
	declaracion_funcion : tipo . MOVE FUNCTION IDENTIFICADOR bloque_funcion  (25)

	FUNCTION  shift 34
	MOVE  shift 35
	.  error


state 23
	declaracion : lista_variables . ':' tipo '.'  (26)
	lista_variables : lista_variables . ',' IDENTIFICADOR  (39)

	':'  shift 36
	','  shift 37
	.  error


state 24
	llamado_funcion : IDENTIFICADOR '(' . ')' '.'  (37)

	')'  shift 38
	.  error


state 25
	asignacion : IDENTIFICADOR '=' . expresion '.'  (35)

	IDENTIFICADOR  shift 39
	CONSTANTE  shift 40
	.  error

	expresion  goto 41
	termino  goto 42
	factor  goto 43


state 26
	sentencia_if : IF '(' . condicion ')' THEN $$1 cuerpo_if  (28)

	IDENTIFICADOR  shift 39
	CONSTANTE  shift 40
	.  error

	expresion  goto 44
	condicion  goto 45
	termino  goto 42
	factor  goto 43


state 27
	asignacion : IDENTIFICADOR . '=' expresion '.'  (35)
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (37)

	'('  shift 24
	'='  shift 25
	.  error


state 28
	bloque_sentencias : sentencias .  (15)

	.  reduce 15


state 29
	bloque_control : BEGIN bloque_sentencias . END '.'  (14)
	bloque_sentencias : bloque_sentencias . sentencias  (16)

	IDENTIFICADOR  shift 27
	IF  shift 2
	END  shift 46
	OUT  shift 4
	SWITCH  shift 7
	.  error

	sentencias  goto 47
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 30
	salida : OUT '(' . CADENA ')' '.'  (36)

	CADENA  shift 48
	.  error


state 31
	sentencia_switch : SWITCH '(' . IDENTIFICADOR ')' '{' rep_switch '}' '.'  (32)

	IDENTIFICADOR  shift 49
	.  error


state 32
	bloque : bloque bloque_comun .  (4)

	.  reduce 4


state 33
	bloque : bloque declaracion_funcion .  (5)

	.  reduce 5


state 34
	declaracion_funcion : tipo FUNCTION . IDENTIFICADOR bloque_funcion  (24)

	IDENTIFICADOR  shift 50
	.  error


state 35
	declaracion_funcion : tipo MOVE . FUNCTION IDENTIFICADOR bloque_funcion  (25)

	FUNCTION  shift 51
	.  error


state 36
	declaracion : lista_variables ':' . tipo '.'  (26)

	LONG  shift 5
	DOUBLE  shift 6
	.  error

	tipo  goto 52


state 37
	lista_variables : lista_variables ',' . IDENTIFICADOR  (39)

	IDENTIFICADOR  shift 53
	.  error


state 38
	llamado_funcion : IDENTIFICADOR '(' ')' . '.'  (37)

	'.'  shift 54
	.  error


state 39
	factor : IDENTIFICADOR .  (54)

	.  reduce 54


state 40
	factor : CONSTANTE .  (55)

	.  reduce 55


state 41
	asignacion : IDENTIFICADOR '=' expresion . '.'  (35)
	expresion : expresion . '+' termino  (48)
	expresion : expresion . '-' termino  (49)

	'.'  shift 55
	'+'  shift 56
	'-'  shift 57
	.  error


state 42
	expresion : termino .  (50)
	termino : termino . '*' factor  (51)
	termino : termino . '/' factor  (52)

	'*'  shift 58
	'/'  shift 59
	')'  reduce 50
	'.'  reduce 50
	'<'  reduce 50
	'>'  reduce 50
	"<="  reduce 50
	">="  reduce 50
	"<>"  reduce 50
	"=="  reduce 50
	'+'  reduce 50
	'-'  reduce 50


state 43
	termino : factor .  (53)

	.  reduce 53


state 44
	condicion : expresion . operador expresion  (41)
	expresion : expresion . '+' termino  (48)
	expresion : expresion . '-' termino  (49)

	'<'  shift 60
	'>'  shift 61
	"<="  shift 62
	">="  shift 63
	"<>"  shift 64
	"=="  shift 65
	'+'  shift 56
	'-'  shift 57
	.  error

	operador  goto 66


state 45
	sentencia_if : IF '(' condicion . ')' THEN $$1 cuerpo_if  (28)
	condicion : condicion . operador expresion  (40)

	')'  shift 67
	'<'  shift 60
	'>'  shift 61
	"<="  shift 62
	">="  shift 63
	"<>"  shift 64
	"=="  shift 65
	.  error

	operador  goto 68


state 46
	bloque_control : BEGIN bloque_sentencias END . '.'  (14)

	'.'  shift 69
	.  error


state 47
	bloque_sentencias : bloque_sentencias sentencias .  (16)

	.  reduce 16


state 48
	salida : OUT '(' CADENA . ')' '.'  (36)

	')'  shift 70
	.  error


state 49
	sentencia_switch : SWITCH '(' IDENTIFICADOR . ')' '{' rep_switch '}' '.'  (32)

	')'  shift 71
	.  error


state 50
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR . bloque_funcion  (24)

	'{'  shift 72
	.  error

	bloque_funcion  goto 73


state 51
	declaracion_funcion : tipo MOVE FUNCTION . IDENTIFICADOR bloque_funcion  (25)

	IDENTIFICADOR  shift 74
	.  error


state 52
	declaracion : lista_variables ':' tipo . '.'  (26)

	'.'  shift 75
	.  error


state 53
	lista_variables : lista_variables ',' IDENTIFICADOR .  (39)

	.  reduce 39


state 54
	llamado_funcion : IDENTIFICADOR '(' ')' '.' .  (37)

	.  reduce 37


state 55
	asignacion : IDENTIFICADOR '=' expresion '.' .  (35)

	.  reduce 35


state 56
	expresion : expresion '+' . termino  (48)

	IDENTIFICADOR  shift 39
	CONSTANTE  shift 40
	.  error

	termino  goto 76
	factor  goto 43


state 57
	expresion : expresion '-' . termino  (49)

	IDENTIFICADOR  shift 39
	CONSTANTE  shift 40
	.  error

	termino  goto 77
	factor  goto 43


state 58
	termino : termino '*' . factor  (51)

	IDENTIFICADOR  shift 39
	CONSTANTE  shift 40
	.  error

	factor  goto 78


state 59
	termino : termino '/' . factor  (52)

	IDENTIFICADOR  shift 39
	CONSTANTE  shift 40
	.  error

	factor  goto 79


state 60
	operador : '<' .  (42)

	.  reduce 42


state 61
	operador : '>' .  (43)

	.  reduce 43


state 62
	operador : "<=" .  (44)

	.  reduce 44


state 63
	operador : ">=" .  (45)

	.  reduce 45


state 64
	operador : "<>" .  (46)

	.  reduce 46


state 65
	operador : "==" .  (47)

	.  reduce 47


state 66
	condicion : expresion operador . expresion  (41)

	IDENTIFICADOR  shift 39
	CONSTANTE  shift 40
	.  error

	expresion  goto 80
	termino  goto 42
	factor  goto 43


state 67
	sentencia_if : IF '(' condicion ')' . THEN $$1 cuerpo_if  (28)

	THEN  shift 81
	.  error


state 68
	condicion : condicion operador . expresion  (40)

	IDENTIFICADOR  shift 39
	CONSTANTE  shift 40
	.  error

	expresion  goto 82
	termino  goto 42
	factor  goto 43


state 69
	bloque_control : BEGIN bloque_sentencias END '.' .  (14)

	.  reduce 14


state 70
	salida : OUT '(' CADENA ')' . '.'  (36)

	'.'  shift 83
	.  error


state 71
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' . '{' rep_switch '}' '.'  (32)

	'{'  shift 84
	.  error


state 72
	bloque_funcion : '{' . bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}'  (8)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	.  error

	declaracion  goto 85
	bloque_sentencias_funcion  goto 86
	sentencias  goto 87
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	lista_variables  goto 23


state 73
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR bloque_funcion .  (24)

	.  reduce 24


state 74
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR . bloque_funcion  (25)

	'{'  shift 72
	.  error

	bloque_funcion  goto 88


state 75
	declaracion : lista_variables ':' tipo '.' .  (26)

	.  reduce 26


state 76
	expresion : expresion '+' termino .  (48)
	termino : termino . '*' factor  (51)
	termino : termino . '/' factor  (52)

	'*'  shift 58
	'/'  shift 59
	')'  reduce 48
	'.'  reduce 48
	'<'  reduce 48
	'>'  reduce 48
	"<="  reduce 48
	">="  reduce 48
	"<>"  reduce 48
	"=="  reduce 48
	'+'  reduce 48
	'-'  reduce 48


state 77
	expresion : expresion '-' termino .  (49)
	termino : termino . '*' factor  (51)
	termino : termino . '/' factor  (52)

	'*'  shift 58
	'/'  shift 59
	')'  reduce 49
	'.'  reduce 49
	'<'  reduce 49
	'>'  reduce 49
	"<="  reduce 49
	">="  reduce 49
	"<>"  reduce 49
	"=="  reduce 49
	'+'  reduce 49
	'-'  reduce 49


state 78
	termino : termino '*' factor .  (51)

	.  reduce 51


state 79
	termino : termino '/' factor .  (52)

	.  reduce 52


state 80
	condicion : expresion operador expresion .  (41)
	expresion : expresion . '+' termino  (48)
	expresion : expresion . '-' termino  (49)

	'+'  shift 56
	'-'  shift 57
	')'  reduce 41
	'<'  reduce 41
	'>'  reduce 41
	"<="  reduce 41
	">="  reduce 41
	"<>"  reduce 41
	"=="  reduce 41


state 81
	sentencia_if : IF '(' condicion ')' THEN . $$1 cuerpo_if  (28)
	$$1 : .  (27)

	.  reduce 27

	$$1  goto 89


state 82
	condicion : condicion operador expresion .  (40)
	expresion : expresion . '+' termino  (48)
	expresion : expresion . '-' termino  (49)

	'+'  shift 56
	'-'  shift 57
	')'  reduce 40
	'<'  reduce 40
	'>'  reduce 40
	"<="  reduce 40
	">="  reduce 40
	"<>"  reduce 40
	"=="  reduce 40


state 83
	salida : OUT '(' CADENA ')' '.' .  (36)

	.  reduce 36


state 84
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' . rep_switch '}' '.'  (32)

	CASE  shift 90
	.  error

	rep_switch  goto 91


state 85
	bloque_sentencias_funcion : declaracion .  (10)

	.  reduce 10


state 86
	bloque_funcion : '{' bloque_sentencias_funcion . RETURN '(' expresion ')' '.' '}'  (8)
	bloque_sentencias_funcion : bloque_sentencias_funcion . sentencias  (11)
	bloque_sentencias_funcion : bloque_sentencias_funcion . declaracion  (12)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	RETURN  shift 92
	.  error

	declaracion  goto 93
	sentencias  goto 94
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	lista_variables  goto 23


state 87
	bloque_sentencias_funcion : sentencias .  (9)

	.  reduce 9


state 88
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR bloque_funcion .  (25)

	.  reduce 25


state 89
	sentencia_if : IF '(' condicion ')' THEN $$1 . cuerpo_if  (28)

	IDENTIFICADOR  shift 27
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 95
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	cuerpo_if  goto 96


state 90
	rep_switch : CASE . CONSTANTE ':' bloque_control  (33)

	CONSTANTE  shift 97
	.  error


state 91
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch . '}' '.'  (32)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloque_control  (34)

	CASE  shift 98
	'}'  shift 99
	.  error


state 92
	bloque_funcion : '{' bloque_sentencias_funcion RETURN . '(' expresion ')' '.' '}'  (8)

	'('  shift 100
	.  error


state 93
	bloque_sentencias_funcion : bloque_sentencias_funcion declaracion .  (12)

	.  reduce 12


state 94
	bloque_sentencias_funcion : bloque_sentencias_funcion sentencias .  (11)

	.  reduce 11


state 95
	cuerpo_if : bloque_control . END_IF '.'  (29)
	cuerpo_if : bloque_control . $$2 ELSE bloque_control END_IF '.'  (31)
	$$2 : .  (30)

	END_IF  shift 101
	ELSE  reduce 30

	$$2  goto 102


state 96
	sentencia_if : IF '(' condicion ')' THEN $$1 cuerpo_if .  (28)

	.  reduce 28


state 97
	rep_switch : CASE CONSTANTE . ':' bloque_control  (33)

	':'  shift 103
	.  error


state 98
	rep_switch : rep_switch CASE . CONSTANTE ':' bloque_control  (34)

	CONSTANTE  shift 104
	.  error


state 99
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' . '.'  (32)

	'.'  shift 105
	.  error


state 100
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' . expresion ')' '.' '}'  (8)

	IDENTIFICADOR  shift 39
	CONSTANTE  shift 40
	.  error

	expresion  goto 106
	termino  goto 42
	factor  goto 43


state 101
	cuerpo_if : bloque_control END_IF . '.'  (29)

	'.'  shift 107
	.  error


state 102
	cuerpo_if : bloque_control $$2 . ELSE bloque_control END_IF '.'  (31)

	ELSE  shift 108
	.  error


state 103
	rep_switch : CASE CONSTANTE ':' . bloque_control  (33)

	IDENTIFICADOR  shift 27
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 109
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 104
	rep_switch : rep_switch CASE CONSTANTE . ':' bloque_control  (34)

	':'  shift 110
	.  error


state 105
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.' .  (32)

	.  reduce 32


state 106
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion . ')' '.' '}'  (8)
	expresion : expresion . '+' termino  (48)
	expresion : expresion . '-' termino  (49)

	')'  shift 111
	'+'  shift 56
	'-'  shift 57
	.  error


state 107
	cuerpo_if : bloque_control END_IF '.' .  (29)

	.  reduce 29


state 108
	cuerpo_if : bloque_control $$2 ELSE . bloque_control END_IF '.'  (31)

	IDENTIFICADOR  shift 27
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 112
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 109
	rep_switch : CASE CONSTANTE ':' bloque_control .  (33)

	.  reduce 33


state 110
	rep_switch : rep_switch CASE CONSTANTE ':' . bloque_control  (34)

	IDENTIFICADOR  shift 27
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 113
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 111
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' . '.' '}'  (8)

	'.'  shift 114
	.  error


state 112
	cuerpo_if : bloque_control $$2 ELSE bloque_control . END_IF '.'  (31)

	END_IF  shift 115
	.  error


state 113
	rep_switch : rep_switch CASE CONSTANTE ':' bloque_control .  (34)

	.  reduce 34


state 114
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' . '}'  (8)

	'}'  shift 116
	.  error


state 115
	cuerpo_if : bloque_control $$2 ELSE bloque_control END_IF . '.'  (31)

	'.'  shift 117
	.  error


state 116
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}' .  (8)

	.  reduce 8


state 117
	cuerpo_if : bloque_control $$2 ELSE bloque_control END_IF '.' .  (31)

	.  reduce 31


37 terminals, 29 nonterminals
58 grammar rules, 118 states
