   0  $accept : programa $end

   1  programa : bloque_main

   2  bloque_main : bloque_comun
   3              | bloque_main bloque_comun

   4  bloque_comun : bloques
   5               | declaracion_funcion

   6  bloques : bloque_para_funcion
   7          | BEGIN bloques END '.'

   8  bloque_para_funcion : sentencia_if_else
   9                      | sentencia_if
  10                      | sentencia_switch
  11                      | sentencias

  12  sentencia_if_else : IF '(' condicion ')' THEN bloques ELSE bloques END_IF '.'
  13                    | IF error ELSE bloques END_IF '.'
  14                    | IF '(' error ELSE bloques END_IF '.'
  15                    | IF '(' condicion error ELSE bloques END_IF '.'
  16                    | IF '(' condicion ')' error ELSE bloques END_IF '.'
  17                    | IF '(' condicion ')' THEN error bloques END_IF '.'

  18  sentencia_if : IF '(' condicion ')' THEN bloques END_IF '.'
  19               | IF error END_IF '.'
  20               | IF '(' error END_IF '.'
  21               | IF '(' condicion error END_IF '.'
  22               | IF '(' condicion ')' error END_IF '.'

  23  sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'
  24                   | SWITCH error rep_switch '}' '.'
  25                   | SWITCH '(' error rep_switch '}' '.'
  26                   | SWITCH '(' IDENTIFICADOR error rep_switch '}' '.'
  27                   | SWITCH '(' IDENTIFICADOR ')' error rep_switch '}' '.'

  28  sentencias : sentencia_unica
  29             | sentencias sentencia_unica

  30  sentencia_unica : declaracion
  31                  | asignacion
  32                  | salida
  33                  | llamado_funcion

  34  declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'
  35                      | tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'
  36                      | error FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'
  37                      | tipo error IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'
  38                      | tipo FUNCTION error '{' bloques RETURN '(' expresion ')' '.' '}'
  39                      | tipo FUNCTION IDENTIFICADOR error bloques RETURN '(' expresion ')' '.' '}'

  40  llamado_funcion : IDENTIFICADOR '(' ')' '.'
  41                  | IDENTIFICADOR error ')' '.'
  42                  | IDENTIFICADOR '(' error '.'

  43  asignacion : IDENTIFICADOR '=' expresion '.'
  44             | IDENTIFICADOR error expresion '.'

  45  declaracion : IDENTIFICADOR ',' declaracion '.'
  46              | IDENTIFICADOR ':' tipo '.'
  47              | IDENTIFICADOR error tipo '.'
  48              | IDENTIFICADOR ':' error '.'
  49              | IDENTIFICADOR ':' tipo error

  50  rep_switch : CASE CONSTANTE ':' bloques
  51             | rep_switch CASE CONSTANTE ':' bloques
  52             | CASE CONSTANTE error bloques

  53  condicion : condicion operador expresion
  54            | expresion operador termino

  55  operador : '<'
  56           | '>'
  57           | "<="
  58           | ">="
  59           | "<>"
  60           | "=="

  61  expresion : expresion '+' termino
  62            | expresion '-' termino
  63            | termino

  64  termino : termino '*' factor
  65          | termino '/' factor
  66          | factor

  67  factor : IDENTIFICADOR
  68         | CONSTANTE

  69  salida : OUT '(' CADENA ')' '.'

  70  tipo : LONG
  71       | DOUBLE

state 0
	$accept : . programa $end  (0)

	error  shift 1
	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	LONG  shift 6
	DOUBLE  shift 7
	SWITCH  shift 8
	.  error

	programa  goto 9
	bloque_main  goto 10
	bloque_comun  goto 11
	bloques  goto 12
	declaracion_funcion  goto 13
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23
	tipo  goto 24


state 1
	declaracion_funcion : error . FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (36)

	FUNCTION  shift 25
	.  error


state 2
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (40)
	llamado_funcion : IDENTIFICADOR . error ')' '.'  (41)
	llamado_funcion : IDENTIFICADOR . '(' error '.'  (42)
	asignacion : IDENTIFICADOR . '=' expresion '.'  (43)
	asignacion : IDENTIFICADOR . error expresion '.'  (44)
	declaracion : IDENTIFICADOR . ',' declaracion '.'  (45)
	declaracion : IDENTIFICADOR . ':' tipo '.'  (46)
	declaracion : IDENTIFICADOR . error tipo '.'  (47)
	declaracion : IDENTIFICADOR . ':' error '.'  (48)
	declaracion : IDENTIFICADOR . ':' tipo error  (49)

	error  shift 26
	'('  shift 27
	'='  shift 28
	','  shift 29
	':'  shift 30
	.  error


state 3
	sentencia_if_else : IF . '(' condicion ')' THEN bloques ELSE bloques END_IF '.'  (12)
	sentencia_if_else : IF . error ELSE bloques END_IF '.'  (13)
	sentencia_if_else : IF . '(' error ELSE bloques END_IF '.'  (14)
	sentencia_if_else : IF . '(' condicion error ELSE bloques END_IF '.'  (15)
	sentencia_if_else : IF . '(' condicion ')' error ELSE bloques END_IF '.'  (16)
	sentencia_if_else : IF . '(' condicion ')' THEN error bloques END_IF '.'  (17)
	sentencia_if : IF . '(' condicion ')' THEN bloques END_IF '.'  (18)
	sentencia_if : IF . error END_IF '.'  (19)
	sentencia_if : IF . '(' error END_IF '.'  (20)
	sentencia_if : IF . '(' condicion error END_IF '.'  (21)
	sentencia_if : IF . '(' condicion ')' error END_IF '.'  (22)

	error  shift 31
	'('  shift 32
	.  error


state 4
	bloques : BEGIN . bloques END '.'  (7)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 33
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 5
	salida : OUT . '(' CADENA ')' '.'  (69)

	'('  shift 34
	.  error


state 6
	tipo : LONG .  (70)

	.  reduce 70


state 7
	tipo : DOUBLE .  (71)

	.  reduce 71


state 8
	sentencia_switch : SWITCH . '(' IDENTIFICADOR ')' '{' rep_switch '}' '.'  (23)
	sentencia_switch : SWITCH . error rep_switch '}' '.'  (24)
	sentencia_switch : SWITCH . '(' error rep_switch '}' '.'  (25)
	sentencia_switch : SWITCH . '(' IDENTIFICADOR error rep_switch '}' '.'  (26)
	sentencia_switch : SWITCH . '(' IDENTIFICADOR ')' error rep_switch '}' '.'  (27)

	error  shift 35
	'('  shift 36
	.  error


state 9
	$accept : programa . $end  (0)

	$end  accept


state 10
	programa : bloque_main .  (1)
	bloque_main : bloque_main . bloque_comun  (3)

	error  shift 1
	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	LONG  shift 6
	DOUBLE  shift 7
	SWITCH  shift 8
	$end  reduce 1

	bloque_comun  goto 37
	bloques  goto 12
	declaracion_funcion  goto 13
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23
	tipo  goto 24


state 11
	bloque_main : bloque_comun .  (2)

	.  reduce 2


state 12
	bloque_comun : bloques .  (4)

	.  reduce 4


state 13
	bloque_comun : declaracion_funcion .  (5)

	.  reduce 5


state 14
	bloques : bloque_para_funcion .  (6)

	.  reduce 6


state 15
	bloque_para_funcion : sentencia_if_else .  (8)

	.  reduce 8


state 16
	bloque_para_funcion : sentencia_if .  (9)

	.  reduce 9


state 17
	bloque_para_funcion : sentencia_switch .  (10)

	.  reduce 10


18: shift/reduce conflict (shift 2, reduce 11) on IDENTIFICADOR
18: shift/reduce conflict (shift 5, reduce 11) on OUT
state 18
	bloque_para_funcion : sentencias .  (11)
	sentencias : sentencias . sentencia_unica  (29)

	IDENTIFICADOR  shift 2
	OUT  shift 5
	$end  reduce 11
	error  reduce 11
	IF  reduce 11
	ELSE  reduce 11
	END_IF  reduce 11
	BEGIN  reduce 11
	END  reduce 11
	LONG  reduce 11
	DOUBLE  reduce 11
	SWITCH  reduce 11
	CASE  reduce 11
	RETURN  reduce 11
	'}'  reduce 11

	sentencia_unica  goto 38
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 19
	sentencias : sentencia_unica .  (28)

	.  reduce 28


state 20
	sentencia_unica : declaracion .  (30)

	.  reduce 30


state 21
	sentencia_unica : asignacion .  (31)

	.  reduce 31


state 22
	sentencia_unica : salida .  (32)

	.  reduce 32


state 23
	sentencia_unica : llamado_funcion .  (33)

	.  reduce 33


state 24
	declaracion_funcion : tipo . FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (34)
	declaracion_funcion : tipo . MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (35)
	declaracion_funcion : tipo . error IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (37)
	declaracion_funcion : tipo . FUNCTION error '{' bloques RETURN '(' expresion ')' '.' '}'  (38)
	declaracion_funcion : tipo . FUNCTION IDENTIFICADOR error bloques RETURN '(' expresion ')' '.' '}'  (39)

	error  shift 39
	FUNCTION  shift 40
	MOVE  shift 41
	.  error


state 25
	declaracion_funcion : error FUNCTION . IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (36)

	IDENTIFICADOR  shift 42
	.  error


state 26
	llamado_funcion : IDENTIFICADOR error . ')' '.'  (41)
	asignacion : IDENTIFICADOR error . expresion '.'  (44)
	declaracion : IDENTIFICADOR error . tipo '.'  (47)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	LONG  shift 6
	DOUBLE  shift 7
	')'  shift 45
	.  error

	tipo  goto 46
	expresion  goto 47
	termino  goto 48
	factor  goto 49


state 27
	llamado_funcion : IDENTIFICADOR '(' . ')' '.'  (40)
	llamado_funcion : IDENTIFICADOR '(' . error '.'  (42)

	error  shift 50
	')'  shift 51
	.  error


state 28
	asignacion : IDENTIFICADOR '=' . expresion '.'  (43)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	expresion  goto 52
	termino  goto 48
	factor  goto 49


state 29
	declaracion : IDENTIFICADOR ',' . declaracion '.'  (45)

	IDENTIFICADOR  shift 53
	.  error

	declaracion  goto 54


state 30
	declaracion : IDENTIFICADOR ':' . tipo '.'  (46)
	declaracion : IDENTIFICADOR ':' . error '.'  (48)
	declaracion : IDENTIFICADOR ':' . tipo error  (49)

	error  shift 55
	LONG  shift 6
	DOUBLE  shift 7
	.  error

	tipo  goto 56


state 31
	sentencia_if_else : IF error . ELSE bloques END_IF '.'  (13)
	sentencia_if : IF error . END_IF '.'  (19)

	ELSE  shift 57
	END_IF  shift 58
	.  error


state 32
	sentencia_if_else : IF '(' . condicion ')' THEN bloques ELSE bloques END_IF '.'  (12)
	sentencia_if_else : IF '(' . error ELSE bloques END_IF '.'  (14)
	sentencia_if_else : IF '(' . condicion error ELSE bloques END_IF '.'  (15)
	sentencia_if_else : IF '(' . condicion ')' error ELSE bloques END_IF '.'  (16)
	sentencia_if_else : IF '(' . condicion ')' THEN error bloques END_IF '.'  (17)
	sentencia_if : IF '(' . condicion ')' THEN bloques END_IF '.'  (18)
	sentencia_if : IF '(' . error END_IF '.'  (20)
	sentencia_if : IF '(' . condicion error END_IF '.'  (21)
	sentencia_if : IF '(' . condicion ')' error END_IF '.'  (22)

	error  shift 59
	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	condicion  goto 60
	expresion  goto 61
	termino  goto 48
	factor  goto 49


state 33
	bloques : BEGIN bloques . END '.'  (7)

	END  shift 62
	.  error


state 34
	salida : OUT '(' . CADENA ')' '.'  (69)

	CADENA  shift 63
	.  error


state 35
	sentencia_switch : SWITCH error . rep_switch '}' '.'  (24)

	CASE  shift 64
	.  error

	rep_switch  goto 65


state 36
	sentencia_switch : SWITCH '(' . IDENTIFICADOR ')' '{' rep_switch '}' '.'  (23)
	sentencia_switch : SWITCH '(' . error rep_switch '}' '.'  (25)
	sentencia_switch : SWITCH '(' . IDENTIFICADOR error rep_switch '}' '.'  (26)
	sentencia_switch : SWITCH '(' . IDENTIFICADOR ')' error rep_switch '}' '.'  (27)

	error  shift 66
	IDENTIFICADOR  shift 67
	.  error


state 37
	bloque_main : bloque_main bloque_comun .  (3)

	.  reduce 3


state 38
	sentencias : sentencias sentencia_unica .  (29)

	.  reduce 29


state 39
	declaracion_funcion : tipo error . IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (37)

	IDENTIFICADOR  shift 68
	.  error


state 40
	declaracion_funcion : tipo FUNCTION . IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (34)
	declaracion_funcion : tipo FUNCTION . error '{' bloques RETURN '(' expresion ')' '.' '}'  (38)
	declaracion_funcion : tipo FUNCTION . IDENTIFICADOR error bloques RETURN '(' expresion ')' '.' '}'  (39)

	error  shift 69
	IDENTIFICADOR  shift 70
	.  error


state 41
	declaracion_funcion : tipo MOVE . FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (35)

	FUNCTION  shift 71
	.  error


state 42
	declaracion_funcion : error FUNCTION IDENTIFICADOR . '{' bloques RETURN '(' expresion ')' '.' '}'  (36)

	'{'  shift 72
	.  error


state 43
	factor : IDENTIFICADOR .  (67)

	.  reduce 67


state 44
	factor : CONSTANTE .  (68)

	.  reduce 68


state 45
	llamado_funcion : IDENTIFICADOR error ')' . '.'  (41)

	'.'  shift 73
	.  error


state 46
	declaracion : IDENTIFICADOR error tipo . '.'  (47)

	'.'  shift 74
	.  error


state 47
	asignacion : IDENTIFICADOR error expresion . '.'  (44)
	expresion : expresion . '+' termino  (61)
	expresion : expresion . '-' termino  (62)

	'.'  shift 75
	'+'  shift 76
	'-'  shift 77
	.  error


state 48
	expresion : termino .  (63)
	termino : termino . '*' factor  (64)
	termino : termino . '/' factor  (65)

	'*'  shift 78
	'/'  shift 79
	error  reduce 63
	'.'  reduce 63
	')'  reduce 63
	'<'  reduce 63
	'>'  reduce 63
	"<="  reduce 63
	">="  reduce 63
	"<>"  reduce 63
	"=="  reduce 63
	'+'  reduce 63
	'-'  reduce 63


state 49
	termino : factor .  (66)

	.  reduce 66


state 50
	llamado_funcion : IDENTIFICADOR '(' error . '.'  (42)

	'.'  shift 80
	.  error


state 51
	llamado_funcion : IDENTIFICADOR '(' ')' . '.'  (40)

	'.'  shift 81
	.  error


state 52
	asignacion : IDENTIFICADOR '=' expresion . '.'  (43)
	expresion : expresion . '+' termino  (61)
	expresion : expresion . '-' termino  (62)

	'.'  shift 82
	'+'  shift 76
	'-'  shift 77
	.  error


state 53
	declaracion : IDENTIFICADOR . ',' declaracion '.'  (45)
	declaracion : IDENTIFICADOR . ':' tipo '.'  (46)
	declaracion : IDENTIFICADOR . error tipo '.'  (47)
	declaracion : IDENTIFICADOR . ':' error '.'  (48)
	declaracion : IDENTIFICADOR . ':' tipo error  (49)

	error  shift 83
	','  shift 29
	':'  shift 30
	.  error


state 54
	declaracion : IDENTIFICADOR ',' declaracion . '.'  (45)

	'.'  shift 84
	.  error


state 55
	declaracion : IDENTIFICADOR ':' error . '.'  (48)

	'.'  shift 85
	.  error


state 56
	declaracion : IDENTIFICADOR ':' tipo . '.'  (46)
	declaracion : IDENTIFICADOR ':' tipo . error  (49)

	error  shift 86
	'.'  shift 87
	.  error


state 57
	sentencia_if_else : IF error ELSE . bloques END_IF '.'  (13)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 88
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 58
	sentencia_if : IF error END_IF . '.'  (19)

	'.'  shift 89
	.  error


state 59
	sentencia_if_else : IF '(' error . ELSE bloques END_IF '.'  (14)
	sentencia_if : IF '(' error . END_IF '.'  (20)

	ELSE  shift 90
	END_IF  shift 91
	.  error


state 60
	sentencia_if_else : IF '(' condicion . ')' THEN bloques ELSE bloques END_IF '.'  (12)
	sentencia_if_else : IF '(' condicion . error ELSE bloques END_IF '.'  (15)
	sentencia_if_else : IF '(' condicion . ')' error ELSE bloques END_IF '.'  (16)
	sentencia_if_else : IF '(' condicion . ')' THEN error bloques END_IF '.'  (17)
	sentencia_if : IF '(' condicion . ')' THEN bloques END_IF '.'  (18)
	sentencia_if : IF '(' condicion . error END_IF '.'  (21)
	sentencia_if : IF '(' condicion . ')' error END_IF '.'  (22)
	condicion : condicion . operador expresion  (53)

	error  shift 92
	')'  shift 93
	'<'  shift 94
	'>'  shift 95
	"<="  shift 96
	">="  shift 97
	"<>"  shift 98
	"=="  shift 99
	.  error

	operador  goto 100


state 61
	condicion : expresion . operador termino  (54)
	expresion : expresion . '+' termino  (61)
	expresion : expresion . '-' termino  (62)

	'<'  shift 94
	'>'  shift 95
	"<="  shift 96
	">="  shift 97
	"<>"  shift 98
	"=="  shift 99
	'+'  shift 76
	'-'  shift 77
	.  error

	operador  goto 101


state 62
	bloques : BEGIN bloques END . '.'  (7)

	'.'  shift 102
	.  error


state 63
	salida : OUT '(' CADENA . ')' '.'  (69)

	')'  shift 103
	.  error


state 64
	rep_switch : CASE . CONSTANTE ':' bloques  (50)
	rep_switch : CASE . CONSTANTE error bloques  (52)

	CONSTANTE  shift 104
	.  error


state 65
	sentencia_switch : SWITCH error rep_switch . '}' '.'  (24)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloques  (51)

	CASE  shift 105
	'}'  shift 106
	.  error


state 66
	sentencia_switch : SWITCH '(' error . rep_switch '}' '.'  (25)

	CASE  shift 64
	.  error

	rep_switch  goto 107


state 67
	sentencia_switch : SWITCH '(' IDENTIFICADOR . ')' '{' rep_switch '}' '.'  (23)
	sentencia_switch : SWITCH '(' IDENTIFICADOR . error rep_switch '}' '.'  (26)
	sentencia_switch : SWITCH '(' IDENTIFICADOR . ')' error rep_switch '}' '.'  (27)

	error  shift 108
	')'  shift 109
	.  error


state 68
	declaracion_funcion : tipo error IDENTIFICADOR . '{' bloques RETURN '(' expresion ')' '.' '}'  (37)

	'{'  shift 110
	.  error


state 69
	declaracion_funcion : tipo FUNCTION error . '{' bloques RETURN '(' expresion ')' '.' '}'  (38)

	'{'  shift 111
	.  error


state 70
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR . '{' bloques RETURN '(' expresion ')' '.' '}'  (34)
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR . error bloques RETURN '(' expresion ')' '.' '}'  (39)

	error  shift 112
	'{'  shift 113
	.  error


state 71
	declaracion_funcion : tipo MOVE FUNCTION . IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}'  (35)

	IDENTIFICADOR  shift 114
	.  error


state 72
	declaracion_funcion : error FUNCTION IDENTIFICADOR '{' . bloques RETURN '(' expresion ')' '.' '}'  (36)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 115
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 73
	llamado_funcion : IDENTIFICADOR error ')' '.' .  (41)

	.  reduce 41


state 74
	declaracion : IDENTIFICADOR error tipo '.' .  (47)

	.  reduce 47


state 75
	asignacion : IDENTIFICADOR error expresion '.' .  (44)

	.  reduce 44


state 76
	expresion : expresion '+' . termino  (61)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	termino  goto 116
	factor  goto 49


state 77
	expresion : expresion '-' . termino  (62)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	termino  goto 117
	factor  goto 49


state 78
	termino : termino '*' . factor  (64)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	factor  goto 118


state 79
	termino : termino '/' . factor  (65)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	factor  goto 119


state 80
	llamado_funcion : IDENTIFICADOR '(' error '.' .  (42)

	.  reduce 42


state 81
	llamado_funcion : IDENTIFICADOR '(' ')' '.' .  (40)

	.  reduce 40


state 82
	asignacion : IDENTIFICADOR '=' expresion '.' .  (43)

	.  reduce 43


state 83
	declaracion : IDENTIFICADOR error . tipo '.'  (47)

	LONG  shift 6
	DOUBLE  shift 7
	.  error

	tipo  goto 46


state 84
	declaracion : IDENTIFICADOR ',' declaracion '.' .  (45)

	.  reduce 45


state 85
	declaracion : IDENTIFICADOR ':' error '.' .  (48)

	.  reduce 48


state 86
	declaracion : IDENTIFICADOR ':' tipo error .  (49)

	.  reduce 49


state 87
	declaracion : IDENTIFICADOR ':' tipo '.' .  (46)

	.  reduce 46


state 88
	sentencia_if_else : IF error ELSE bloques . END_IF '.'  (13)

	END_IF  shift 120
	.  error


state 89
	sentencia_if : IF error END_IF '.' .  (19)

	.  reduce 19


state 90
	sentencia_if_else : IF '(' error ELSE . bloques END_IF '.'  (14)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 121
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 91
	sentencia_if : IF '(' error END_IF . '.'  (20)

	'.'  shift 122
	.  error


state 92
	sentencia_if_else : IF '(' condicion error . ELSE bloques END_IF '.'  (15)
	sentencia_if : IF '(' condicion error . END_IF '.'  (21)

	ELSE  shift 123
	END_IF  shift 124
	.  error


state 93
	sentencia_if_else : IF '(' condicion ')' . THEN bloques ELSE bloques END_IF '.'  (12)
	sentencia_if_else : IF '(' condicion ')' . error ELSE bloques END_IF '.'  (16)
	sentencia_if_else : IF '(' condicion ')' . THEN error bloques END_IF '.'  (17)
	sentencia_if : IF '(' condicion ')' . THEN bloques END_IF '.'  (18)
	sentencia_if : IF '(' condicion ')' . error END_IF '.'  (22)

	error  shift 125
	THEN  shift 126
	.  error


state 94
	operador : '<' .  (55)

	.  reduce 55


state 95
	operador : '>' .  (56)

	.  reduce 56


state 96
	operador : "<=" .  (57)

	.  reduce 57


state 97
	operador : ">=" .  (58)

	.  reduce 58


state 98
	operador : "<>" .  (59)

	.  reduce 59


state 99
	operador : "==" .  (60)

	.  reduce 60


state 100
	condicion : condicion operador . expresion  (53)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	expresion  goto 127
	termino  goto 48
	factor  goto 49


state 101
	condicion : expresion operador . termino  (54)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	termino  goto 128
	factor  goto 49


state 102
	bloques : BEGIN bloques END '.' .  (7)

	.  reduce 7


state 103
	salida : OUT '(' CADENA ')' . '.'  (69)

	'.'  shift 129
	.  error


state 104
	rep_switch : CASE CONSTANTE . ':' bloques  (50)
	rep_switch : CASE CONSTANTE . error bloques  (52)

	error  shift 130
	':'  shift 131
	.  error


state 105
	rep_switch : rep_switch CASE . CONSTANTE ':' bloques  (51)

	CONSTANTE  shift 132
	.  error


state 106
	sentencia_switch : SWITCH error rep_switch '}' . '.'  (24)

	'.'  shift 133
	.  error


state 107
	sentencia_switch : SWITCH '(' error rep_switch . '}' '.'  (25)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloques  (51)

	CASE  shift 105
	'}'  shift 134
	.  error


state 108
	sentencia_switch : SWITCH '(' IDENTIFICADOR error . rep_switch '}' '.'  (26)

	CASE  shift 64
	.  error

	rep_switch  goto 135


state 109
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' . '{' rep_switch '}' '.'  (23)
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' . error rep_switch '}' '.'  (27)

	error  shift 136
	'{'  shift 137
	.  error


state 110
	declaracion_funcion : tipo error IDENTIFICADOR '{' . bloques RETURN '(' expresion ')' '.' '}'  (37)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 138
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 111
	declaracion_funcion : tipo FUNCTION error '{' . bloques RETURN '(' expresion ')' '.' '}'  (38)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 139
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 112
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR error . bloques RETURN '(' expresion ')' '.' '}'  (39)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 140
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 113
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' . bloques RETURN '(' expresion ')' '.' '}'  (34)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 141
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 114
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR . '{' bloques RETURN '(' expresion ')' '.' '}'  (35)

	'{'  shift 142
	.  error


state 115
	declaracion_funcion : error FUNCTION IDENTIFICADOR '{' bloques . RETURN '(' expresion ')' '.' '}'  (36)

	RETURN  shift 143
	.  error


state 116
	expresion : expresion '+' termino .  (61)
	termino : termino . '*' factor  (64)
	termino : termino . '/' factor  (65)

	'*'  shift 78
	'/'  shift 79
	error  reduce 61
	'.'  reduce 61
	')'  reduce 61
	'<'  reduce 61
	'>'  reduce 61
	"<="  reduce 61
	">="  reduce 61
	"<>"  reduce 61
	"=="  reduce 61
	'+'  reduce 61
	'-'  reduce 61


state 117
	expresion : expresion '-' termino .  (62)
	termino : termino . '*' factor  (64)
	termino : termino . '/' factor  (65)

	'*'  shift 78
	'/'  shift 79
	error  reduce 62
	'.'  reduce 62
	')'  reduce 62
	'<'  reduce 62
	'>'  reduce 62
	"<="  reduce 62
	">="  reduce 62
	"<>"  reduce 62
	"=="  reduce 62
	'+'  reduce 62
	'-'  reduce 62


state 118
	termino : termino '*' factor .  (64)

	.  reduce 64


state 119
	termino : termino '/' factor .  (65)

	.  reduce 65


state 120
	sentencia_if_else : IF error ELSE bloques END_IF . '.'  (13)

	'.'  shift 144
	.  error


state 121
	sentencia_if_else : IF '(' error ELSE bloques . END_IF '.'  (14)

	END_IF  shift 145
	.  error


state 122
	sentencia_if : IF '(' error END_IF '.' .  (20)

	.  reduce 20


state 123
	sentencia_if_else : IF '(' condicion error ELSE . bloques END_IF '.'  (15)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 146
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 124
	sentencia_if : IF '(' condicion error END_IF . '.'  (21)

	'.'  shift 147
	.  error


state 125
	sentencia_if_else : IF '(' condicion ')' error . ELSE bloques END_IF '.'  (16)
	sentencia_if : IF '(' condicion ')' error . END_IF '.'  (22)

	ELSE  shift 148
	END_IF  shift 149
	.  error


state 126
	sentencia_if_else : IF '(' condicion ')' THEN . bloques ELSE bloques END_IF '.'  (12)
	sentencia_if_else : IF '(' condicion ')' THEN . error bloques END_IF '.'  (17)
	sentencia_if : IF '(' condicion ')' THEN . bloques END_IF '.'  (18)

	error  shift 150
	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 151
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 127
	condicion : condicion operador expresion .  (53)
	expresion : expresion . '+' termino  (61)
	expresion : expresion . '-' termino  (62)

	'+'  shift 76
	'-'  shift 77
	error  reduce 53
	')'  reduce 53
	'<'  reduce 53
	'>'  reduce 53
	"<="  reduce 53
	">="  reduce 53
	"<>"  reduce 53
	"=="  reduce 53


state 128
	condicion : expresion operador termino .  (54)
	termino : termino . '*' factor  (64)
	termino : termino . '/' factor  (65)

	'*'  shift 78
	'/'  shift 79
	error  reduce 54
	')'  reduce 54
	'<'  reduce 54
	'>'  reduce 54
	"<="  reduce 54
	">="  reduce 54
	"<>"  reduce 54
	"=="  reduce 54


state 129
	salida : OUT '(' CADENA ')' '.' .  (69)

	.  reduce 69


state 130
	rep_switch : CASE CONSTANTE error . bloques  (52)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 152
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 131
	rep_switch : CASE CONSTANTE ':' . bloques  (50)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 153
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 132
	rep_switch : rep_switch CASE CONSTANTE . ':' bloques  (51)

	':'  shift 154
	.  error


state 133
	sentencia_switch : SWITCH error rep_switch '}' '.' .  (24)

	.  reduce 24


state 134
	sentencia_switch : SWITCH '(' error rep_switch '}' . '.'  (25)

	'.'  shift 155
	.  error


state 135
	sentencia_switch : SWITCH '(' IDENTIFICADOR error rep_switch . '}' '.'  (26)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloques  (51)

	CASE  shift 105
	'}'  shift 156
	.  error


state 136
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' error . rep_switch '}' '.'  (27)

	CASE  shift 64
	.  error

	rep_switch  goto 157


state 137
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' . rep_switch '}' '.'  (23)

	CASE  shift 64
	.  error

	rep_switch  goto 158


state 138
	declaracion_funcion : tipo error IDENTIFICADOR '{' bloques . RETURN '(' expresion ')' '.' '}'  (37)

	RETURN  shift 159
	.  error


state 139
	declaracion_funcion : tipo FUNCTION error '{' bloques . RETURN '(' expresion ')' '.' '}'  (38)

	RETURN  shift 160
	.  error


state 140
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR error bloques . RETURN '(' expresion ')' '.' '}'  (39)

	RETURN  shift 161
	.  error


state 141
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloques . RETURN '(' expresion ')' '.' '}'  (34)

	RETURN  shift 162
	.  error


state 142
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' . bloques RETURN '(' expresion ')' '.' '}'  (35)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 163
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 143
	declaracion_funcion : error FUNCTION IDENTIFICADOR '{' bloques RETURN . '(' expresion ')' '.' '}'  (36)

	'('  shift 164
	.  error


state 144
	sentencia_if_else : IF error ELSE bloques END_IF '.' .  (13)

	.  reduce 13


state 145
	sentencia_if_else : IF '(' error ELSE bloques END_IF . '.'  (14)

	'.'  shift 165
	.  error


state 146
	sentencia_if_else : IF '(' condicion error ELSE bloques . END_IF '.'  (15)

	END_IF  shift 166
	.  error


state 147
	sentencia_if : IF '(' condicion error END_IF '.' .  (21)

	.  reduce 21


state 148
	sentencia_if_else : IF '(' condicion ')' error ELSE . bloques END_IF '.'  (16)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 167
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 149
	sentencia_if : IF '(' condicion ')' error END_IF . '.'  (22)

	'.'  shift 168
	.  error


state 150
	sentencia_if_else : IF '(' condicion ')' THEN error . bloques END_IF '.'  (17)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 169
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 151
	sentencia_if_else : IF '(' condicion ')' THEN bloques . ELSE bloques END_IF '.'  (12)
	sentencia_if : IF '(' condicion ')' THEN bloques . END_IF '.'  (18)

	ELSE  shift 170
	END_IF  shift 171
	.  error


state 152
	rep_switch : CASE CONSTANTE error bloques .  (52)

	.  reduce 52


state 153
	rep_switch : CASE CONSTANTE ':' bloques .  (50)

	.  reduce 50


state 154
	rep_switch : rep_switch CASE CONSTANTE ':' . bloques  (51)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 172
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 155
	sentencia_switch : SWITCH '(' error rep_switch '}' '.' .  (25)

	.  reduce 25


state 156
	sentencia_switch : SWITCH '(' IDENTIFICADOR error rep_switch '}' . '.'  (26)

	'.'  shift 173
	.  error


state 157
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' error rep_switch . '}' '.'  (27)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloques  (51)

	CASE  shift 105
	'}'  shift 174
	.  error


state 158
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch . '}' '.'  (23)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloques  (51)

	CASE  shift 105
	'}'  shift 175
	.  error


state 159
	declaracion_funcion : tipo error IDENTIFICADOR '{' bloques RETURN . '(' expresion ')' '.' '}'  (37)

	'('  shift 176
	.  error


state 160
	declaracion_funcion : tipo FUNCTION error '{' bloques RETURN . '(' expresion ')' '.' '}'  (38)

	'('  shift 177
	.  error


state 161
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR error bloques RETURN . '(' expresion ')' '.' '}'  (39)

	'('  shift 178
	.  error


state 162
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN . '(' expresion ')' '.' '}'  (34)

	'('  shift 179
	.  error


state 163
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques . RETURN '(' expresion ')' '.' '}'  (35)

	RETURN  shift 180
	.  error


state 164
	declaracion_funcion : error FUNCTION IDENTIFICADOR '{' bloques RETURN '(' . expresion ')' '.' '}'  (36)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	expresion  goto 181
	termino  goto 48
	factor  goto 49


state 165
	sentencia_if_else : IF '(' error ELSE bloques END_IF '.' .  (14)

	.  reduce 14


state 166
	sentencia_if_else : IF '(' condicion error ELSE bloques END_IF . '.'  (15)

	'.'  shift 182
	.  error


state 167
	sentencia_if_else : IF '(' condicion ')' error ELSE bloques . END_IF '.'  (16)

	END_IF  shift 183
	.  error


state 168
	sentencia_if : IF '(' condicion ')' error END_IF '.' .  (22)

	.  reduce 22


state 169
	sentencia_if_else : IF '(' condicion ')' THEN error bloques . END_IF '.'  (17)

	END_IF  shift 184
	.  error


state 170
	sentencia_if_else : IF '(' condicion ')' THEN bloques ELSE . bloques END_IF '.'  (12)

	IDENTIFICADOR  shift 2
	IF  shift 3
	BEGIN  shift 4
	OUT  shift 5
	SWITCH  shift 8
	.  error

	bloques  goto 185
	bloque_para_funcion  goto 14
	sentencia_if_else  goto 15
	sentencia_if  goto 16
	sentencia_switch  goto 17
	sentencias  goto 18
	sentencia_unica  goto 19
	declaracion  goto 20
	asignacion  goto 21
	salida  goto 22
	llamado_funcion  goto 23


state 171
	sentencia_if : IF '(' condicion ')' THEN bloques END_IF . '.'  (18)

	'.'  shift 186
	.  error


state 172
	rep_switch : rep_switch CASE CONSTANTE ':' bloques .  (51)

	.  reduce 51


state 173
	sentencia_switch : SWITCH '(' IDENTIFICADOR error rep_switch '}' '.' .  (26)

	.  reduce 26


state 174
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' error rep_switch '}' . '.'  (27)

	'.'  shift 187
	.  error


state 175
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' . '.'  (23)

	'.'  shift 188
	.  error


state 176
	declaracion_funcion : tipo error IDENTIFICADOR '{' bloques RETURN '(' . expresion ')' '.' '}'  (37)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	expresion  goto 189
	termino  goto 48
	factor  goto 49


state 177
	declaracion_funcion : tipo FUNCTION error '{' bloques RETURN '(' . expresion ')' '.' '}'  (38)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	expresion  goto 190
	termino  goto 48
	factor  goto 49


state 178
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR error bloques RETURN '(' . expresion ')' '.' '}'  (39)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	expresion  goto 191
	termino  goto 48
	factor  goto 49


state 179
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' . expresion ')' '.' '}'  (34)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	expresion  goto 192
	termino  goto 48
	factor  goto 49


state 180
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN . '(' expresion ')' '.' '}'  (35)

	'('  shift 193
	.  error


state 181
	declaracion_funcion : error FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion . ')' '.' '}'  (36)
	expresion : expresion . '+' termino  (61)
	expresion : expresion . '-' termino  (62)

	')'  shift 194
	'+'  shift 76
	'-'  shift 77
	.  error


state 182
	sentencia_if_else : IF '(' condicion error ELSE bloques END_IF '.' .  (15)

	.  reduce 15


state 183
	sentencia_if_else : IF '(' condicion ')' error ELSE bloques END_IF . '.'  (16)

	'.'  shift 195
	.  error


state 184
	sentencia_if_else : IF '(' condicion ')' THEN error bloques END_IF . '.'  (17)

	'.'  shift 196
	.  error


state 185
	sentencia_if_else : IF '(' condicion ')' THEN bloques ELSE bloques . END_IF '.'  (12)

	END_IF  shift 197
	.  error


state 186
	sentencia_if : IF '(' condicion ')' THEN bloques END_IF '.' .  (18)

	.  reduce 18


state 187
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' error rep_switch '}' '.' .  (27)

	.  reduce 27


state 188
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' '{' rep_switch '}' '.' .  (23)

	.  reduce 23


state 189
	declaracion_funcion : tipo error IDENTIFICADOR '{' bloques RETURN '(' expresion . ')' '.' '}'  (37)
	expresion : expresion . '+' termino  (61)
	expresion : expresion . '-' termino  (62)

	')'  shift 198
	'+'  shift 76
	'-'  shift 77
	.  error


state 190
	declaracion_funcion : tipo FUNCTION error '{' bloques RETURN '(' expresion . ')' '.' '}'  (38)
	expresion : expresion . '+' termino  (61)
	expresion : expresion . '-' termino  (62)

	')'  shift 199
	'+'  shift 76
	'-'  shift 77
	.  error


state 191
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR error bloques RETURN '(' expresion . ')' '.' '}'  (39)
	expresion : expresion . '+' termino  (61)
	expresion : expresion . '-' termino  (62)

	')'  shift 200
	'+'  shift 76
	'-'  shift 77
	.  error


state 192
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion . ')' '.' '}'  (34)
	expresion : expresion . '+' termino  (61)
	expresion : expresion . '-' termino  (62)

	')'  shift 201
	'+'  shift 76
	'-'  shift 77
	.  error


state 193
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' . expresion ')' '.' '}'  (35)

	IDENTIFICADOR  shift 43
	CONSTANTE  shift 44
	.  error

	expresion  goto 202
	termino  goto 48
	factor  goto 49


state 194
	declaracion_funcion : error FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' . '.' '}'  (36)

	'.'  shift 203
	.  error


state 195
	sentencia_if_else : IF '(' condicion ')' error ELSE bloques END_IF '.' .  (16)

	.  reduce 16


state 196
	sentencia_if_else : IF '(' condicion ')' THEN error bloques END_IF '.' .  (17)

	.  reduce 17


state 197
	sentencia_if_else : IF '(' condicion ')' THEN bloques ELSE bloques END_IF . '.'  (12)

	'.'  shift 204
	.  error


state 198
	declaracion_funcion : tipo error IDENTIFICADOR '{' bloques RETURN '(' expresion ')' . '.' '}'  (37)

	'.'  shift 205
	.  error


state 199
	declaracion_funcion : tipo FUNCTION error '{' bloques RETURN '(' expresion ')' . '.' '}'  (38)

	'.'  shift 206
	.  error


state 200
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR error bloques RETURN '(' expresion ')' . '.' '}'  (39)

	'.'  shift 207
	.  error


state 201
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' . '.' '}'  (34)

	'.'  shift 208
	.  error


state 202
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion . ')' '.' '}'  (35)
	expresion : expresion . '+' termino  (61)
	expresion : expresion . '-' termino  (62)

	')'  shift 209
	'+'  shift 76
	'-'  shift 77
	.  error


state 203
	declaracion_funcion : error FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' . '}'  (36)

	'}'  shift 210
	.  error


state 204
	sentencia_if_else : IF '(' condicion ')' THEN bloques ELSE bloques END_IF '.' .  (12)

	.  reduce 12


state 205
	declaracion_funcion : tipo error IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' . '}'  (37)

	'}'  shift 211
	.  error


state 206
	declaracion_funcion : tipo FUNCTION error '{' bloques RETURN '(' expresion ')' '.' . '}'  (38)

	'}'  shift 212
	.  error


state 207
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR error bloques RETURN '(' expresion ')' '.' . '}'  (39)

	'}'  shift 213
	.  error


state 208
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' . '}'  (34)

	'}'  shift 214
	.  error


state 209
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' . '.' '}'  (35)

	'.'  shift 215
	.  error


state 210
	declaracion_funcion : error FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}' .  (36)

	.  reduce 36


state 211
	declaracion_funcion : tipo error IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}' .  (37)

	.  reduce 37


state 212
	declaracion_funcion : tipo FUNCTION error '{' bloques RETURN '(' expresion ')' '.' '}' .  (38)

	.  reduce 38


state 213
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR error bloques RETURN '(' expresion ')' '.' '}' .  (39)

	.  reduce 39


state 214
	declaracion_funcion : tipo FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}' .  (34)

	.  reduce 34


state 215
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' . '}'  (35)

	'}'  shift 216
	.  error


state 216
	declaracion_funcion : tipo MOVE FUNCTION IDENTIFICADOR '{' bloques RETURN '(' expresion ')' '.' '}' .  (35)

	.  reduce 35


State 18 contains 2 shift/reduce conflicts.


37 terminals, 23 nonterminals
72 grammar rules, 217 states
