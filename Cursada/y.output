   0  $accept : programa $end

   1  programa : bloque

   2  bloque : bloque_comun
   3         | declaracion_funcion
   4         | bloque bloque_comun
   5         | bloque declaracion_funcion

   6  bloque_comun : bloque_control
   7               | declaracion

   8  bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}'

   9  bloque_sentencias_funcion : sentencias
  10                            | declaracion
  11                            | bloque_sentencias_funcion sentencias
  12                            | bloque_sentencias_funcion declaracion

  13  bloque_control : sentencias
  14                 | BEGIN bloque_sentencias END '.'

  15  bloque_sentencias : sentencias
  16                    | bloque_sentencias sentencias

  17  sentencias : sentencia_unica_control
  18             | sentencia_unica_ejecutable

  19  sentencia_unica_control : sentencia_if
  20                          | sentencia_switch

  21  sentencia_unica_ejecutable : asignacion
  22                             | salida
  23                             | llamado_funcion

  24  declaracion_funcion : encabezado_funcion bloque_funcion

  25  encabezado_funcion : tipo FUNCTION IDENTIFICADOR
  26                     | tipo MOVE FUNCTION IDENTIFICADOR

  27  declaracion : lista_variables ':' tipo '.'

  28  $$1 :

  29  sentencia_if : IF '(' condicion ')' THEN $$1 cuerpo_if

  30  cuerpo_if : bloque_control END_IF '.'

  31  $$2 :

  32  cuerpo_if : bloque_control $$2 ELSE bloque_control END_IF '.'

  33  $$3 :

  34  sentencia_switch : SWITCH '(' IDENTIFICADOR ')' $$3 cuerpo_switch

  35  cuerpo_switch : '{' rep_switch '}' '.'

  36  rep_switch : CASE CONSTANTE ':' bloque_control
  37             | rep_switch CASE CONSTANTE ':' bloque_control

  38  asignacion : IDENTIFICADOR '=' expresion '.'

  39  salida : OUT '(' CADENA ')' '.'

  40  llamado_funcion : IDENTIFICADOR '(' ')' '.'

  41  lista_variables : IDENTIFICADOR
  42                  | lista_variables ',' IDENTIFICADOR

  43  condicion : condicion operador expresion
  44            | expresion operador expresion

  45  operador : '<'
  46           | '>'
  47           | "<="
  48           | ">="
  49           | "<>"
  50           | "=="

  51  expresion : expresion '+' termino
  52            | expresion '-' termino
  53            | termino

  54  termino : termino '*' factor
  55          | termino '/' factor
  56          | factor

  57  factor : IDENTIFICADOR
  58         | CONSTANTE

  59  tipo : LONG
  60       | DOUBLE

state 0
	$accept : . programa $end  (0)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	.  error

	programa  goto 8
	bloque  goto 9
	bloque_comun  goto 10
	declaracion_funcion  goto 11
	bloque_control  goto 12
	declaracion  goto 13
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	encabezado_funcion  goto 22
	tipo  goto 23
	lista_variables  goto 24


state 1
	asignacion : IDENTIFICADOR . '=' expresion '.'  (38)
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (40)
	lista_variables : IDENTIFICADOR .  (41)

	'('  shift 25
	'='  shift 26
	':'  reduce 41
	','  reduce 41


state 2
	sentencia_if : IF . '(' condicion ')' THEN $$1 cuerpo_if  (29)

	'('  shift 27
	.  error


state 3
	bloque_control : BEGIN . bloque_sentencias END '.'  (14)

	IDENTIFICADOR  shift 28
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	.  error

	sentencias  goto 29
	bloque_sentencias  goto 30
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 4
	salida : OUT . '(' CADENA ')' '.'  (39)

	'('  shift 31
	.  error


state 5
	tipo : LONG .  (59)

	.  reduce 59


state 6
	tipo : DOUBLE .  (60)

	.  reduce 60


state 7
	sentencia_switch : SWITCH . '(' IDENTIFICADOR ')' $$3 cuerpo_switch  (34)

	'('  shift 32
	.  error


state 8
	$accept : programa . $end  (0)

	$end  accept


state 9
	programa : bloque .  (1)
	bloque : bloque . bloque_comun  (4)
	bloque : bloque . declaracion_funcion  (5)

	IDENTIFICADOR  shift 1
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	LONG  shift 5
	DOUBLE  shift 6
	SWITCH  shift 7
	$end  reduce 1

	bloque_comun  goto 33
	declaracion_funcion  goto 34
	bloque_control  goto 12
	declaracion  goto 13
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	encabezado_funcion  goto 22
	tipo  goto 23
	lista_variables  goto 24


state 10
	bloque : bloque_comun .  (2)

	.  reduce 2


state 11
	bloque : declaracion_funcion .  (3)

	.  reduce 3


state 12
	bloque_comun : bloque_control .  (6)

	.  reduce 6


state 13
	bloque_comun : declaracion .  (7)

	.  reduce 7


state 14
	bloque_control : sentencias .  (13)

	.  reduce 13


state 15
	sentencias : sentencia_unica_control .  (17)

	.  reduce 17


state 16
	sentencias : sentencia_unica_ejecutable .  (18)

	.  reduce 18


state 17
	sentencia_unica_control : sentencia_if .  (19)

	.  reduce 19


state 18
	sentencia_unica_control : sentencia_switch .  (20)

	.  reduce 20


state 19
	sentencia_unica_ejecutable : asignacion .  (21)

	.  reduce 21


state 20
	sentencia_unica_ejecutable : salida .  (22)

	.  reduce 22


state 21
	sentencia_unica_ejecutable : llamado_funcion .  (23)

	.  reduce 23


state 22
	declaracion_funcion : encabezado_funcion . bloque_funcion  (24)

	'{'  shift 35
	.  error

	bloque_funcion  goto 36


state 23
	encabezado_funcion : tipo . FUNCTION IDENTIFICADOR  (25)
	encabezado_funcion : tipo . MOVE FUNCTION IDENTIFICADOR  (26)

	FUNCTION  shift 37
	MOVE  shift 38
	.  error


state 24
	declaracion : lista_variables . ':' tipo '.'  (27)
	lista_variables : lista_variables . ',' IDENTIFICADOR  (42)

	':'  shift 39
	','  shift 40
	.  error


state 25
	llamado_funcion : IDENTIFICADOR '(' . ')' '.'  (40)

	')'  shift 41
	.  error


state 26
	asignacion : IDENTIFICADOR '=' . expresion '.'  (38)

	IDENTIFICADOR  shift 42
	CONSTANTE  shift 43
	.  error

	expresion  goto 44
	termino  goto 45
	factor  goto 46


state 27
	sentencia_if : IF '(' . condicion ')' THEN $$1 cuerpo_if  (29)

	IDENTIFICADOR  shift 42
	CONSTANTE  shift 43
	.  error

	expresion  goto 47
	condicion  goto 48
	termino  goto 45
	factor  goto 46


state 28
	asignacion : IDENTIFICADOR . '=' expresion '.'  (38)
	llamado_funcion : IDENTIFICADOR . '(' ')' '.'  (40)

	'('  shift 25
	'='  shift 26
	.  error


state 29
	bloque_sentencias : sentencias .  (15)

	.  reduce 15


state 30
	bloque_control : BEGIN bloque_sentencias . END '.'  (14)
	bloque_sentencias : bloque_sentencias . sentencias  (16)

	IDENTIFICADOR  shift 28
	IF  shift 2
	END  shift 49
	OUT  shift 4
	SWITCH  shift 7
	.  error

	sentencias  goto 50
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 31
	salida : OUT '(' . CADENA ')' '.'  (39)

	CADENA  shift 51
	.  error


state 32
	sentencia_switch : SWITCH '(' . IDENTIFICADOR ')' $$3 cuerpo_switch  (34)

	IDENTIFICADOR  shift 52
	.  error


state 33
	bloque : bloque bloque_comun .  (4)

	.  reduce 4


state 34
	bloque : bloque declaracion_funcion .  (5)

	.  reduce 5


state 35
	bloque_funcion : '{' . bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}'  (8)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	.  error

	declaracion  goto 53
	bloque_sentencias_funcion  goto 54
	sentencias  goto 55
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	lista_variables  goto 24


state 36
	declaracion_funcion : encabezado_funcion bloque_funcion .  (24)

	.  reduce 24


state 37
	encabezado_funcion : tipo FUNCTION . IDENTIFICADOR  (25)

	IDENTIFICADOR  shift 56
	.  error


state 38
	encabezado_funcion : tipo MOVE . FUNCTION IDENTIFICADOR  (26)

	FUNCTION  shift 57
	.  error


state 39
	declaracion : lista_variables ':' . tipo '.'  (27)

	LONG  shift 5
	DOUBLE  shift 6
	.  error

	tipo  goto 58


state 40
	lista_variables : lista_variables ',' . IDENTIFICADOR  (42)

	IDENTIFICADOR  shift 59
	.  error


state 41
	llamado_funcion : IDENTIFICADOR '(' ')' . '.'  (40)

	'.'  shift 60
	.  error


state 42
	factor : IDENTIFICADOR .  (57)

	.  reduce 57


state 43
	factor : CONSTANTE .  (58)

	.  reduce 58


state 44
	asignacion : IDENTIFICADOR '=' expresion . '.'  (38)
	expresion : expresion . '+' termino  (51)
	expresion : expresion . '-' termino  (52)

	'.'  shift 61
	'+'  shift 62
	'-'  shift 63
	.  error


state 45
	expresion : termino .  (53)
	termino : termino . '*' factor  (54)
	termino : termino . '/' factor  (55)

	'*'  shift 64
	'/'  shift 65
	')'  reduce 53
	'.'  reduce 53
	'<'  reduce 53
	'>'  reduce 53
	"<="  reduce 53
	">="  reduce 53
	"<>"  reduce 53
	"=="  reduce 53
	'+'  reduce 53
	'-'  reduce 53


state 46
	termino : factor .  (56)

	.  reduce 56


state 47
	condicion : expresion . operador expresion  (44)
	expresion : expresion . '+' termino  (51)
	expresion : expresion . '-' termino  (52)

	'<'  shift 66
	'>'  shift 67
	"<="  shift 68
	">="  shift 69
	"<>"  shift 70
	"=="  shift 71
	'+'  shift 62
	'-'  shift 63
	.  error

	operador  goto 72


state 48
	sentencia_if : IF '(' condicion . ')' THEN $$1 cuerpo_if  (29)
	condicion : condicion . operador expresion  (43)

	')'  shift 73
	'<'  shift 66
	'>'  shift 67
	"<="  shift 68
	">="  shift 69
	"<>"  shift 70
	"=="  shift 71
	.  error

	operador  goto 74


state 49
	bloque_control : BEGIN bloque_sentencias END . '.'  (14)

	'.'  shift 75
	.  error


state 50
	bloque_sentencias : bloque_sentencias sentencias .  (16)

	.  reduce 16


state 51
	salida : OUT '(' CADENA . ')' '.'  (39)

	')'  shift 76
	.  error


state 52
	sentencia_switch : SWITCH '(' IDENTIFICADOR . ')' $$3 cuerpo_switch  (34)

	')'  shift 77
	.  error


state 53
	bloque_sentencias_funcion : declaracion .  (10)

	.  reduce 10


state 54
	bloque_funcion : '{' bloque_sentencias_funcion . RETURN '(' expresion ')' '.' '}'  (8)
	bloque_sentencias_funcion : bloque_sentencias_funcion . sentencias  (11)
	bloque_sentencias_funcion : bloque_sentencias_funcion . declaracion  (12)

	IDENTIFICADOR  shift 1
	IF  shift 2
	OUT  shift 4
	SWITCH  shift 7
	RETURN  shift 78
	.  error

	declaracion  goto 79
	sentencias  goto 80
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	lista_variables  goto 24


state 55
	bloque_sentencias_funcion : sentencias .  (9)

	.  reduce 9


state 56
	encabezado_funcion : tipo FUNCTION IDENTIFICADOR .  (25)

	.  reduce 25


state 57
	encabezado_funcion : tipo MOVE FUNCTION . IDENTIFICADOR  (26)

	IDENTIFICADOR  shift 81
	.  error


state 58
	declaracion : lista_variables ':' tipo . '.'  (27)

	'.'  shift 82
	.  error


state 59
	lista_variables : lista_variables ',' IDENTIFICADOR .  (42)

	.  reduce 42


state 60
	llamado_funcion : IDENTIFICADOR '(' ')' '.' .  (40)

	.  reduce 40


state 61
	asignacion : IDENTIFICADOR '=' expresion '.' .  (38)

	.  reduce 38


state 62
	expresion : expresion '+' . termino  (51)

	IDENTIFICADOR  shift 42
	CONSTANTE  shift 43
	.  error

	termino  goto 83
	factor  goto 46


state 63
	expresion : expresion '-' . termino  (52)

	IDENTIFICADOR  shift 42
	CONSTANTE  shift 43
	.  error

	termino  goto 84
	factor  goto 46


state 64
	termino : termino '*' . factor  (54)

	IDENTIFICADOR  shift 42
	CONSTANTE  shift 43
	.  error

	factor  goto 85


state 65
	termino : termino '/' . factor  (55)

	IDENTIFICADOR  shift 42
	CONSTANTE  shift 43
	.  error

	factor  goto 86


state 66
	operador : '<' .  (45)

	.  reduce 45


state 67
	operador : '>' .  (46)

	.  reduce 46


state 68
	operador : "<=" .  (47)

	.  reduce 47


state 69
	operador : ">=" .  (48)

	.  reduce 48


state 70
	operador : "<>" .  (49)

	.  reduce 49


state 71
	operador : "==" .  (50)

	.  reduce 50


state 72
	condicion : expresion operador . expresion  (44)

	IDENTIFICADOR  shift 42
	CONSTANTE  shift 43
	.  error

	expresion  goto 87
	termino  goto 45
	factor  goto 46


state 73
	sentencia_if : IF '(' condicion ')' . THEN $$1 cuerpo_if  (29)

	THEN  shift 88
	.  error


state 74
	condicion : condicion operador . expresion  (43)

	IDENTIFICADOR  shift 42
	CONSTANTE  shift 43
	.  error

	expresion  goto 89
	termino  goto 45
	factor  goto 46


state 75
	bloque_control : BEGIN bloque_sentencias END '.' .  (14)

	.  reduce 14


state 76
	salida : OUT '(' CADENA ')' . '.'  (39)

	'.'  shift 90
	.  error


state 77
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' . $$3 cuerpo_switch  (34)
	$$3 : .  (33)

	.  reduce 33

	$$3  goto 91


state 78
	bloque_funcion : '{' bloque_sentencias_funcion RETURN . '(' expresion ')' '.' '}'  (8)

	'('  shift 92
	.  error


state 79
	bloque_sentencias_funcion : bloque_sentencias_funcion declaracion .  (12)

	.  reduce 12


state 80
	bloque_sentencias_funcion : bloque_sentencias_funcion sentencias .  (11)

	.  reduce 11


state 81
	encabezado_funcion : tipo MOVE FUNCTION IDENTIFICADOR .  (26)

	.  reduce 26


state 82
	declaracion : lista_variables ':' tipo '.' .  (27)

	.  reduce 27


state 83
	expresion : expresion '+' termino .  (51)
	termino : termino . '*' factor  (54)
	termino : termino . '/' factor  (55)

	'*'  shift 64
	'/'  shift 65
	')'  reduce 51
	'.'  reduce 51
	'<'  reduce 51
	'>'  reduce 51
	"<="  reduce 51
	">="  reduce 51
	"<>"  reduce 51
	"=="  reduce 51
	'+'  reduce 51
	'-'  reduce 51


state 84
	expresion : expresion '-' termino .  (52)
	termino : termino . '*' factor  (54)
	termino : termino . '/' factor  (55)

	'*'  shift 64
	'/'  shift 65
	')'  reduce 52
	'.'  reduce 52
	'<'  reduce 52
	'>'  reduce 52
	"<="  reduce 52
	">="  reduce 52
	"<>"  reduce 52
	"=="  reduce 52
	'+'  reduce 52
	'-'  reduce 52


state 85
	termino : termino '*' factor .  (54)

	.  reduce 54


state 86
	termino : termino '/' factor .  (55)

	.  reduce 55


state 87
	condicion : expresion operador expresion .  (44)
	expresion : expresion . '+' termino  (51)
	expresion : expresion . '-' termino  (52)

	'+'  shift 62
	'-'  shift 63
	')'  reduce 44
	'<'  reduce 44
	'>'  reduce 44
	"<="  reduce 44
	">="  reduce 44
	"<>"  reduce 44
	"=="  reduce 44


state 88
	sentencia_if : IF '(' condicion ')' THEN . $$1 cuerpo_if  (29)
	$$1 : .  (28)

	.  reduce 28

	$$1  goto 93


state 89
	condicion : condicion operador expresion .  (43)
	expresion : expresion . '+' termino  (51)
	expresion : expresion . '-' termino  (52)

	'+'  shift 62
	'-'  shift 63
	')'  reduce 43
	'<'  reduce 43
	'>'  reduce 43
	"<="  reduce 43
	">="  reduce 43
	"<>"  reduce 43
	"=="  reduce 43


state 90
	salida : OUT '(' CADENA ')' '.' .  (39)

	.  reduce 39


state 91
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' $$3 . cuerpo_switch  (34)

	'{'  shift 94
	.  error

	cuerpo_switch  goto 95


state 92
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' . expresion ')' '.' '}'  (8)

	IDENTIFICADOR  shift 42
	CONSTANTE  shift 43
	.  error

	expresion  goto 96
	termino  goto 45
	factor  goto 46


state 93
	sentencia_if : IF '(' condicion ')' THEN $$1 . cuerpo_if  (29)

	IDENTIFICADOR  shift 28
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 97
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21
	cuerpo_if  goto 98


state 94
	cuerpo_switch : '{' . rep_switch '}' '.'  (35)

	CASE  shift 99
	.  error

	rep_switch  goto 100


state 95
	sentencia_switch : SWITCH '(' IDENTIFICADOR ')' $$3 cuerpo_switch .  (34)

	.  reduce 34


state 96
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion . ')' '.' '}'  (8)
	expresion : expresion . '+' termino  (51)
	expresion : expresion . '-' termino  (52)

	')'  shift 101
	'+'  shift 62
	'-'  shift 63
	.  error


state 97
	cuerpo_if : bloque_control . END_IF '.'  (30)
	cuerpo_if : bloque_control . $$2 ELSE bloque_control END_IF '.'  (32)
	$$2 : .  (31)

	END_IF  shift 102
	ELSE  reduce 31

	$$2  goto 103


state 98
	sentencia_if : IF '(' condicion ')' THEN $$1 cuerpo_if .  (29)

	.  reduce 29


state 99
	rep_switch : CASE . CONSTANTE ':' bloque_control  (36)

	CONSTANTE  shift 104
	.  error


state 100
	cuerpo_switch : '{' rep_switch . '}' '.'  (35)
	rep_switch : rep_switch . CASE CONSTANTE ':' bloque_control  (37)

	CASE  shift 105
	'}'  shift 106
	.  error


state 101
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' . '.' '}'  (8)

	'.'  shift 107
	.  error


state 102
	cuerpo_if : bloque_control END_IF . '.'  (30)

	'.'  shift 108
	.  error


state 103
	cuerpo_if : bloque_control $$2 . ELSE bloque_control END_IF '.'  (32)

	ELSE  shift 109
	.  error


state 104
	rep_switch : CASE CONSTANTE . ':' bloque_control  (36)

	':'  shift 110
	.  error


state 105
	rep_switch : rep_switch CASE . CONSTANTE ':' bloque_control  (37)

	CONSTANTE  shift 111
	.  error


state 106
	cuerpo_switch : '{' rep_switch '}' . '.'  (35)

	'.'  shift 112
	.  error


state 107
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' . '}'  (8)

	'}'  shift 113
	.  error


state 108
	cuerpo_if : bloque_control END_IF '.' .  (30)

	.  reduce 30


state 109
	cuerpo_if : bloque_control $$2 ELSE . bloque_control END_IF '.'  (32)

	IDENTIFICADOR  shift 28
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 114
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 110
	rep_switch : CASE CONSTANTE ':' . bloque_control  (36)

	IDENTIFICADOR  shift 28
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 115
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 111
	rep_switch : rep_switch CASE CONSTANTE . ':' bloque_control  (37)

	':'  shift 116
	.  error


state 112
	cuerpo_switch : '{' rep_switch '}' '.' .  (35)

	.  reduce 35


state 113
	bloque_funcion : '{' bloque_sentencias_funcion RETURN '(' expresion ')' '.' '}' .  (8)

	.  reduce 8


state 114
	cuerpo_if : bloque_control $$2 ELSE bloque_control . END_IF '.'  (32)

	END_IF  shift 117
	.  error


state 115
	rep_switch : CASE CONSTANTE ':' bloque_control .  (36)

	.  reduce 36


state 116
	rep_switch : rep_switch CASE CONSTANTE ':' . bloque_control  (37)

	IDENTIFICADOR  shift 28
	IF  shift 2
	BEGIN  shift 3
	OUT  shift 4
	SWITCH  shift 7
	.  error

	bloque_control  goto 118
	sentencias  goto 14
	sentencia_unica_control  goto 15
	sentencia_unica_ejecutable  goto 16
	sentencia_if  goto 17
	sentencia_switch  goto 18
	asignacion  goto 19
	salida  goto 20
	llamado_funcion  goto 21


state 117
	cuerpo_if : bloque_control $$2 ELSE bloque_control END_IF . '.'  (32)

	'.'  shift 119
	.  error


state 118
	rep_switch : rep_switch CASE CONSTANTE ':' bloque_control .  (37)

	.  reduce 37


state 119
	cuerpo_if : bloque_control $$2 ELSE bloque_control END_IF '.' .  (32)

	.  reduce 32


37 terminals, 32 nonterminals
61 grammar rules, 120 states
